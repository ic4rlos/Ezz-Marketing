/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6Q26EfqfPNQuydumhAEs1S
import * as React from "react";
import { AntdConfigProvider } from "@plasmicpkgs/antd5/skinny/registerConfigProvider";
import { ContentfulCredentialsProvider } from "@plasmicpkgs/plasmic-contentful";
import { CmsCredentialsProvider } from "@plasmicpkgs/plasmic-cms";
import { ParallaxProviderWrapper } from "@plasmicpkgs/react-scroll-parallax";

export default function GlobalContextsProvider(props) {
  const {
    children,
    antdConfigProviderProps,
    contentfulCredentialsProviderProps,
    cmsCredentialsProviderProps,
    parallaxProviderWrapperProps
  } = props;
  return (
    <AntdConfigProvider
      {...antdConfigProviderProps}
      borderRadius={
        antdConfigProviderProps && "borderRadius" in antdConfigProviderProps
          ? antdConfigProviderProps.borderRadius
          : 6
      }
      colorBgBase={
        antdConfigProviderProps && "colorBgBase" in antdConfigProviderProps
          ? antdConfigProviderProps.colorBgBase
          : "#ffffff"
      }
      colorError={
        antdConfigProviderProps && "colorError" in antdConfigProviderProps
          ? antdConfigProviderProps.colorError
          : "#ff4d4f"
      }
      colorInfo={
        antdConfigProviderProps && "colorInfo" in antdConfigProviderProps
          ? antdConfigProviderProps.colorInfo
          : "#1677ff"
      }
      colorPrimary={
        antdConfigProviderProps && "colorPrimary" in antdConfigProviderProps
          ? antdConfigProviderProps.colorPrimary
          : "#1677ff"
      }
      colorSuccess={
        antdConfigProviderProps && "colorSuccess" in antdConfigProviderProps
          ? antdConfigProviderProps.colorSuccess
          : "#52c41a"
      }
      colorWarning={
        antdConfigProviderProps && "colorWarning" in antdConfigProviderProps
          ? antdConfigProviderProps.colorWarning
          : "#faad14"
      }
      controlHeight={
        antdConfigProviderProps && "controlHeight" in antdConfigProviderProps
          ? antdConfigProviderProps.controlHeight
          : 32
      }
      defaultDark={
        antdConfigProviderProps && "defaultDark" in antdConfigProviderProps
          ? antdConfigProviderProps.defaultDark
          : false
      }
      lineWidth={
        antdConfigProviderProps && "lineWidth" in antdConfigProviderProps
          ? antdConfigProviderProps.lineWidth
          : 1
      }
      loadingText={
        antdConfigProviderProps && "loadingText" in antdConfigProviderProps
          ? antdConfigProviderProps.loadingText
          : undefined
      }
      removeLoading={
        antdConfigProviderProps && "removeLoading" in antdConfigProviderProps
          ? antdConfigProviderProps.removeLoading
          : undefined
      }
      sizeStep={
        antdConfigProviderProps && "sizeStep" in antdConfigProviderProps
          ? antdConfigProviderProps.sizeStep
          : 4
      }
      sizeUnit={
        antdConfigProviderProps && "sizeUnit" in antdConfigProviderProps
          ? antdConfigProviderProps.sizeUnit
          : 4
      }
      themeStyles={
        antdConfigProviderProps && "themeStyles" in antdConfigProviderProps
          ? antdConfigProviderProps.themeStyles
          : true
          ? {
              fontFamily: "Inter",
              fontSize: "16px",
              fontWeight: "400",
              lineHeight: "1.5",
              color: "#535353",
              letterSpacing: "normal"
            }
          : undefined
      }
      wireframe={
        antdConfigProviderProps && "wireframe" in antdConfigProviderProps
          ? antdConfigProviderProps.wireframe
          : false
      }
    >
      <ContentfulCredentialsProvider
        {...contentfulCredentialsProviderProps}
        accessToken={
          contentfulCredentialsProviderProps &&
          "accessToken" in contentfulCredentialsProviderProps
            ? contentfulCredentialsProviderProps.accessToken
            : "aWvf6oSLTuqxKCxSUpokajdQr84hGQFE6zoJG7DVVLg"
        }
        environment={
          contentfulCredentialsProviderProps &&
          "environment" in contentfulCredentialsProviderProps
            ? contentfulCredentialsProviderProps.environment
            : "master"
        }
        space={
          contentfulCredentialsProviderProps &&
          "space" in contentfulCredentialsProviderProps
            ? contentfulCredentialsProviderProps.space
            : "lmfbwqzbh93n"
        }
      >
        <CmsCredentialsProvider
          {...cmsCredentialsProviderProps}
          databaseId={
            cmsCredentialsProviderProps &&
            "databaseId" in cmsCredentialsProviderProps
              ? cmsCredentialsProviderProps.databaseId
              : undefined
          }
          databaseToken={
            cmsCredentialsProviderProps &&
            "databaseToken" in cmsCredentialsProviderProps
              ? cmsCredentialsProviderProps.databaseToken
              : undefined
          }
          host={
            cmsCredentialsProviderProps && "host" in cmsCredentialsProviderProps
              ? cmsCredentialsProviderProps.host
              : "https://data.plasmic.app"
          }
          locale={
            cmsCredentialsProviderProps &&
            "locale" in cmsCredentialsProviderProps
              ? cmsCredentialsProviderProps.locale
              : undefined
          }
        >
          <ParallaxProviderWrapper
            {...parallaxProviderWrapperProps}
            scrollAxis={
              parallaxProviderWrapperProps &&
              "scrollAxis" in parallaxProviderWrapperProps
                ? parallaxProviderWrapperProps.scrollAxis
                : undefined
            }
          >
            {children}
          </ParallaxProviderWrapper>
        </CmsCredentialsProvider>
      </ContentfulCredentialsProvider>
    </AntdConfigProvider>
  );
}
