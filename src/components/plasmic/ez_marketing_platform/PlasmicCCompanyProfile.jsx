/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6Q26EfqfPNQuydumhAEs1S
// Component: GFbxhsky0EE_
import * as React from "react";
import {
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  initializeCodeComponentStates,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";
import { usePlasmicInvalidate } from "@plasmicapp/react-web/lib/data-sources";
import { NavigationBar } from "@plasmicpkgs/plasmic-nav";
import { AntdDropdown } from "@plasmicpkgs/antd5/skinny/registerDropdown";
import { AntdMenuItem } from "@plasmicpkgs/antd5/skinny/registerMenu";
import { AntdButton } from "@plasmicpkgs/antd5/skinny/registerButton";
import Dialog from "../../Dialog"; // plasmic-import: uwSU6gicCc_e/component
import LoginButton from "../../LoginButton"; // plasmic-import: sda60oPQ2thQ/component
import { AntdRate } from "@plasmicpkgs/antd5/skinny/registerRate";
import { AntdPagination } from "@plasmicpkgs/antd5/skinny/registerPagination";
import { paginationHelpers as AntdPagination_Helpers } from "@plasmicpkgs/antd5/skinny/registerPagination";
import { SliderWrapper } from "@plasmicpkgs/react-slick";
import { sliderHelpers as SliderWrapper_Helpers } from "@plasmicpkgs/react-slick";
import { AntdTooltip } from "@plasmicpkgs/antd5/skinny/registerTooltip";
import { Dialog as Dialog2 } from "@plasmicpkgs/radix-ui";
import { DialogContent } from "@plasmicpkgs/radix-ui";
import { DialogClose } from "@plasmicpkgs/radix-ui";
import { useScreenVariants as useScreenVariantsnnPusS1DHa } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: nnPus_s1dHa_/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 6Q26EfqfPNQuydumhAEs1S/projectcss
import sty from "./PlasmicCCompanyProfile.module.css"; // plasmic-import: GFbxhsky0EE_/css
import WritingSvgrepoComSvgIcon from "./icons/PlasmicIcon__WritingSvgrepoComSvg"; // plasmic-import: Hs8FkkBmGwrt/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: DSe5zJXs0px5/icon
import GlobalSvgrepoComSvgIcon from "./icons/PlasmicIcon__GlobalSvgrepoComSvg"; // plasmic-import: 8m1vHOK3aaXa/icon
import ReportSvgrepoComSvgIcon from "./icons/PlasmicIcon__ReportSvgrepoComSvg"; // plasmic-import: a-8qUDv5D2bw/icon
import logoPng2S9Gcm9LGTbT6 from "./images/logoPng2.png"; // plasmic-import: s9GCM9lGTbT6/picture
import zqLeeVbDjv88IbcUnsplashJpgXtkCnxecXa1Y from "./images/zqLeeVbDjv88IbcUnsplashJpg.jpg"; // plasmic-import: xtkCNXECXa1Y/picture

createPlasmicElementProxy;

export const PlasmicCCompanyProfile__VariantProps = new Array();

export const PlasmicCCompanyProfile__ArgProps = new Array();

const $$ = {};

function PlasmicCCompanyProfile__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "sliderCarousel.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,
        refName: "sliderCarousel",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      },
      {
        path: "sliderCarousel2.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,
        refName: "sliderCarousel2",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      },
      {
        path: "sliderCarousel3.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,
        refName: "sliderCarousel3",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      },
      {
        path: "sliderCarousel4.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,
        refName: "sliderCarousel4",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      },
      {
        path: "dialogGrid.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "rate9.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "rate11.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "rate.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "textarea.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "dialogGrid2.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "rate10.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "rate12.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "rate2.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "textarea2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "dialogGrid3.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "rate13.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "rate14.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "rate3.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "textarea3.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "dialogGrid4.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "rate15.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "rate16.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "rate4.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "textarea4.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "dialogGrid5.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "rate17.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "rate18.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "rate5.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "textarea5.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "dialogGrid6.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "rate19.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "rate20.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "rate6.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "textarea6.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "dialogGrid7.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "rate21.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "rate22.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "rate7.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "textarea7.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "dialogGrid8.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "rate23.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "rate24.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "rate8.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "textarea8.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "dialog7.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "rate25.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 5
      },
      {
        path: "rate26.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 5
      },
      {
        path: "rate27.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 5
      },
      {
        path: "rate28.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 5
      },
      {
        path: "pagination7.currentPage",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 1,
        onMutate: generateOnMutateForSpec("currentPage", AntdPagination_Helpers)
      },
      {
        path: "pagination7.pageSize",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 10,
        onMutate: generateOnMutateForSpec("pageSize", AntdPagination_Helpers)
      },
      {
        path: "pagination7.startIndex",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,
        onMutate: generateOnMutateForSpec("startIndex", AntdPagination_Helpers)
      },
      {
        path: "pagination7.endIndex",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,
        onMutate: generateOnMutateForSpec("endIndex", AntdPagination_Helpers)
      },
      {
        path: "rate29.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 5
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const dataSourcesCtx = usePlasmicDataSourceContext();
  const plasmicInvalidate = usePlasmicInvalidate();
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsnnPusS1DHa()
  });
  return (
    <React.Fragment>
      <div
        data-plasmic-name={"root"}
        data-plasmic-override={overrides.root}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          projectcss.plasmic_tokens,
          plasmic_antd_5_hostless_css.plasmic_tokens,
          plasmic_plasmic_rich_components_css.plasmic_tokens,
          sty.root
        )}
      >
        <Stack__
          as={"div"}
          data-plasmic-name={"topBar"}
          data-plasmic-override={overrides.topBar}
          hasGap={true}
          className={classNames(projectcss.all, sty.topBar)}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__ldqZ)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__wwPwR)}
            >
              <NavigationBar
                data-plasmic-name={"navigationBar"}
                data-plasmic-override={overrides.navigationBar}
                brand={
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__s85Gv
                    )}
                    href={`/corporative-page`}
                    onClick={async event => {
                      const $steps = {};
                      $steps["refreshData"] = true
                        ? (() => {
                            const actionArgs = {
                              queryInvalidation: ["plasmic_refresh_all"]
                            };
                            return (async ({ queryInvalidation }) => {
                              if (!queryInvalidation) {
                                return;
                              }
                              await plasmicInvalidate(queryInvalidation);
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["refreshData"] != null &&
                        typeof $steps["refreshData"] === "object" &&
                        typeof $steps["refreshData"].then === "function"
                      ) {
                        $steps["refreshData"] = await $steps["refreshData"];
                      }
                    }}
                    platform={"react"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__td9QN)}
                      displayHeight={"30px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      src={{
                        src: logoPng2S9Gcm9LGTbT6,
                        fullWidth: 190,
                        fullHeight: 100,
                        aspectRatio: undefined
                      }}
                    />
                  </PlasmicLink__>
                }
                className={classNames("__wab_instance", sty.navigationBar)}
                closeButton={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__oOy16)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={"https://static1.plasmic.app/close.svg"}
                  />
                }
                itemsGap={8}
                menuItems={
                  <React.Fragment>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__cbo7Y
                      )}
                      href={`/company-profile`}
                      platform={"react"}
                    >
                      {"Company\nprofile"}
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__pJlK4
                      )}
                      href={`/services-dashboard`}
                      platform={"react"}
                    >
                      {"Service\nDashboard"}
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___5TOx9
                      )}
                      platform={"react"}
                    >
                      {"Market\nTrends"}
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__nbzkh
                      )}
                      href={`/find-a-affiliate`}
                      platform={"react"}
                    >
                      {"Find a \naffiliate"}
                    </PlasmicLink__>
                  </React.Fragment>
                }
                openButton={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__nf2LV)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    height={``}
                    src={"https://static1.plasmic.app/menu.svg"}
                    width={``}
                  />
                }
                responsiveBreakpoint={768}
              />

              <AntdDropdown
                data-plasmic-name={"account"}
                data-plasmic-override={overrides.account}
                className={classNames("__wab_instance", sty.account)}
                dropdownMenuScopeClassName={sty["account__dropdownMenu"]}
                menuClassName={classNames({ [sty["pcls_UW2UX4IUqTTl"]]: true })}
                menuItemClassName={classNames({
                  [sty["pcls_JQ7uxxwnt4HV"]]: true
                })}
                menuItems={() => (
                  <React.Fragment>
                    <AntdMenuItem
                      className={classNames(
                        "__wab_instance",
                        sty.menuItem__bZsIr
                      )}
                      key={"menu-item-1"}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___6Jf2
                        )}
                      >
                        {"Menu item"}
                      </div>
                    </AntdMenuItem>
                    <AntdMenuItem
                      className={classNames(
                        "__wab_instance",
                        sty.menuItem__mXl4Z
                      )}
                      key={"menu-item-2"}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pg20Z
                        )}
                      >
                        {"Menu item"}
                      </div>
                    </AntdMenuItem>
                  </React.Fragment>
                )}
                menuItemsJson={(() => {
                  const __composite = [
                    {
                      type: null,
                      value: "action1",
                      label: null,
                      children: null
                    },
                    {
                      type: null,
                      value: "action2",
                      label: null,
                      onClick: null
                    },
                    { type: "item" }
                  ];

                  __composite["0"]["type"] = "group";
                  __composite["0"]["label"] = "Account";
                  __composite["0"]["children"] = (() => {
                    const __composite = [
                      { type: "item", label: null, onClick: null },
                      { type: "item", label: null, onClick: null },
                      { type: null }
                    ];

                    __composite["0"]["label"] = "Settings & Privacy";
                    __composite["0"]["onClick"] = async info => {
                      const $steps = {};
                      $steps["goToALogin"] = true
                        ? (() => {
                            const actionArgs = { destination: `/a-login` };
                            return (({ destination }) => {
                              if (
                                typeof destination === "string" &&
                                destination.startsWith("#")
                              ) {
                                document
                                  .getElementById(destination.substr(1))
                                  .scrollIntoView({ behavior: "smooth" });
                              } else {
                                location.assign(destination);
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["goToALogin"] != null &&
                        typeof $steps["goToALogin"] === "object" &&
                        typeof $steps["goToALogin"].then === "function"
                      ) {
                        $steps["goToALogin"] = await $steps["goToALogin"];
                      }
                    };
                    __composite["1"]["label"] = "Help";
                    __composite["1"]["onClick"] = async info => {
                      const $steps = {};
                      $steps["goToALogin"] = true
                        ? (() => {
                            const actionArgs = { destination: `/a-login` };
                            return (({ destination }) => {
                              if (
                                typeof destination === "string" &&
                                destination.startsWith("#")
                              ) {
                                document
                                  .getElementById(destination.substr(1))
                                  .scrollIntoView({ behavior: "smooth" });
                              } else {
                                location.assign(destination);
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["goToALogin"] != null &&
                        typeof $steps["goToALogin"] === "object" &&
                        typeof $steps["goToALogin"].then === "function"
                      ) {
                        $steps["goToALogin"] = await $steps["goToALogin"];
                      }
                    };
                    __composite["2"]["type"] = "divider";
                    return __composite;
                  })();
                  __composite["1"]["type"] = "item";
                  __composite["1"]["label"] = "Sign out";
                  __composite["1"]["onClick"] = async info => {
                    const $steps = {};
                    $steps["goToALogin"] = true
                      ? (() => {
                          const actionArgs = { destination: `/a-login` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              location.assign(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToALogin"] != null &&
                      typeof $steps["goToALogin"] === "object" &&
                      typeof $steps["goToALogin"].then === "function"
                    ) {
                      $steps["goToALogin"] = await $steps["goToALogin"];
                    }
                  };
                  return __composite;
                })()}
                trigger={"hover"}
                useMenuItemsSlot={false}
              >
                <AntdButton
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  className={classNames("__wab_instance", sty.button)}
                  target={true}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__kVkU5)}
                    displayHeight={"30px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"30px"}
                    loading={"lazy"}
                  />
                </AntdButton>
              </AntdDropdown>
            </Stack__>
          </Stack__>
        </Stack__>
        <div
          data-plasmic-name={"countainer1"}
          data-plasmic-override={overrides.countainer1}
          className={classNames(projectcss.all, sty.countainer1)}
        >
          <div className={classNames(projectcss.all, sty.freeBox__q9Sc8)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___4RR9)}
              displayHeight={"100px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100px"}
              loading={"lazy"}
            />

            <div className={classNames(projectcss.all, sty.freeBox__iU8Rt)}>
              <div className={classNames(projectcss.all, sty.freeBox__mE4Z)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rwtQv
                  )}
                >
                  {"Company"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___60XJi
                  )}
                >
                  {"INC"}
                </div>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__bYy8F
                  )}
                  href={`/c- create-account`}
                  platform={"react"}
                >
                  <WritingSvgrepoComSvgIcon
                    className={classNames(projectcss.all, sty.svg___64ZhX)}
                    role={"img"}
                  />
                </PlasmicLink__>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__f9Thp)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___4Ki40
                  )}
                >
                  {"Niche"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dvaGf
                  )}
                >
                  {"Subniche"}
                </div>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__j2IK
                )}
              >
                {"New York"}
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___6Mr9N)}>
              <div className={classNames(projectcss.all, sty.freeBox__iXoZ)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__t5Al
                  )}
                >
                  {"Botstrap"}
                </div>
                <Dialog
                  data-plasmic-name={"dialog7"}
                  data-plasmic-override={overrides.dialog7}
                  body={
                    <React.Fragment>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"communities25"}
                        data-plasmic-override={overrides.communities25}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.communities25
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__o8YGk
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__yvHx0
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__lNcPe)}
                              displayHeight={"30px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"30px"}
                              loading={"lazy"}
                            />

                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__jgD34
                              )}
                              platform={"react"}
                            >
                              {"Community"}
                            </PlasmicLink__>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__l8Rma
                            )}
                          >
                            {"30"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___0Jq7I
                            )}
                          >
                            {"members"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__r6Aba
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__q63UD
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__sXf
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__po60
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__psRqg
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___9V5Jo
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__wTwX5
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__okbU
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___5Nim8
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__qplPu
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___0F1Nm
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__brSf
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ahenr
                              )}
                            >
                              {"80"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__skdM
                              )}
                            >
                              {"goals achieved"}
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__urj0Y
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ojRp8
                              )}
                            >
                              {"Bacharel"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__hOmo5
                              )}
                            >
                              {"Gold"}
                            </div>
                            <AntdRate
                              data-plasmic-name={"rate25"}
                              data-plasmic-override={overrides.rate25}
                              allowHalf={true}
                              className={classNames(
                                "__wab_instance",
                                sty.rate25
                              )}
                              defaultValue={5}
                              disabled={true}
                              multiCharacter={false}
                              onChange={async (...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "rate25",
                                  "value"
                                ]).apply(null, eventArgs);
                              }}
                              symbols={
                                <React.Fragment>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___5LRjw
                                    )}
                                  >
                                    {"1"}
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__jQxDo
                                    )}
                                  >
                                    {"2"}
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__d7Ft
                                    )}
                                  >
                                    {"3"}
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___056R
                                    )}
                                  >
                                    {"4"}
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__gHxe8
                                    )}
                                  >
                                    {"5"}
                                  </div>
                                </React.Fragment>
                              }
                              value={generateStateValueProp($state, [
                                "rate25",
                                "value"
                              ])}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__pkul
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__q4XHk
                                )}
                              >
                                {"50"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__yYvjs
                                )}
                              >
                                {" reviews"}
                              </div>
                            </div>
                          </div>
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"communities26"}
                        data-plasmic-override={overrides.communities26}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.communities26
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lplJc
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__bPn33
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__j2CfO)}
                              displayHeight={"30px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"30px"}
                              loading={"lazy"}
                            />

                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__zNJwB
                              )}
                              platform={"react"}
                            >
                              {"Community"}
                            </PlasmicLink__>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___1RjzL
                            )}
                          >
                            {"30"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bk9AH
                            )}
                          >
                            {"members"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__eCaNh
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__zeSrP
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__d3H76
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__fneW
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__umpip
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__eLFxF
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ptpL
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__xuKcf
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__uIqW
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__tFph9
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ukAa5
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___1WvfJ
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__z7OE
                              )}
                            >
                              {"80"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__awnTg
                              )}
                            >
                              {"goals achieved"}
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___22Gdn
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__wXqce
                              )}
                            >
                              {"Bacharel"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__pfBrJ
                              )}
                            >
                              {"Gold"}
                            </div>
                            <AntdRate
                              data-plasmic-name={"rate26"}
                              data-plasmic-override={overrides.rate26}
                              allowHalf={true}
                              className={classNames(
                                "__wab_instance",
                                sty.rate26
                              )}
                              defaultValue={5}
                              disabled={true}
                              multiCharacter={false}
                              onChange={async (...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "rate26",
                                  "value"
                                ]).apply(null, eventArgs);
                              }}
                              symbols={
                                <React.Fragment>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__jxBel
                                    )}
                                  >
                                    {"1"}
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__xsYgK
                                    )}
                                  >
                                    {"2"}
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__h0CO
                                    )}
                                  >
                                    {"3"}
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__oN2Cr
                                    )}
                                  >
                                    {"4"}
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__e1GsB
                                    )}
                                  >
                                    {"5"}
                                  </div>
                                </React.Fragment>
                              }
                              value={generateStateValueProp($state, [
                                "rate26",
                                "value"
                              ])}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___70HpO
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__gzwwV
                                )}
                              >
                                {"50"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__erV6Q
                                )}
                              >
                                {" reviews"}
                              </div>
                            </div>
                          </div>
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"communities27"}
                        data-plasmic-override={overrides.communities27}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.communities27
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___6Vr5H
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ld7Uy
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img___9BWqI)}
                              displayHeight={"30px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"30px"}
                              loading={"lazy"}
                            />

                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__cf99J
                              )}
                              platform={"react"}
                            >
                              {"Community"}
                            </PlasmicLink__>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__rCn5H
                            )}
                          >
                            {"30"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__eBwl0
                            )}
                          >
                            {"members"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__aq204
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__gT9BU
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__jDvdJ
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__wG2HG
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__rqxFt
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__wyz12
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__k5Nr
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__nkBud
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ynI1
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__aVKrs
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__dwL4Z
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__f0Y6O
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__qrTbq
                              )}
                            >
                              {"80"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__isAzn
                              )}
                            >
                              {"goals achieved"}
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ick64
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jhg00
                              )}
                            >
                              {"Bacharel"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jqsNm
                              )}
                            >
                              {"Gold"}
                            </div>
                            <AntdRate
                              data-plasmic-name={"rate27"}
                              data-plasmic-override={overrides.rate27}
                              allowHalf={true}
                              className={classNames(
                                "__wab_instance",
                                sty.rate27
                              )}
                              defaultValue={5}
                              disabled={true}
                              multiCharacter={false}
                              onChange={async (...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "rate27",
                                  "value"
                                ]).apply(null, eventArgs);
                              }}
                              symbols={
                                <React.Fragment>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__hs9N
                                    )}
                                  >
                                    {"1"}
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__f6DJl
                                    )}
                                  >
                                    {"2"}
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__aNgGo
                                    )}
                                  >
                                    {"3"}
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__j5Ky
                                    )}
                                  >
                                    {"4"}
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__xNdNj
                                    )}
                                  >
                                    {"5"}
                                  </div>
                                </React.Fragment>
                              }
                              value={generateStateValueProp($state, [
                                "rate27",
                                "value"
                              ])}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__xe807
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__iiCyz
                                )}
                              >
                                {"50"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__yi59A
                                )}
                              >
                                {" reviews"}
                              </div>
                            </div>
                          </div>
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"communities28"}
                        data-plasmic-override={overrides.communities28}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.communities28
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mUZnA
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__h2Ofl
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__so0Vd)}
                              displayHeight={"30px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"30px"}
                              loading={"lazy"}
                            />

                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__kEoj1
                              )}
                              platform={"react"}
                            >
                              {"Community"}
                            </PlasmicLink__>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jpSY
                            )}
                          >
                            {"30"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__t8SM
                            )}
                          >
                            {"members"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__d2Su8
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__am4D
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___736Wq
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__pMlgR
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__pzNzs
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___6UBj2
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__jmcTa
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__fJim9
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__wpx1R
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__lkIay
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___4IZSb
                                )}
                              >
                                {"Speciality"}
                              </div>
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___9FwpF
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xbv3X
                              )}
                            >
                              {"80"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__mRt0
                              )}
                            >
                              {"goals achieved"}
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__moJop
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___2S2Uz
                              )}
                            >
                              {"Bacharel"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__rdZvS
                              )}
                            >
                              {"Gold"}
                            </div>
                            <AntdRate
                              data-plasmic-name={"rate28"}
                              data-plasmic-override={overrides.rate28}
                              allowHalf={true}
                              className={classNames(
                                "__wab_instance",
                                sty.rate28
                              )}
                              defaultValue={5}
                              disabled={true}
                              multiCharacter={false}
                              onChange={async (...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "rate28",
                                  "value"
                                ]).apply(null, eventArgs);
                              }}
                              symbols={
                                <React.Fragment>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__rrccf
                                    )}
                                  >
                                    {"1"}
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__tbH6C
                                    )}
                                  >
                                    {"2"}
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__zt7Zt
                                    )}
                                  >
                                    {"3"}
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___2Iypy
                                    )}
                                  >
                                    {"4"}
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___3Nc7P
                                    )}
                                  >
                                    {"5"}
                                  </div>
                                </React.Fragment>
                              }
                              value={generateStateValueProp($state, [
                                "rate28",
                                "value"
                              ])}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__yyTgj
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__p8Tcn
                                )}
                              >
                                {"50"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__fl0R0
                                )}
                              >
                                {" reviews"}
                              </div>
                            </div>
                          </div>
                        </div>
                      </Stack__>
                      {(() => {
                        const child$Props = {
                          className: classNames(
                            "__wab_instance",
                            sty.pagination7
                          ),
                          current: generateStateValueProp($state, [
                            "pagination7",
                            "currentPage"
                          ]),
                          defaultCurrent: 1,
                          defaultPageSize: 10,
                          onChange: async (...eventArgs) => {
                            generateStateOnChangePropForCodeComponents(
                              $state,
                              "currentPage",
                              ["pagination7", "currentPage"],
                              AntdPagination_Helpers
                            ).apply(null, eventArgs);
                            generateStateOnChangePropForCodeComponents(
                              $state,
                              "startIndex",
                              ["pagination7", "startIndex"],
                              AntdPagination_Helpers
                            ).apply(null, eventArgs);
                            generateStateOnChangePropForCodeComponents(
                              $state,
                              "endIndex",
                              ["pagination7", "endIndex"],
                              AntdPagination_Helpers
                            ).apply(null, eventArgs);
                          },
                          onShowSizeChange: async (...eventArgs) => {
                            generateStateOnChangePropForCodeComponents(
                              $state,
                              "pageSize",
                              ["pagination7", "pageSize"],
                              AntdPagination_Helpers
                            ).apply(null, eventArgs);
                          },
                          pageSize: generateStateValueProp($state, [
                            "pagination7",
                            "pageSize"
                          ]),
                          pageSizeOptions: [
                            { pageSize: 10 },
                            { pageSize: 20 },
                            { pageSize: 50 },
                            { pageSize: 100 }
                          ]
                        };
                        initializeCodeComponentStates(
                          $state,
                          [
                            {
                              name: "currentPage",
                              plasmicStateName: "pagination7.currentPage"
                            },
                            {
                              name: "pageSize",
                              plasmicStateName: "pagination7.pageSize"
                            },
                            {
                              name: "startIndex",
                              plasmicStateName: "pagination7.startIndex"
                            },
                            {
                              name: "endIndex",
                              plasmicStateName: "pagination7.endIndex"
                            }
                          ],

                          [],
                          AntdPagination_Helpers ?? {},
                          child$Props
                        );
                        return (
                          <AntdPagination
                            data-plasmic-name={"pagination7"}
                            data-plasmic-override={overrides.pagination7}
                            {...child$Props}
                          />
                        );
                      })()}
                    </React.Fragment>
                  }
                  className={classNames("__wab_instance", sty.dialog7)}
                  onOpenChange={async (...eventArgs) => {
                    generateStateOnChangeProp($state, [
                      "dialog7",
                      "open"
                    ]).apply(null, eventArgs);
                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                  open={generateStateValueProp($state, ["dialog7", "open"])}
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8Bqia
                      )}
                    >
                      {"Dialog title"}
                    </div>
                  }
                  trigger={
                    <LoginButton
                      data-plasmic-name={"loginButton"}
                      data-plasmic-override={overrides.loginButton}
                      className={classNames("__wab_instance", sty.loginButton)}
                      color={"white"}
                      shape={"rounded"}
                      size={"minimal"}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wjBsx
                        )}
                      >
                        {"Linked Agencies"}
                      </div>
                    </LoginButton>
                  }
                />
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__lADrW)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oPQqN
                  )}
                >
                  {"80"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1Mnhj
                  )}
                >
                  {"goals achieved"}
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__d1AzI)}>
                <AntdRate
                  data-plasmic-name={"rate29"}
                  data-plasmic-override={overrides.rate29}
                  allowHalf={true}
                  className={classNames("__wab_instance", sty.rate29)}
                  defaultValue={5}
                  disabled={true}
                  multiCharacter={false}
                  onChange={async (...eventArgs) => {
                    generateStateOnChangeProp($state, [
                      "rate29",
                      "value"
                    ]).apply(null, eventArgs);
                  }}
                  symbols={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__meaFz
                        )}
                      >
                        {"1"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___3FKrr
                        )}
                      >
                        {"2"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__thrZi
                        )}
                      >
                        {"3"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mwsyU
                        )}
                      >
                        {"4"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__oQbsO
                        )}
                      >
                        {"5"}
                      </div>
                    </React.Fragment>
                  }
                  value={generateStateValueProp($state, ["rate29", "value"])}
                />

                <div className={classNames(projectcss.all, sty.freeBox___8E1S)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xrpOy
                    )}
                  >
                    {"50"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pBd
                    )}
                  >
                    {" reviews"}
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__aBc5I
            )}
          >
            {"Startup tagline"}
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__hapw6)}>
            <div className={classNames(projectcss.all, sty.freeBox__okLfz)}>
              <Icon4Icon
                className={classNames(projectcss.all, sty.svg__bg2TA)}
                role={"img"}
              />

              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__jy3CE
                )}
                href={"https://www.plasmic.app/"}
                platform={"react"}
              >
                {"Linkedin"}
              </PlasmicLink__>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__s7Tsx)}>
              <GlobalSvgrepoComSvgIcon
                className={classNames(projectcss.all, sty.svg__iXOcB)}
                role={"img"}
              />

              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__a8BCo
                )}
                href={"https://www.plasmic.app/"}
                platform={"react"}
              >
                {"Website"}
              </PlasmicLink__>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"countainer2"}
          data-plasmic-override={overrides.countainer2}
          className={classNames(projectcss.all, sty.countainer2)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__ob2Il
            )}
          >
            {"Company solutions"}
          </div>
          {(() => {
            const child$Props = {
              arrows: true,
              autoplay: false,
              autoplaySpeed: 0,
              beforeChange: async (...eventArgs) => {
                generateStateOnChangePropForCodeComponents(
                  $state,
                  "currentSlide",
                  ["sliderCarousel", "currentSlide"],
                  SliderWrapper_Helpers
                ).apply(null, eventArgs);
              },
              centerMode: true,
              className: classNames("__wab_instance", sty.sliderCarousel),
              cssEase: "linear",
              dots: true,
              initialSlide: generateStateValueProp($state, [
                "sliderCarousel",
                "currentSlide"
              ]),
              ref: ref => {
                $refs["sliderCarousel"] = ref;
              },
              sliderScopeClassName: sty["sliderCarousel__slider"],
              slidesPerRow: 4,
              speed: 1000
            };
            initializeCodeComponentStates(
              $state,
              [
                {
                  name: "currentSlide",
                  plasmicStateName: "sliderCarousel.currentSlide"
                }
              ],

              [],
              SliderWrapper_Helpers ?? {},
              child$Props
            );
            return (
              <SliderWrapper
                data-plasmic-name={"sliderCarousel"}
                data-plasmic-override={overrides.sliderCarousel}
                {...child$Props}
              >
                <div className={classNames(projectcss.all, sty.freeBox__ssYi6)}>
                  <AntdTooltip
                    className={classNames(
                      "__wab_instance",
                      sty.tooltip___5CZ51
                    )}
                    overlayClassName={classNames({
                      [sty["pcls_k2Tr_E8QahGq"]]: true
                    })}
                    placement={"right"}
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__pjGdk
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___4Js8E
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__glBtl
                            )}
                          >
                            {"Steps"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__daXzF
                            )}
                          >
                            {"Working"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___2Vzjw
                            )}
                          >
                            {"Working"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__cWEfG
                            )}
                          >
                            {"Working"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qtd48
                            )}
                          >
                            {"Working"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qYyAf
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__tJhkg
                            )}
                          >
                            {
                              "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                            }
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__kvTw
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__gSns3
                              )}
                            >
                              {"U$"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__aBeNr
                              )}
                            >
                              {"2,405.00"}
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                    titleText={"Tooltip contents"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sHdop
                      )}
                    >
                      {"Solution"}
                    </div>
                  </AntdTooltip>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___7HDsm)}
                >
                  <AntdTooltip
                    className={classNames("__wab_instance", sty.tooltip__asLwu)}
                    overlayClassName={classNames({
                      [sty["pcls_kjmy2rcartmp"]]: true
                    })}
                    placement={"right"}
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__gVZc
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ia5Ij
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hQ4Q0
                            )}
                          >
                            {"Steps"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lFmcB
                            )}
                          >
                            {"Working"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__b9Wmn
                            )}
                          >
                            {"Working"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__sexEu
                            )}
                          >
                            {"Working"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hz2Ol
                            )}
                          >
                            {"Working"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__xPrL
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jnCBu
                            )}
                          >
                            {
                              "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                            }
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__lcGu
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__lb4T7
                              )}
                            >
                              {"U$"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__eQl5M
                              )}
                            >
                              {"2,405.00"}
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                    titleText={"Tooltip contents"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__h6RF
                      )}
                    >
                      {"Solution"}
                    </div>
                  </AntdTooltip>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__d56Ff)}>
                  <AntdTooltip
                    className={classNames("__wab_instance", sty.tooltip__yGhA0)}
                    overlayClassName={classNames({
                      [sty["pcls_x_SGLuUH8RUp"]]: true
                    })}
                    placement={"right"}
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vezig
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__xxzUb
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__moy9
                            )}
                          >
                            {"Steps"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lcPkr
                            )}
                          >
                            {"Working"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pEZf5
                            )}
                          >
                            {"Working"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___1ZxF
                            )}
                          >
                            {"Working"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vj9Ub
                            )}
                          >
                            {"Working"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___9C9N
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dcypN
                            )}
                          >
                            {
                              "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                            }
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___7WHz
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ycf7Q
                              )}
                            >
                              {"U$"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___6CKvQ
                              )}
                            >
                              {"2,405.00"}
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                    titleText={"Tooltip contents"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wwvpz
                      )}
                    >
                      {"Solution"}
                    </div>
                  </AntdTooltip>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__faOS)}>
                  <AntdTooltip
                    className={classNames("__wab_instance", sty.tooltip__hgtLy)}
                    overlayClassName={classNames({
                      [sty["pcls_F7ZCbBIzhOq3"]]: true
                    })}
                    placement={"right"}
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__nqJ6Q
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___9Z46P
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__uDwU0
                            )}
                          >
                            {"Steps"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ksZhg
                            )}
                          >
                            {"Working"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yzjJz
                            )}
                          >
                            {"Working"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___94CnA
                            )}
                          >
                            {"Working"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jFn3N
                            )}
                          >
                            {"Working"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__zKnE
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qnawa
                            )}
                          >
                            {
                              "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                            }
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__lwhvf
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__g8A7
                              )}
                            >
                              {"U$"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__o0Hw6
                              )}
                            >
                              {"2,405.00"}
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                    titleText={"Tooltip contents"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hiOqq
                      )}
                    >
                      {"Solution"}
                    </div>
                  </AntdTooltip>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___4DdxT)}
                >
                  <AntdTooltip
                    className={classNames(
                      "__wab_instance",
                      sty.tooltip___7DRjk
                    )}
                    overlayClassName={classNames({
                      [sty["pcls_llPH2izHoAET"]]: true
                    })}
                    placement={"right"}
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__k6IXs
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__slay
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__b3KBm
                            )}
                          >
                            {"Steps"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__t6AD6
                            )}
                          >
                            {"Working"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__q8OjE
                            )}
                          >
                            {"Working"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__rdIsa
                            )}
                          >
                            {"Working"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___8NGaU
                            )}
                          >
                            {"Working"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lqawx
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___7R68O
                            )}
                          >
                            {
                              "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                            }
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__qG8I
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jmK3
                              )}
                            >
                              {"U$"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ayKj
                              )}
                            >
                              {"2,405.00"}
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                    titleText={"Tooltip contents"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__puZwl
                      )}
                    >
                      {"Solution"}
                    </div>
                  </AntdTooltip>
                </div>
              </SliderWrapper>
            );
          })()}
        </div>
        <div
          data-plasmic-name={"countainer3"}
          data-plasmic-override={overrides.countainer3}
          className={classNames(projectcss.all, sty.countainer3)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__lW7R7
            )}
          >
            {"Company Reviews"}
          </div>
          {(() => {
            const child$Props = {
              arrows: true,
              beforeChange: async (...eventArgs) => {
                generateStateOnChangePropForCodeComponents(
                  $state,
                  "currentSlide",
                  ["sliderCarousel2", "currentSlide"],
                  SliderWrapper_Helpers
                ).apply(null, eventArgs);
              },
              className: classNames("__wab_instance", sty.sliderCarousel2),
              initialSlide: generateStateValueProp($state, [
                "sliderCarousel2",
                "currentSlide"
              ]),
              ref: ref => {
                $refs["sliderCarousel2"] = ref;
              },
              rows: 2,
              sliderScopeClassName: sty["sliderCarousel2__slider"],
              slidesPerRow: 1,
              slidesToScroll: 0,
              vertical: true
            };
            initializeCodeComponentStates(
              $state,
              [
                {
                  name: "currentSlide",
                  plasmicStateName: "sliderCarousel2.currentSlide"
                }
              ],

              [],
              SliderWrapper_Helpers ?? {},
              child$Props
            );
            return (
              <SliderWrapper
                data-plasmic-name={"sliderCarousel2"}
                data-plasmic-override={overrides.sliderCarousel2}
                {...child$Props}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___79OxP)}
                >
                  <Dialog2
                    data-plasmic-name={"dialogGrid"}
                    data-plasmic-override={overrides.dialogGrid}
                    className={classNames("__wab_instance", sty.dialogGrid)}
                    defaultOpen={false}
                    onOpenChange={async (...eventArgs) => {
                      generateStateOnChangeProp($state, [
                        "dialogGrid",
                        "open"
                      ]).apply(null, eventArgs);
                    }}
                    open={generateStateValueProp($state, [
                      "dialogGrid",
                      "open"
                    ])}
                    themeResetClass={classNames(
                      projectcss.root_reset,
                      projectcss.plasmic_default_styles,
                      projectcss.plasmic_mixins,
                      projectcss.plasmic_tokens,
                      plasmic_antd_5_hostless_css.plasmic_tokens,
                      plasmic_plasmic_rich_components_css.plasmic_tokens
                    )}
                    triggerSlot={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__n8V7E
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__tkn0E
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__il88U)}
                            displayHeight={"30px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"30px"}
                            loading={"lazy"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__okGgS
                            )}
                            href={"https://www.plasmic.app/"}
                            platform={"react"}
                          >
                            {"Customer/Community"}
                          </PlasmicLink__>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__iygbt
                            )}
                          >
                            {"commented about"}
                          </div>
                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link___8Y3Y
                            )}
                            href={"https://www.plasmic.app/"}
                            platform={"react"}
                          >
                            {"Company"}
                          </PlasmicLink__>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___5PCsF
                          )}
                        >
                          {
                            "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                          }
                        </div>
                        <AntdRate
                          data-plasmic-name={"rate9"}
                          data-plasmic-override={overrides.rate9}
                          allowHalf={true}
                          className={classNames("__wab_instance", sty.rate9)}
                          disabled={true}
                          onChange={async (...eventArgs) => {
                            generateStateOnChangeProp($state, [
                              "rate9",
                              "value"
                            ]).apply(null, eventArgs);
                          }}
                          symbols={
                            <React.Fragment>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__e8QPj
                                )}
                              >
                                {"1"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__jtY03
                                )}
                              >
                                {"2"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__a59T7
                                )}
                              >
                                {"3"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__x8Hb
                                )}
                              >
                                {"4"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__iGiBp
                                )}
                              >
                                {"5"}
                              </div>
                            </React.Fragment>
                          }
                          value={generateStateValueProp($state, [
                            "rate9",
                            "value"
                          ])}
                        />
                      </div>
                    }
                  >
                    <DialogContent
                      className={classNames(
                        "__wab_instance",
                        sty.dialogContent__mu4VD
                      )}
                      themeResetClass={classNames(
                        projectcss.root_reset,
                        projectcss.plasmic_default_styles,
                        projectcss.plasmic_mixins,
                        projectcss.plasmic_tokens,
                        plasmic_antd_5_hostless_css.plasmic_tokens,
                        plasmic_plasmic_rich_components_css.plasmic_tokens
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"containerPost"}
                        data-plasmic-override={overrides.containerPost}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.containerPost
                        )}
                      >
                        <div
                          data-plasmic-name={"commentsSide"}
                          data-plasmic-override={overrides.commentsSide}
                          className={classNames(
                            projectcss.all,
                            sty.commentsSide
                          )}
                        >
                          <div
                            data-plasmic-name={"comments"}
                            data-plasmic-override={overrides.comments}
                            className={classNames(projectcss.all, sty.comments)}
                          >
                            <div
                              data-plasmic-name={"commentContainer"}
                              data-plasmic-override={overrides.commentContainer}
                              className={classNames(
                                projectcss.all,
                                sty.commentContainer
                              )}
                            >
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img___9GzQh)}
                                displayHeight={"30px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"none"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"30px"}
                                loading={"lazy"}
                              />

                              <div
                                data-plasmic-name={"userAndComment"}
                                data-plasmic-override={overrides.userAndComment}
                                className={classNames(
                                  projectcss.all,
                                  sty.userAndComment
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox___4KyVi
                                  )}
                                >
                                  <PlasmicLink__
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.a,
                                      projectcss.__wab_text,
                                      sty.link__gnyyW
                                    )}
                                    platform={"react"}
                                  >
                                    {"Cool  User"}
                                  </PlasmicLink__>
                                  <AntdRate
                                    data-plasmic-name={"rate11"}
                                    data-plasmic-override={overrides.rate11}
                                    allowHalf={true}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.rate11
                                    )}
                                    disabled={true}
                                    onChange={async (...eventArgs) => {
                                      generateStateOnChangeProp($state, [
                                        "rate11",
                                        "value"
                                      ]).apply(null, eventArgs);
                                    }}
                                    symbols={
                                      <React.Fragment>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text___6Clw9
                                          )}
                                        >
                                          {"1"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__eeQt
                                          )}
                                        >
                                          {"2"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__uX9I
                                          )}
                                        >
                                          {"3"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__eXobg
                                          )}
                                        >
                                          {"4"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__aiOoU
                                          )}
                                        >
                                          {"5"}
                                        </div>
                                      </React.Fragment>
                                    }
                                    value={generateStateValueProp($state, [
                                      "rate11",
                                      "value"
                                    ])}
                                  />
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__nQgrA
                                  )}
                                >
                                  {"Cool great comment"}
                                </div>
                              </div>
                            </div>
                          </div>
                          <AntdRate
                            data-plasmic-name={"rate"}
                            data-plasmic-override={overrides.rate}
                            allowHalf={true}
                            className={classNames("__wab_instance", sty.rate)}
                            onChange={async (...eventArgs) => {
                              generateStateOnChangeProp($state, [
                                "rate",
                                "value"
                              ]).apply(null, eventArgs);
                            }}
                            symbols={
                              <React.Fragment>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__hXvVi
                                  )}
                                >
                                  {"1"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__hdEK
                                  )}
                                >
                                  {"2"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__lh1E2
                                  )}
                                >
                                  {"3"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___07Pwh
                                  )}
                                >
                                  {"4"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__goG
                                  )}
                                >
                                  {"5"}
                                </div>
                              </React.Fragment>
                            }
                            value={generateStateValueProp($state, [
                              "rate",
                              "value"
                            ])}
                          />

                          <textarea
                            data-plasmic-name={"textarea"}
                            data-plasmic-override={overrides.textarea}
                            className={classNames(
                              projectcss.all,
                              projectcss.textarea,
                              sty.textarea
                            )}
                            onChange={async (...eventArgs) => {
                              (e => {
                                generateStateOnChangeProp($state, [
                                  "textarea",
                                  "value"
                                ])(e.target.value);
                              }).apply(null, eventArgs);
                            }}
                            placeholder={"Add a comment..."}
                            ref={ref => {
                              $refs["textarea"] = ref;
                            }}
                            value={
                              generateStateValueProp($state, [
                                "textarea",
                                "value"
                              ]) ?? ""
                            }
                          />
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__wIYes)}
                          displayHeight={"auto"}
                          displayMaxHeight={"400px"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"539px"}
                          loading={"lazy"}
                          src={{
                            src: zqLeeVbDjv88IbcUnsplashJpgXtkCnxecXa1Y,
                            fullWidth: 3200,
                            fullHeight: 2133,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          data-plasmic-name={"userSide"}
                          data-plasmic-override={overrides.userSide}
                          className={classNames(projectcss.all, sty.userSide)}
                        >
                          <div
                            data-plasmic-name={"userAction"}
                            data-plasmic-override={overrides.userAction}
                            className={classNames(
                              projectcss.all,
                              sty.userAction
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__hfgHk)}
                              displayHeight={"40px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"40px"}
                              loading={"lazy"}
                            />

                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__puGy
                              )}
                              platform={"react"}
                            >
                              {"User new"}
                            </PlasmicLink__>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__kLE
                              )}
                            >
                              {"Commented about"}
                            </div>
                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__h9RrZ
                              )}
                              platform={"react"}
                            >
                              {"Community user"}
                            </PlasmicLink__>
                            <ReportSvgrepoComSvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__icx0K
                              )}
                              role={"img"}
                            />

                            <DialogClose
                              className={classNames(
                                "__wab_instance",
                                sty.dialogClose__sygBf
                              )}
                            />
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__rTc3A
                            )}
                          >
                            {
                              "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                            }
                          </div>
                        </div>
                      </Stack__>
                    </DialogContent>
                  </Dialog2>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__hwCzG)}>
                  <Dialog2
                    data-plasmic-name={"dialogGrid2"}
                    data-plasmic-override={overrides.dialogGrid2}
                    className={classNames("__wab_instance", sty.dialogGrid2)}
                    defaultOpen={false}
                    onOpenChange={async (...eventArgs) => {
                      generateStateOnChangeProp($state, [
                        "dialogGrid2",
                        "open"
                      ]).apply(null, eventArgs);
                    }}
                    open={generateStateValueProp($state, [
                      "dialogGrid2",
                      "open"
                    ])}
                    themeResetClass={classNames(
                      projectcss.root_reset,
                      projectcss.plasmic_default_styles,
                      projectcss.plasmic_mixins,
                      projectcss.plasmic_tokens,
                      plasmic_antd_5_hostless_css.plasmic_tokens,
                      plasmic_plasmic_rich_components_css.plasmic_tokens
                    )}
                    triggerSlot={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__bfL2F
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__rjRha
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__xkqH)}
                            displayHeight={"30px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"30px"}
                            loading={"lazy"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__xjQDi
                            )}
                            href={"https://www.plasmic.app/"}
                            platform={"react"}
                          >
                            {"Customer/Community"}
                          </PlasmicLink__>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wduO4
                            )}
                          >
                            {"commented about"}
                          </div>
                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link___2GrCv
                            )}
                            href={"https://www.plasmic.app/"}
                            platform={"react"}
                          >
                            {"Company"}
                          </PlasmicLink__>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__li7Yy
                          )}
                        >
                          {
                            "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                          }
                        </div>
                        <AntdRate
                          data-plasmic-name={"rate10"}
                          data-plasmic-override={overrides.rate10}
                          allowHalf={true}
                          className={classNames("__wab_instance", sty.rate10)}
                          disabled={true}
                          onChange={async (...eventArgs) => {
                            generateStateOnChangeProp($state, [
                              "rate10",
                              "value"
                            ]).apply(null, eventArgs);
                          }}
                          symbols={
                            <React.Fragment>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__acoHa
                                )}
                              >
                                {"1"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__puEj
                                )}
                              >
                                {"2"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__qkGr9
                                )}
                              >
                                {"3"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___2OC
                                )}
                              >
                                {"4"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___7YH8C
                                )}
                              >
                                {"5"}
                              </div>
                            </React.Fragment>
                          }
                          value={generateStateValueProp($state, [
                            "rate10",
                            "value"
                          ])}
                        />
                      </div>
                    }
                  >
                    <DialogContent
                      className={classNames(
                        "__wab_instance",
                        sty.dialogContent__zefPx
                      )}
                      themeResetClass={classNames(
                        projectcss.root_reset,
                        projectcss.plasmic_default_styles,
                        projectcss.plasmic_mixins,
                        projectcss.plasmic_tokens,
                        plasmic_antd_5_hostless_css.plasmic_tokens,
                        plasmic_plasmic_rich_components_css.plasmic_tokens
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"containerPost2"}
                        data-plasmic-override={overrides.containerPost2}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.containerPost2
                        )}
                      >
                        <div
                          data-plasmic-name={"commentsSide2"}
                          data-plasmic-override={overrides.commentsSide2}
                          className={classNames(
                            projectcss.all,
                            sty.commentsSide2
                          )}
                        >
                          <div
                            data-plasmic-name={"comments2"}
                            data-plasmic-override={overrides.comments2}
                            className={classNames(
                              projectcss.all,
                              sty.comments2
                            )}
                          >
                            <div
                              data-plasmic-name={"commentContainer2"}
                              data-plasmic-override={
                                overrides.commentContainer2
                              }
                              className={classNames(
                                projectcss.all,
                                sty.commentContainer2
                              )}
                            >
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img__rl6Qp)}
                                displayHeight={"30px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"none"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"30px"}
                                loading={"lazy"}
                              />

                              <div
                                data-plasmic-name={"userAndComment2"}
                                data-plasmic-override={
                                  overrides.userAndComment2
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.userAndComment2
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__lnPqw
                                  )}
                                >
                                  <PlasmicLink__
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.a,
                                      projectcss.__wab_text,
                                      sty.link__oEnPy
                                    )}
                                    platform={"react"}
                                  >
                                    {"Cool  User"}
                                  </PlasmicLink__>
                                  <AntdRate
                                    data-plasmic-name={"rate12"}
                                    data-plasmic-override={overrides.rate12}
                                    allowHalf={true}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.rate12
                                    )}
                                    disabled={true}
                                    onChange={async (...eventArgs) => {
                                      generateStateOnChangeProp($state, [
                                        "rate12",
                                        "value"
                                      ]).apply(null, eventArgs);
                                    }}
                                    symbols={
                                      <React.Fragment>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__lcr
                                          )}
                                        >
                                          {"1"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__fy5Gk
                                          )}
                                        >
                                          {"2"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__p6Opp
                                          )}
                                        >
                                          {"3"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text___2JjOx
                                          )}
                                        >
                                          {"4"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__d1Lrs
                                          )}
                                        >
                                          {"5"}
                                        </div>
                                      </React.Fragment>
                                    }
                                    value={generateStateValueProp($state, [
                                      "rate12",
                                      "value"
                                    ])}
                                  />
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__kfL2P
                                  )}
                                >
                                  {"Cool great comment"}
                                </div>
                              </div>
                            </div>
                          </div>
                          <AntdRate
                            data-plasmic-name={"rate2"}
                            data-plasmic-override={overrides.rate2}
                            allowHalf={true}
                            className={classNames("__wab_instance", sty.rate2)}
                            onChange={async (...eventArgs) => {
                              generateStateOnChangeProp($state, [
                                "rate2",
                                "value"
                              ]).apply(null, eventArgs);
                            }}
                            symbols={
                              <React.Fragment>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__lCkbA
                                  )}
                                >
                                  {"1"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__qjArQ
                                  )}
                                >
                                  {"2"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__x9XA0
                                  )}
                                >
                                  {"3"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__pbmWq
                                  )}
                                >
                                  {"4"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___5IFr9
                                  )}
                                >
                                  {"5"}
                                </div>
                              </React.Fragment>
                            }
                            value={generateStateValueProp($state, [
                              "rate2",
                              "value"
                            ])}
                          />

                          <textarea
                            data-plasmic-name={"textarea2"}
                            data-plasmic-override={overrides.textarea2}
                            className={classNames(
                              projectcss.all,
                              projectcss.textarea,
                              sty.textarea2
                            )}
                            onChange={async (...eventArgs) => {
                              (e => {
                                generateStateOnChangeProp($state, [
                                  "textarea2",
                                  "value"
                                ])(e.target.value);
                              }).apply(null, eventArgs);
                            }}
                            placeholder={"Add a comment..."}
                            ref={ref => {
                              $refs["textarea2"] = ref;
                            }}
                            value={
                              generateStateValueProp($state, [
                                "textarea2",
                                "value"
                              ]) ?? ""
                            }
                          />
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__daiPx)}
                          displayHeight={"auto"}
                          displayMaxHeight={"400px"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"539px"}
                          loading={"lazy"}
                          src={{
                            src: zqLeeVbDjv88IbcUnsplashJpgXtkCnxecXa1Y,
                            fullWidth: 3200,
                            fullHeight: 2133,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          data-plasmic-name={"userSide2"}
                          data-plasmic-override={overrides.userSide2}
                          className={classNames(projectcss.all, sty.userSide2)}
                        >
                          <div
                            data-plasmic-name={"userAction2"}
                            data-plasmic-override={overrides.userAction2}
                            className={classNames(
                              projectcss.all,
                              sty.userAction2
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__fl7U4)}
                              displayHeight={"40px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"40px"}
                              loading={"lazy"}
                            />

                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__l18Cj
                              )}
                              platform={"react"}
                            >
                              {"User new"}
                            </PlasmicLink__>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__vveNc
                              )}
                            >
                              {"Commented about"}
                            </div>
                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__wpovN
                              )}
                              platform={"react"}
                            >
                              {"Community user"}
                            </PlasmicLink__>
                            <ReportSvgrepoComSvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__tqWAx
                              )}
                              role={"img"}
                            />

                            <DialogClose
                              className={classNames(
                                "__wab_instance",
                                sty.dialogClose__xf7G
                              )}
                            />
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___5RbEv
                            )}
                          >
                            {
                              "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                            }
                          </div>
                        </div>
                      </Stack__>
                    </DialogContent>
                  </Dialog2>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__l9CEp)}>
                  <Dialog2
                    data-plasmic-name={"dialogGrid3"}
                    data-plasmic-override={overrides.dialogGrid3}
                    className={classNames("__wab_instance", sty.dialogGrid3)}
                    defaultOpen={false}
                    onOpenChange={async (...eventArgs) => {
                      generateStateOnChangeProp($state, [
                        "dialogGrid3",
                        "open"
                      ]).apply(null, eventArgs);
                    }}
                    open={generateStateValueProp($state, [
                      "dialogGrid3",
                      "open"
                    ])}
                    themeResetClass={classNames(
                      projectcss.root_reset,
                      projectcss.plasmic_default_styles,
                      projectcss.plasmic_mixins,
                      projectcss.plasmic_tokens,
                      plasmic_antd_5_hostless_css.plasmic_tokens,
                      plasmic_plasmic_rich_components_css.plasmic_tokens
                    )}
                    triggerSlot={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___1Uln1
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__owiuq
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__mCvlC)}
                            displayHeight={"30px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"30px"}
                            loading={"lazy"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__e9Gp
                            )}
                            href={"https://www.plasmic.app/"}
                            platform={"react"}
                          >
                            {"Customer/Community"}
                          </PlasmicLink__>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__w0RZa
                            )}
                          >
                            {"commented about"}
                          </div>
                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__bVsxa
                            )}
                            href={"https://www.plasmic.app/"}
                            platform={"react"}
                          >
                            {"Company"}
                          </PlasmicLink__>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___5Gb
                          )}
                        >
                          {
                            "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                          }
                        </div>
                        <AntdRate
                          data-plasmic-name={"rate13"}
                          data-plasmic-override={overrides.rate13}
                          allowHalf={true}
                          className={classNames("__wab_instance", sty.rate13)}
                          disabled={true}
                          onChange={async (...eventArgs) => {
                            generateStateOnChangeProp($state, [
                              "rate13",
                              "value"
                            ]).apply(null, eventArgs);
                          }}
                          symbols={
                            <React.Fragment>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__lPOv
                                )}
                              >
                                {"1"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__jMalP
                                )}
                              >
                                {"2"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__kSa7O
                                )}
                              >
                                {"3"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__a2Ktb
                                )}
                              >
                                {"4"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__cl0U7
                                )}
                              >
                                {"5"}
                              </div>
                            </React.Fragment>
                          }
                          value={generateStateValueProp($state, [
                            "rate13",
                            "value"
                          ])}
                        />
                      </div>
                    }
                  >
                    <DialogContent
                      className={classNames(
                        "__wab_instance",
                        sty.dialogContent__uDgGb
                      )}
                      themeResetClass={classNames(
                        projectcss.root_reset,
                        projectcss.plasmic_default_styles,
                        projectcss.plasmic_mixins,
                        projectcss.plasmic_tokens,
                        plasmic_antd_5_hostless_css.plasmic_tokens,
                        plasmic_plasmic_rich_components_css.plasmic_tokens
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"containerPost3"}
                        data-plasmic-override={overrides.containerPost3}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.containerPost3
                        )}
                      >
                        <div
                          data-plasmic-name={"commentsSide3"}
                          data-plasmic-override={overrides.commentsSide3}
                          className={classNames(
                            projectcss.all,
                            sty.commentsSide3
                          )}
                        >
                          <div
                            data-plasmic-name={"comments3"}
                            data-plasmic-override={overrides.comments3}
                            className={classNames(
                              projectcss.all,
                              sty.comments3
                            )}
                          >
                            <div
                              data-plasmic-name={"commentContainer3"}
                              data-plasmic-override={
                                overrides.commentContainer3
                              }
                              className={classNames(
                                projectcss.all,
                                sty.commentContainer3
                              )}
                            >
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img__bnmJw)}
                                displayHeight={"30px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"none"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"30px"}
                                loading={"lazy"}
                              />

                              <div
                                data-plasmic-name={"userAndComment3"}
                                data-plasmic-override={
                                  overrides.userAndComment3
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.userAndComment3
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox___3Akc2
                                  )}
                                >
                                  <PlasmicLink__
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.a,
                                      projectcss.__wab_text,
                                      sty.link__vbKa5
                                    )}
                                    platform={"react"}
                                  >
                                    {"Cool  User"}
                                  </PlasmicLink__>
                                  <AntdRate
                                    data-plasmic-name={"rate14"}
                                    data-plasmic-override={overrides.rate14}
                                    allowHalf={true}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.rate14
                                    )}
                                    disabled={true}
                                    onChange={async (...eventArgs) => {
                                      generateStateOnChangeProp($state, [
                                        "rate14",
                                        "value"
                                      ]).apply(null, eventArgs);
                                    }}
                                    symbols={
                                      <React.Fragment>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__yWwE1
                                          )}
                                        >
                                          {"1"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__s4Yb0
                                          )}
                                        >
                                          {"2"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text___3LJNh
                                          )}
                                        >
                                          {"3"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__qf9NJ
                                          )}
                                        >
                                          {"4"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__r6MJw
                                          )}
                                        >
                                          {"5"}
                                        </div>
                                      </React.Fragment>
                                    }
                                    value={generateStateValueProp($state, [
                                      "rate14",
                                      "value"
                                    ])}
                                  />
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__qvm77
                                  )}
                                >
                                  {"Cool great comment"}
                                </div>
                              </div>
                            </div>
                          </div>
                          <AntdRate
                            data-plasmic-name={"rate3"}
                            data-plasmic-override={overrides.rate3}
                            allowHalf={true}
                            className={classNames("__wab_instance", sty.rate3)}
                            onChange={async (...eventArgs) => {
                              generateStateOnChangeProp($state, [
                                "rate3",
                                "value"
                              ]).apply(null, eventArgs);
                            }}
                            symbols={
                              <React.Fragment>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__luqxr
                                  )}
                                >
                                  {"1"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___2Y13Q
                                  )}
                                >
                                  {"2"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__yfp5I
                                  )}
                                >
                                  {"3"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___4VC1Z
                                  )}
                                >
                                  {"4"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__ftckC
                                  )}
                                >
                                  {"5"}
                                </div>
                              </React.Fragment>
                            }
                            value={generateStateValueProp($state, [
                              "rate3",
                              "value"
                            ])}
                          />

                          <textarea
                            data-plasmic-name={"textarea3"}
                            data-plasmic-override={overrides.textarea3}
                            className={classNames(
                              projectcss.all,
                              projectcss.textarea,
                              sty.textarea3
                            )}
                            onChange={async (...eventArgs) => {
                              (e => {
                                generateStateOnChangeProp($state, [
                                  "textarea3",
                                  "value"
                                ])(e.target.value);
                              }).apply(null, eventArgs);
                            }}
                            placeholder={"Add a comment..."}
                            ref={ref => {
                              $refs["textarea3"] = ref;
                            }}
                            value={
                              generateStateValueProp($state, [
                                "textarea3",
                                "value"
                              ]) ?? ""
                            }
                          />
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__x3LJo)}
                          displayHeight={"auto"}
                          displayMaxHeight={"400px"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"539px"}
                          loading={"lazy"}
                          src={{
                            src: zqLeeVbDjv88IbcUnsplashJpgXtkCnxecXa1Y,
                            fullWidth: 3200,
                            fullHeight: 2133,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          data-plasmic-name={"userSide3"}
                          data-plasmic-override={overrides.userSide3}
                          className={classNames(projectcss.all, sty.userSide3)}
                        >
                          <div
                            data-plasmic-name={"userAction3"}
                            data-plasmic-override={overrides.userAction3}
                            className={classNames(
                              projectcss.all,
                              sty.userAction3
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__r5HgY)}
                              displayHeight={"40px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"40px"}
                              loading={"lazy"}
                            />

                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__pNhQr
                              )}
                              platform={"react"}
                            >
                              {"User new"}
                            </PlasmicLink__>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__pfMmz
                              )}
                            >
                              {"Commented about"}
                            </div>
                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__mvnBd
                              )}
                              platform={"react"}
                            >
                              {"Community user"}
                            </PlasmicLink__>
                            <ReportSvgrepoComSvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__sQbP
                              )}
                              role={"img"}
                            />

                            <DialogClose
                              className={classNames(
                                "__wab_instance",
                                sty.dialogClose__eDh7R
                              )}
                            />
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qlnjC
                            )}
                          >
                            {
                              "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                            }
                          </div>
                        </div>
                      </Stack__>
                    </DialogContent>
                  </Dialog2>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__qMaRb)}>
                  <Dialog2
                    data-plasmic-name={"dialogGrid4"}
                    data-plasmic-override={overrides.dialogGrid4}
                    className={classNames("__wab_instance", sty.dialogGrid4)}
                    defaultOpen={false}
                    onOpenChange={async (...eventArgs) => {
                      generateStateOnChangeProp($state, [
                        "dialogGrid4",
                        "open"
                      ]).apply(null, eventArgs);
                    }}
                    open={generateStateValueProp($state, [
                      "dialogGrid4",
                      "open"
                    ])}
                    themeResetClass={classNames(
                      projectcss.root_reset,
                      projectcss.plasmic_default_styles,
                      projectcss.plasmic_mixins,
                      projectcss.plasmic_tokens,
                      plasmic_antd_5_hostless_css.plasmic_tokens,
                      plasmic_plasmic_rich_components_css.plasmic_tokens
                    )}
                    triggerSlot={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__qp0N7
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__b6UiU
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__lHhT9)}
                            displayHeight={"30px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"30px"}
                            loading={"lazy"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__gmL3N
                            )}
                            href={"https://www.plasmic.app/"}
                            platform={"react"}
                          >
                            {"Customer/Community"}
                          </PlasmicLink__>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___5CWTj
                            )}
                          >
                            {"commented about"}
                          </div>
                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__uwnrc
                            )}
                            href={"https://www.plasmic.app/"}
                            platform={"react"}
                          >
                            {"Company"}
                          </PlasmicLink__>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__f0Y4D
                          )}
                        >
                          {
                            "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                          }
                        </div>
                        <AntdRate
                          data-plasmic-name={"rate15"}
                          data-plasmic-override={overrides.rate15}
                          allowHalf={true}
                          className={classNames("__wab_instance", sty.rate15)}
                          disabled={true}
                          onChange={async (...eventArgs) => {
                            generateStateOnChangeProp($state, [
                              "rate15",
                              "value"
                            ]).apply(null, eventArgs);
                          }}
                          symbols={
                            <React.Fragment>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ij5Vc
                                )}
                              >
                                {"1"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__dSjOy
                                )}
                              >
                                {"2"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__j8Nk
                                )}
                              >
                                {"3"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___9VxNq
                                )}
                              >
                                {"4"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__cq14K
                                )}
                              >
                                {"5"}
                              </div>
                            </React.Fragment>
                          }
                          value={generateStateValueProp($state, [
                            "rate15",
                            "value"
                          ])}
                        />
                      </div>
                    }
                  >
                    <DialogContent
                      className={classNames(
                        "__wab_instance",
                        sty.dialogContent__oeCMy
                      )}
                      themeResetClass={classNames(
                        projectcss.root_reset,
                        projectcss.plasmic_default_styles,
                        projectcss.plasmic_mixins,
                        projectcss.plasmic_tokens,
                        plasmic_antd_5_hostless_css.plasmic_tokens,
                        plasmic_plasmic_rich_components_css.plasmic_tokens
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"containerPost4"}
                        data-plasmic-override={overrides.containerPost4}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.containerPost4
                        )}
                      >
                        <div
                          data-plasmic-name={"commentsSide4"}
                          data-plasmic-override={overrides.commentsSide4}
                          className={classNames(
                            projectcss.all,
                            sty.commentsSide4
                          )}
                        >
                          <div
                            data-plasmic-name={"comments4"}
                            data-plasmic-override={overrides.comments4}
                            className={classNames(
                              projectcss.all,
                              sty.comments4
                            )}
                          >
                            <div
                              data-plasmic-name={"commentContainer4"}
                              data-plasmic-override={
                                overrides.commentContainer4
                              }
                              className={classNames(
                                projectcss.all,
                                sty.commentContainer4
                              )}
                            >
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img__cr9Rj)}
                                displayHeight={"30px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"none"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"30px"}
                                loading={"lazy"}
                              />

                              <div
                                data-plasmic-name={"userAndComment4"}
                                data-plasmic-override={
                                  overrides.userAndComment4
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.userAndComment4
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__vEl8P
                                  )}
                                >
                                  <PlasmicLink__
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.a,
                                      projectcss.__wab_text,
                                      sty.link___1E2Mo
                                    )}
                                    platform={"react"}
                                  >
                                    {"Cool  User"}
                                  </PlasmicLink__>
                                  <AntdRate
                                    data-plasmic-name={"rate16"}
                                    data-plasmic-override={overrides.rate16}
                                    allowHalf={true}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.rate16
                                    )}
                                    disabled={true}
                                    onChange={async (...eventArgs) => {
                                      generateStateOnChangeProp($state, [
                                        "rate16",
                                        "value"
                                      ]).apply(null, eventArgs);
                                    }}
                                    symbols={
                                      <React.Fragment>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__iHxZ8
                                          )}
                                        >
                                          {"1"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__lSFxf
                                          )}
                                        >
                                          {"2"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__bj3XY
                                          )}
                                        >
                                          {"3"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__ljdoI
                                          )}
                                        >
                                          {"4"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text___1Qi8Y
                                          )}
                                        >
                                          {"5"}
                                        </div>
                                      </React.Fragment>
                                    }
                                    value={generateStateValueProp($state, [
                                      "rate16",
                                      "value"
                                    ])}
                                  />
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__fxis2
                                  )}
                                >
                                  {"Cool great comment"}
                                </div>
                              </div>
                            </div>
                          </div>
                          <AntdRate
                            data-plasmic-name={"rate4"}
                            data-plasmic-override={overrides.rate4}
                            allowHalf={true}
                            className={classNames("__wab_instance", sty.rate4)}
                            onChange={async (...eventArgs) => {
                              generateStateOnChangeProp($state, [
                                "rate4",
                                "value"
                              ]).apply(null, eventArgs);
                            }}
                            symbols={
                              <React.Fragment>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___0Rdda
                                  )}
                                >
                                  {"1"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__nKago
                                  )}
                                >
                                  {"2"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___2MiAh
                                  )}
                                >
                                  {"3"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__pRmSq
                                  )}
                                >
                                  {"4"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___80Y1W
                                  )}
                                >
                                  {"5"}
                                </div>
                              </React.Fragment>
                            }
                            value={generateStateValueProp($state, [
                              "rate4",
                              "value"
                            ])}
                          />

                          <textarea
                            data-plasmic-name={"textarea4"}
                            data-plasmic-override={overrides.textarea4}
                            className={classNames(
                              projectcss.all,
                              projectcss.textarea,
                              sty.textarea4
                            )}
                            onChange={async (...eventArgs) => {
                              (e => {
                                generateStateOnChangeProp($state, [
                                  "textarea4",
                                  "value"
                                ])(e.target.value);
                              }).apply(null, eventArgs);
                            }}
                            placeholder={"Add a comment..."}
                            ref={ref => {
                              $refs["textarea4"] = ref;
                            }}
                            value={
                              generateStateValueProp($state, [
                                "textarea4",
                                "value"
                              ]) ?? ""
                            }
                          />
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__aIJk0)}
                          displayHeight={"auto"}
                          displayMaxHeight={"400px"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"539px"}
                          loading={"lazy"}
                          src={{
                            src: zqLeeVbDjv88IbcUnsplashJpgXtkCnxecXa1Y,
                            fullWidth: 3200,
                            fullHeight: 2133,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          data-plasmic-name={"userSide4"}
                          data-plasmic-override={overrides.userSide4}
                          className={classNames(projectcss.all, sty.userSide4)}
                        >
                          <div
                            data-plasmic-name={"userAction4"}
                            data-plasmic-override={overrides.userAction4}
                            className={classNames(
                              projectcss.all,
                              sty.userAction4
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__gwHnm)}
                              displayHeight={"40px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"40px"}
                              loading={"lazy"}
                            />

                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__ev7Pw
                              )}
                              platform={"react"}
                            >
                              {"User new"}
                            </PlasmicLink__>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___81Mfk
                              )}
                            >
                              {"Commented about"}
                            </div>
                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__dH3F
                              )}
                              platform={"react"}
                            >
                              {"Community user"}
                            </PlasmicLink__>
                            <ReportSvgrepoComSvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__eYIaW
                              )}
                              role={"img"}
                            />

                            <DialogClose
                              className={classNames(
                                "__wab_instance",
                                sty.dialogClose__ekRcj
                              )}
                            />
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__opMe
                            )}
                          >
                            {
                              "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                            }
                          </div>
                        </div>
                      </Stack__>
                    </DialogContent>
                  </Dialog2>
                </div>
              </SliderWrapper>
            );
          })()}
        </div>
        <div
          data-plasmic-name={"countainer4"}
          data-plasmic-override={overrides.countainer4}
          className={classNames(projectcss.all, sty.countainer4)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__tXd78
            )}
          >
            {"Company Replies"}
          </div>
          {(() => {
            const child$Props = {
              arrows: true,
              beforeChange: async (...eventArgs) => {
                generateStateOnChangePropForCodeComponents(
                  $state,
                  "currentSlide",
                  ["sliderCarousel3", "currentSlide"],
                  SliderWrapper_Helpers
                ).apply(null, eventArgs);
              },
              className: classNames("__wab_instance", sty.sliderCarousel3),
              initialSlide: generateStateValueProp($state, [
                "sliderCarousel3",
                "currentSlide"
              ]),
              ref: ref => {
                $refs["sliderCarousel3"] = ref;
              },
              rows: 2,
              sliderScopeClassName: sty["sliderCarousel3__slider"],
              slidesPerRow: 1,
              slidesToScroll: 0,
              vertical: true
            };
            initializeCodeComponentStates(
              $state,
              [
                {
                  name: "currentSlide",
                  plasmicStateName: "sliderCarousel3.currentSlide"
                }
              ],

              [],
              SliderWrapper_Helpers ?? {},
              child$Props
            );
            return (
              <SliderWrapper
                data-plasmic-name={"sliderCarousel3"}
                data-plasmic-override={overrides.sliderCarousel3}
                {...child$Props}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___9FAQu)}
                >
                  <Dialog2
                    data-plasmic-name={"dialogGrid5"}
                    data-plasmic-override={overrides.dialogGrid5}
                    className={classNames("__wab_instance", sty.dialogGrid5)}
                    defaultOpen={false}
                    onOpenChange={async (...eventArgs) => {
                      generateStateOnChangeProp($state, [
                        "dialogGrid5",
                        "open"
                      ]).apply(null, eventArgs);
                    }}
                    open={generateStateValueProp($state, [
                      "dialogGrid5",
                      "open"
                    ])}
                    themeResetClass={classNames(
                      projectcss.root_reset,
                      projectcss.plasmic_default_styles,
                      projectcss.plasmic_mixins,
                      projectcss.plasmic_tokens,
                      plasmic_antd_5_hostless_css.plasmic_tokens,
                      plasmic_plasmic_rich_components_css.plasmic_tokens
                    )}
                    triggerSlot={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__wZUa
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__dZPk
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__wse9I)}
                            displayHeight={"30px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"30px"}
                            loading={"lazy"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__re6K
                            )}
                            href={"https://www.plasmic.app/"}
                            platform={"react"}
                          >
                            {"Company"}
                          </PlasmicLink__>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__peF67
                            )}
                          >
                            {"commented about"}
                          </div>
                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link___1EtNd
                            )}
                            href={"https://www.plasmic.app/"}
                            platform={"react"}
                          >
                            {"Customer/Community"}
                          </PlasmicLink__>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__f6D6B
                          )}
                        >
                          {
                            "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                          }
                        </div>
                        <AntdRate
                          data-plasmic-name={"rate17"}
                          data-plasmic-override={overrides.rate17}
                          allowHalf={true}
                          className={classNames("__wab_instance", sty.rate17)}
                          disabled={true}
                          onChange={async (...eventArgs) => {
                            generateStateOnChangeProp($state, [
                              "rate17",
                              "value"
                            ]).apply(null, eventArgs);
                          }}
                          symbols={
                            <React.Fragment>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__kiGkR
                                )}
                              >
                                {"1"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__bT1YN
                                )}
                              >
                                {"2"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__gi90C
                                )}
                              >
                                {"3"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__syb3Y
                                )}
                              >
                                {"4"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__sCDzO
                                )}
                              >
                                {"5"}
                              </div>
                            </React.Fragment>
                          }
                          value={generateStateValueProp($state, [
                            "rate17",
                            "value"
                          ])}
                        />
                      </div>
                    }
                  >
                    <DialogContent
                      className={classNames(
                        "__wab_instance",
                        sty.dialogContent__veypl
                      )}
                      themeResetClass={classNames(
                        projectcss.root_reset,
                        projectcss.plasmic_default_styles,
                        projectcss.plasmic_mixins,
                        projectcss.plasmic_tokens,
                        plasmic_antd_5_hostless_css.plasmic_tokens,
                        plasmic_plasmic_rich_components_css.plasmic_tokens
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"containerPost5"}
                        data-plasmic-override={overrides.containerPost5}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.containerPost5
                        )}
                      >
                        <div
                          data-plasmic-name={"commentsSide5"}
                          data-plasmic-override={overrides.commentsSide5}
                          className={classNames(
                            projectcss.all,
                            sty.commentsSide5
                          )}
                        >
                          <div
                            data-plasmic-name={"comments5"}
                            data-plasmic-override={overrides.comments5}
                            className={classNames(
                              projectcss.all,
                              sty.comments5
                            )}
                          >
                            <div
                              data-plasmic-name={"commentContainer5"}
                              data-plasmic-override={
                                overrides.commentContainer5
                              }
                              className={classNames(
                                projectcss.all,
                                sty.commentContainer5
                              )}
                            >
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img__g6PFa)}
                                displayHeight={"30px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"none"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"30px"}
                                loading={"lazy"}
                              />

                              <div
                                data-plasmic-name={"userAndComment5"}
                                data-plasmic-override={
                                  overrides.userAndComment5
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.userAndComment5
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__fb8Ca
                                  )}
                                >
                                  <PlasmicLink__
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.a,
                                      projectcss.__wab_text,
                                      sty.link__d0MW
                                    )}
                                    platform={"react"}
                                  >
                                    {"Cool  User"}
                                  </PlasmicLink__>
                                  <AntdRate
                                    data-plasmic-name={"rate18"}
                                    data-plasmic-override={overrides.rate18}
                                    allowHalf={true}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.rate18
                                    )}
                                    disabled={true}
                                    onChange={async (...eventArgs) => {
                                      generateStateOnChangeProp($state, [
                                        "rate18",
                                        "value"
                                      ]).apply(null, eventArgs);
                                    }}
                                    symbols={
                                      <React.Fragment>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__slTfz
                                          )}
                                        >
                                          {"1"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text___1EcS
                                          )}
                                        >
                                          {"2"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__gLmqc
                                          )}
                                        >
                                          {"3"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text___1KrH5
                                          )}
                                        >
                                          {"4"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__rMiA7
                                          )}
                                        >
                                          {"5"}
                                        </div>
                                      </React.Fragment>
                                    }
                                    value={generateStateValueProp($state, [
                                      "rate18",
                                      "value"
                                    ])}
                                  />
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__wpWFu
                                  )}
                                >
                                  {"Cool great comment"}
                                </div>
                              </div>
                            </div>
                          </div>
                          <AntdRate
                            data-plasmic-name={"rate5"}
                            data-plasmic-override={overrides.rate5}
                            allowHalf={true}
                            className={classNames("__wab_instance", sty.rate5)}
                            onChange={async (...eventArgs) => {
                              generateStateOnChangeProp($state, [
                                "rate5",
                                "value"
                              ]).apply(null, eventArgs);
                            }}
                            symbols={
                              <React.Fragment>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___4Yq47
                                  )}
                                >
                                  {"1"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__f07Kg
                                  )}
                                >
                                  {"2"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___1QaCy
                                  )}
                                >
                                  {"3"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__mBhB9
                                  )}
                                >
                                  {"4"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__bskOj
                                  )}
                                >
                                  {"5"}
                                </div>
                              </React.Fragment>
                            }
                            value={generateStateValueProp($state, [
                              "rate5",
                              "value"
                            ])}
                          />

                          <textarea
                            data-plasmic-name={"textarea5"}
                            data-plasmic-override={overrides.textarea5}
                            className={classNames(
                              projectcss.all,
                              projectcss.textarea,
                              sty.textarea5
                            )}
                            onChange={async (...eventArgs) => {
                              (e => {
                                generateStateOnChangeProp($state, [
                                  "textarea5",
                                  "value"
                                ])(e.target.value);
                              }).apply(null, eventArgs);
                            }}
                            placeholder={"Add a comment..."}
                            ref={ref => {
                              $refs["textarea5"] = ref;
                            }}
                            value={
                              generateStateValueProp($state, [
                                "textarea5",
                                "value"
                              ]) ?? ""
                            }
                          />
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__dXdtK)}
                          displayHeight={"auto"}
                          displayMaxHeight={"400px"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"539px"}
                          loading={"lazy"}
                          src={{
                            src: zqLeeVbDjv88IbcUnsplashJpgXtkCnxecXa1Y,
                            fullWidth: 3200,
                            fullHeight: 2133,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          data-plasmic-name={"userSide5"}
                          data-plasmic-override={overrides.userSide5}
                          className={classNames(projectcss.all, sty.userSide5)}
                        >
                          <div
                            data-plasmic-name={"userAction5"}
                            data-plasmic-override={overrides.userAction5}
                            className={classNames(
                              projectcss.all,
                              sty.userAction5
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__cIoan)}
                              displayHeight={"40px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"40px"}
                              loading={"lazy"}
                            />

                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__kGcYn
                              )}
                              platform={"react"}
                            >
                              {"User new"}
                            </PlasmicLink__>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__f7ESe
                              )}
                            >
                              {"Commented about"}
                            </div>
                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link___3M4YR
                              )}
                              platform={"react"}
                            >
                              {"Community user"}
                            </PlasmicLink__>
                            <ReportSvgrepoComSvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__rogAf
                              )}
                              role={"img"}
                            />

                            <DialogClose
                              className={classNames(
                                "__wab_instance",
                                sty.dialogClose__oirT5
                              )}
                            />
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__y3YqD
                            )}
                          >
                            {
                              "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                            }
                          </div>
                        </div>
                      </Stack__>
                    </DialogContent>
                  </Dialog2>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__ibKeH)}>
                  <Dialog2
                    data-plasmic-name={"dialogGrid6"}
                    data-plasmic-override={overrides.dialogGrid6}
                    className={classNames("__wab_instance", sty.dialogGrid6)}
                    defaultOpen={false}
                    onOpenChange={async (...eventArgs) => {
                      generateStateOnChangeProp($state, [
                        "dialogGrid6",
                        "open"
                      ]).apply(null, eventArgs);
                    }}
                    open={generateStateValueProp($state, [
                      "dialogGrid6",
                      "open"
                    ])}
                    themeResetClass={classNames(
                      projectcss.root_reset,
                      projectcss.plasmic_default_styles,
                      projectcss.plasmic_mixins,
                      projectcss.plasmic_tokens,
                      plasmic_antd_5_hostless_css.plasmic_tokens,
                      plasmic_plasmic_rich_components_css.plasmic_tokens
                    )}
                    triggerSlot={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__sX9Zy
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__apMJb
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__yQ05R)}
                            displayHeight={"30px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"30px"}
                            loading={"lazy"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link___7AaT
                            )}
                            href={"https://www.plasmic.app/"}
                            platform={"react"}
                          >
                            {"Company"}
                          </PlasmicLink__>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___4Q0Sz
                            )}
                          >
                            {"commented about"}
                          </div>
                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link___3JzVo
                            )}
                            href={"https://www.plasmic.app/"}
                            platform={"react"}
                          >
                            {"Customer/Community"}
                          </PlasmicLink__>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mpTby
                          )}
                        >
                          {
                            "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                          }
                        </div>
                        <AntdRate
                          data-plasmic-name={"rate19"}
                          data-plasmic-override={overrides.rate19}
                          allowHalf={true}
                          className={classNames("__wab_instance", sty.rate19)}
                          disabled={true}
                          onChange={async (...eventArgs) => {
                            generateStateOnChangeProp($state, [
                              "rate19",
                              "value"
                            ]).apply(null, eventArgs);
                          }}
                          symbols={
                            <React.Fragment>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__lNeni
                                )}
                              >
                                {"1"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__eU0N
                                )}
                              >
                                {"2"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___0ZxZs
                                )}
                              >
                                {"3"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___0Wen3
                                )}
                              >
                                {"4"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__hEm2T
                                )}
                              >
                                {"5"}
                              </div>
                            </React.Fragment>
                          }
                          value={generateStateValueProp($state, [
                            "rate19",
                            "value"
                          ])}
                        />
                      </div>
                    }
                  >
                    <DialogContent
                      className={classNames(
                        "__wab_instance",
                        sty.dialogContent___0NjD
                      )}
                      themeResetClass={classNames(
                        projectcss.root_reset,
                        projectcss.plasmic_default_styles,
                        projectcss.plasmic_mixins,
                        projectcss.plasmic_tokens,
                        plasmic_antd_5_hostless_css.plasmic_tokens,
                        plasmic_plasmic_rich_components_css.plasmic_tokens
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"containerPost6"}
                        data-plasmic-override={overrides.containerPost6}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.containerPost6
                        )}
                      >
                        <div
                          data-plasmic-name={"commentsSide6"}
                          data-plasmic-override={overrides.commentsSide6}
                          className={classNames(
                            projectcss.all,
                            sty.commentsSide6
                          )}
                        >
                          <div
                            data-plasmic-name={"comments6"}
                            data-plasmic-override={overrides.comments6}
                            className={classNames(
                              projectcss.all,
                              sty.comments6
                            )}
                          >
                            <div
                              data-plasmic-name={"commentContainer6"}
                              data-plasmic-override={
                                overrides.commentContainer6
                              }
                              className={classNames(
                                projectcss.all,
                                sty.commentContainer6
                              )}
                            >
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img__uihEc)}
                                displayHeight={"30px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"none"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"30px"}
                                loading={"lazy"}
                              />

                              <div
                                data-plasmic-name={"userAndComment6"}
                                data-plasmic-override={
                                  overrides.userAndComment6
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.userAndComment6
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__ekP
                                  )}
                                >
                                  <PlasmicLink__
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.a,
                                      projectcss.__wab_text,
                                      sty.link__zw2Vj
                                    )}
                                    platform={"react"}
                                  >
                                    {"Cool  User"}
                                  </PlasmicLink__>
                                  <AntdRate
                                    data-plasmic-name={"rate20"}
                                    data-plasmic-override={overrides.rate20}
                                    allowHalf={true}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.rate20
                                    )}
                                    disabled={true}
                                    onChange={async (...eventArgs) => {
                                      generateStateOnChangeProp($state, [
                                        "rate20",
                                        "value"
                                      ]).apply(null, eventArgs);
                                    }}
                                    symbols={
                                      <React.Fragment>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__bJwDa
                                          )}
                                        >
                                          {"1"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__lNxWp
                                          )}
                                        >
                                          {"2"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text___8HxRb
                                          )}
                                        >
                                          {"3"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__fgjsy
                                          )}
                                        >
                                          {"4"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__lc97F
                                          )}
                                        >
                                          {"5"}
                                        </div>
                                      </React.Fragment>
                                    }
                                    value={generateStateValueProp($state, [
                                      "rate20",
                                      "value"
                                    ])}
                                  />
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__inMk4
                                  )}
                                >
                                  {"Cool great comment"}
                                </div>
                              </div>
                            </div>
                          </div>
                          <AntdRate
                            data-plasmic-name={"rate6"}
                            data-plasmic-override={overrides.rate6}
                            allowHalf={true}
                            className={classNames("__wab_instance", sty.rate6)}
                            onChange={async (...eventArgs) => {
                              generateStateOnChangeProp($state, [
                                "rate6",
                                "value"
                              ]).apply(null, eventArgs);
                            }}
                            symbols={
                              <React.Fragment>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__aoAl6
                                  )}
                                >
                                  {"1"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__qr1YO
                                  )}
                                >
                                  {"2"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__qiWa
                                  )}
                                >
                                  {"3"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__zoVib
                                  )}
                                >
                                  {"4"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__vnBm
                                  )}
                                >
                                  {"5"}
                                </div>
                              </React.Fragment>
                            }
                            value={generateStateValueProp($state, [
                              "rate6",
                              "value"
                            ])}
                          />

                          <textarea
                            data-plasmic-name={"textarea6"}
                            data-plasmic-override={overrides.textarea6}
                            className={classNames(
                              projectcss.all,
                              projectcss.textarea,
                              sty.textarea6
                            )}
                            onChange={async (...eventArgs) => {
                              (e => {
                                generateStateOnChangeProp($state, [
                                  "textarea6",
                                  "value"
                                ])(e.target.value);
                              }).apply(null, eventArgs);
                            }}
                            placeholder={"Add a comment..."}
                            ref={ref => {
                              $refs["textarea6"] = ref;
                            }}
                            value={
                              generateStateValueProp($state, [
                                "textarea6",
                                "value"
                              ]) ?? ""
                            }
                          />
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__kUIdb)}
                          displayHeight={"auto"}
                          displayMaxHeight={"400px"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"539px"}
                          loading={"lazy"}
                          src={{
                            src: zqLeeVbDjv88IbcUnsplashJpgXtkCnxecXa1Y,
                            fullWidth: 3200,
                            fullHeight: 2133,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          data-plasmic-name={"userSide6"}
                          data-plasmic-override={overrides.userSide6}
                          className={classNames(projectcss.all, sty.userSide6)}
                        >
                          <div
                            data-plasmic-name={"userAction6"}
                            data-plasmic-override={overrides.userAction6}
                            className={classNames(
                              projectcss.all,
                              sty.userAction6
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__rSmIs)}
                              displayHeight={"40px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"40px"}
                              loading={"lazy"}
                            />

                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__komkf
                              )}
                              platform={"react"}
                            >
                              {"User new"}
                            </PlasmicLink__>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__uB2Cl
                              )}
                            >
                              {"Commented about"}
                            </div>
                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__jwJ9U
                              )}
                              platform={"react"}
                            >
                              {"Community user"}
                            </PlasmicLink__>
                            <ReportSvgrepoComSvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__hiLjY
                              )}
                              role={"img"}
                            />

                            <DialogClose
                              className={classNames(
                                "__wab_instance",
                                sty.dialogClose__kvpco
                              )}
                            />
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__b80If
                            )}
                          >
                            {
                              "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                            }
                          </div>
                        </div>
                      </Stack__>
                    </DialogContent>
                  </Dialog2>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__aOd4J)}>
                  <Dialog2
                    data-plasmic-name={"dialogGrid7"}
                    data-plasmic-override={overrides.dialogGrid7}
                    className={classNames("__wab_instance", sty.dialogGrid7)}
                    defaultOpen={false}
                    onOpenChange={async (...eventArgs) => {
                      generateStateOnChangeProp($state, [
                        "dialogGrid7",
                        "open"
                      ]).apply(null, eventArgs);
                    }}
                    open={generateStateValueProp($state, [
                      "dialogGrid7",
                      "open"
                    ])}
                    themeResetClass={classNames(
                      projectcss.root_reset,
                      projectcss.plasmic_default_styles,
                      projectcss.plasmic_mixins,
                      projectcss.plasmic_tokens,
                      plasmic_antd_5_hostless_css.plasmic_tokens,
                      plasmic_plasmic_rich_components_css.plasmic_tokens
                    )}
                    triggerSlot={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___7DzV
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__xBeYe
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__zTzPc)}
                            displayHeight={"30px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"30px"}
                            loading={"lazy"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__bYywo
                            )}
                            href={"https://www.plasmic.app/"}
                            platform={"react"}
                          >
                            {"Company"}
                          </PlasmicLink__>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___3OZo1
                            )}
                          >
                            {"commented about"}
                          </div>
                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__hxuGd
                            )}
                            href={"https://www.plasmic.app/"}
                            platform={"react"}
                          >
                            {"Customer/Community"}
                          </PlasmicLink__>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tovD
                          )}
                        >
                          {
                            "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                          }
                        </div>
                        <AntdRate
                          data-plasmic-name={"rate21"}
                          data-plasmic-override={overrides.rate21}
                          allowHalf={true}
                          className={classNames("__wab_instance", sty.rate21)}
                          disabled={true}
                          onChange={async (...eventArgs) => {
                            generateStateOnChangeProp($state, [
                              "rate21",
                              "value"
                            ]).apply(null, eventArgs);
                          }}
                          symbols={
                            <React.Fragment>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___2EBBl
                                )}
                              >
                                {"1"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ofUFa
                                )}
                              >
                                {"2"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__wXrXz
                                )}
                              >
                                {"3"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ydex5
                                )}
                              >
                                {"4"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__sbo4Z
                                )}
                              >
                                {"5"}
                              </div>
                            </React.Fragment>
                          }
                          value={generateStateValueProp($state, [
                            "rate21",
                            "value"
                          ])}
                        />
                      </div>
                    }
                  >
                    <DialogContent
                      className={classNames(
                        "__wab_instance",
                        sty.dialogContent__aDjPv
                      )}
                      themeResetClass={classNames(
                        projectcss.root_reset,
                        projectcss.plasmic_default_styles,
                        projectcss.plasmic_mixins,
                        projectcss.plasmic_tokens,
                        plasmic_antd_5_hostless_css.plasmic_tokens,
                        plasmic_plasmic_rich_components_css.plasmic_tokens
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"containerPost7"}
                        data-plasmic-override={overrides.containerPost7}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.containerPost7
                        )}
                      >
                        <div
                          data-plasmic-name={"commentsSide7"}
                          data-plasmic-override={overrides.commentsSide7}
                          className={classNames(
                            projectcss.all,
                            sty.commentsSide7
                          )}
                        >
                          <div
                            data-plasmic-name={"comments7"}
                            data-plasmic-override={overrides.comments7}
                            className={classNames(
                              projectcss.all,
                              sty.comments7
                            )}
                          >
                            <div
                              data-plasmic-name={"commentContainer7"}
                              data-plasmic-override={
                                overrides.commentContainer7
                              }
                              className={classNames(
                                projectcss.all,
                                sty.commentContainer7
                              )}
                            >
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img__aXhqg)}
                                displayHeight={"30px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"none"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"30px"}
                                loading={"lazy"}
                              />

                              <div
                                data-plasmic-name={"userAndComment7"}
                                data-plasmic-override={
                                  overrides.userAndComment7
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.userAndComment7
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__yTiMt
                                  )}
                                >
                                  <PlasmicLink__
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.a,
                                      projectcss.__wab_text,
                                      sty.link__cZlKm
                                    )}
                                    platform={"react"}
                                  >
                                    {"Cool  User"}
                                  </PlasmicLink__>
                                  <AntdRate
                                    data-plasmic-name={"rate22"}
                                    data-plasmic-override={overrides.rate22}
                                    allowHalf={true}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.rate22
                                    )}
                                    disabled={true}
                                    onChange={async (...eventArgs) => {
                                      generateStateOnChangeProp($state, [
                                        "rate22",
                                        "value"
                                      ]).apply(null, eventArgs);
                                    }}
                                    symbols={
                                      <React.Fragment>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__gnROc
                                          )}
                                        >
                                          {"1"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text___4PhR4
                                          )}
                                        >
                                          {"2"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__sMu5F
                                          )}
                                        >
                                          {"3"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__vDmEg
                                          )}
                                        >
                                          {"4"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__u3Ld
                                          )}
                                        >
                                          {"5"}
                                        </div>
                                      </React.Fragment>
                                    }
                                    value={generateStateValueProp($state, [
                                      "rate22",
                                      "value"
                                    ])}
                                  />
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__aj7U5
                                  )}
                                >
                                  {"Cool great comment"}
                                </div>
                              </div>
                            </div>
                          </div>
                          <AntdRate
                            data-plasmic-name={"rate7"}
                            data-plasmic-override={overrides.rate7}
                            allowHalf={true}
                            className={classNames("__wab_instance", sty.rate7)}
                            onChange={async (...eventArgs) => {
                              generateStateOnChangeProp($state, [
                                "rate7",
                                "value"
                              ]).apply(null, eventArgs);
                            }}
                            symbols={
                              <React.Fragment>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__q5LI
                                  )}
                                >
                                  {"1"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__tZnzo
                                  )}
                                >
                                  {"2"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__kvblr
                                  )}
                                >
                                  {"3"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__aCm3P
                                  )}
                                >
                                  {"4"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__iag2D
                                  )}
                                >
                                  {"5"}
                                </div>
                              </React.Fragment>
                            }
                            value={generateStateValueProp($state, [
                              "rate7",
                              "value"
                            ])}
                          />

                          <textarea
                            data-plasmic-name={"textarea7"}
                            data-plasmic-override={overrides.textarea7}
                            className={classNames(
                              projectcss.all,
                              projectcss.textarea,
                              sty.textarea7
                            )}
                            onChange={async (...eventArgs) => {
                              (e => {
                                generateStateOnChangeProp($state, [
                                  "textarea7",
                                  "value"
                                ])(e.target.value);
                              }).apply(null, eventArgs);
                            }}
                            placeholder={"Add a comment..."}
                            ref={ref => {
                              $refs["textarea7"] = ref;
                            }}
                            value={
                              generateStateValueProp($state, [
                                "textarea7",
                                "value"
                              ]) ?? ""
                            }
                          />
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__ne46F)}
                          displayHeight={"auto"}
                          displayMaxHeight={"400px"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"539px"}
                          loading={"lazy"}
                          src={{
                            src: zqLeeVbDjv88IbcUnsplashJpgXtkCnxecXa1Y,
                            fullWidth: 3200,
                            fullHeight: 2133,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          data-plasmic-name={"userSide7"}
                          data-plasmic-override={overrides.userSide7}
                          className={classNames(projectcss.all, sty.userSide7)}
                        >
                          <div
                            data-plasmic-name={"userAction7"}
                            data-plasmic-override={overrides.userAction7}
                            className={classNames(
                              projectcss.all,
                              sty.userAction7
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__qijHd)}
                              displayHeight={"40px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"40px"}
                              loading={"lazy"}
                            />

                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__pB5Cm
                              )}
                              platform={"react"}
                            >
                              {"User new"}
                            </PlasmicLink__>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__fq1Q1
                              )}
                            >
                              {"Commented about"}
                            </div>
                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__rjK0Z
                              )}
                              platform={"react"}
                            >
                              {"Community user"}
                            </PlasmicLink__>
                            <ReportSvgrepoComSvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__gPCv
                              )}
                              role={"img"}
                            />

                            <DialogClose
                              className={classNames(
                                "__wab_instance",
                                sty.dialogClose__hnVvC
                              )}
                            />
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___1Vkoh
                            )}
                          >
                            {
                              "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                            }
                          </div>
                        </div>
                      </Stack__>
                    </DialogContent>
                  </Dialog2>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__pmWv9)}>
                  <Dialog2
                    data-plasmic-name={"dialogGrid8"}
                    data-plasmic-override={overrides.dialogGrid8}
                    className={classNames("__wab_instance", sty.dialogGrid8)}
                    defaultOpen={false}
                    onOpenChange={async (...eventArgs) => {
                      generateStateOnChangeProp($state, [
                        "dialogGrid8",
                        "open"
                      ]).apply(null, eventArgs);
                    }}
                    open={generateStateValueProp($state, [
                      "dialogGrid8",
                      "open"
                    ])}
                    themeResetClass={classNames(
                      projectcss.root_reset,
                      projectcss.plasmic_default_styles,
                      projectcss.plasmic_mixins,
                      projectcss.plasmic_tokens,
                      plasmic_antd_5_hostless_css.plasmic_tokens,
                      plasmic_plasmic_rich_components_css.plasmic_tokens
                    )}
                    triggerSlot={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hOPyM
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___2D8Kf
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__hetx)}
                            displayHeight={"30px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"30px"}
                            loading={"lazy"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link___5UHrR
                            )}
                            href={"https://www.plasmic.app/"}
                            platform={"react"}
                          >
                            {"Company"}
                          </PlasmicLink__>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lVkNu
                            )}
                          >
                            {"commented about"}
                          </div>
                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__ouSd0
                            )}
                            href={"https://www.plasmic.app/"}
                            platform={"react"}
                          >
                            {"Customer/Community"}
                          </PlasmicLink__>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___1Jo2F
                          )}
                        >
                          {
                            "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                          }
                        </div>
                        <AntdRate
                          data-plasmic-name={"rate23"}
                          data-plasmic-override={overrides.rate23}
                          allowHalf={true}
                          className={classNames("__wab_instance", sty.rate23)}
                          disabled={true}
                          onChange={async (...eventArgs) => {
                            generateStateOnChangeProp($state, [
                              "rate23",
                              "value"
                            ]).apply(null, eventArgs);
                          }}
                          symbols={
                            <React.Fragment>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__r5H50
                                )}
                              >
                                {"1"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__pLDq
                                )}
                              >
                                {"2"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__pqayy
                                )}
                              >
                                {"3"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ztPcK
                                )}
                              >
                                {"4"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__bEVpY
                                )}
                              >
                                {"5"}
                              </div>
                            </React.Fragment>
                          }
                          value={generateStateValueProp($state, [
                            "rate23",
                            "value"
                          ])}
                        />
                      </div>
                    }
                  >
                    <DialogContent
                      className={classNames(
                        "__wab_instance",
                        sty.dialogContent__xqanL
                      )}
                      themeResetClass={classNames(
                        projectcss.root_reset,
                        projectcss.plasmic_default_styles,
                        projectcss.plasmic_mixins,
                        projectcss.plasmic_tokens,
                        plasmic_antd_5_hostless_css.plasmic_tokens,
                        plasmic_plasmic_rich_components_css.plasmic_tokens
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"containerPost8"}
                        data-plasmic-override={overrides.containerPost8}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.containerPost8
                        )}
                      >
                        <div
                          data-plasmic-name={"commentsSide8"}
                          data-plasmic-override={overrides.commentsSide8}
                          className={classNames(
                            projectcss.all,
                            sty.commentsSide8
                          )}
                        >
                          <div
                            data-plasmic-name={"comments8"}
                            data-plasmic-override={overrides.comments8}
                            className={classNames(
                              projectcss.all,
                              sty.comments8
                            )}
                          >
                            <div
                              data-plasmic-name={"commentContainer8"}
                              data-plasmic-override={
                                overrides.commentContainer8
                              }
                              className={classNames(
                                projectcss.all,
                                sty.commentContainer8
                              )}
                            >
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img___0Qme)}
                                displayHeight={"30px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"none"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"30px"}
                                loading={"lazy"}
                              />

                              <div
                                data-plasmic-name={"userAndComment8"}
                                data-plasmic-override={
                                  overrides.userAndComment8
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.userAndComment8
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__yepE
                                  )}
                                >
                                  <PlasmicLink__
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.a,
                                      projectcss.__wab_text,
                                      sty.link__uut6L
                                    )}
                                    platform={"react"}
                                  >
                                    {"Cool  User"}
                                  </PlasmicLink__>
                                  <AntdRate
                                    data-plasmic-name={"rate24"}
                                    data-plasmic-override={overrides.rate24}
                                    allowHalf={true}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.rate24
                                    )}
                                    disabled={true}
                                    onChange={async (...eventArgs) => {
                                      generateStateOnChangeProp($state, [
                                        "rate24",
                                        "value"
                                      ]).apply(null, eventArgs);
                                    }}
                                    symbols={
                                      <React.Fragment>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__aPJvl
                                          )}
                                        >
                                          {"1"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__tqN0
                                          )}
                                        >
                                          {"2"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__znzb
                                          )}
                                        >
                                          {"3"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__hfv2R
                                          )}
                                        >
                                          {"4"}
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text___02CV
                                          )}
                                        >
                                          {"5"}
                                        </div>
                                      </React.Fragment>
                                    }
                                    value={generateStateValueProp($state, [
                                      "rate24",
                                      "value"
                                    ])}
                                  />
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__lyndq
                                  )}
                                >
                                  {"Cool great comment"}
                                </div>
                              </div>
                            </div>
                          </div>
                          <AntdRate
                            data-plasmic-name={"rate8"}
                            data-plasmic-override={overrides.rate8}
                            allowHalf={true}
                            className={classNames("__wab_instance", sty.rate8)}
                            onChange={async (...eventArgs) => {
                              generateStateOnChangeProp($state, [
                                "rate8",
                                "value"
                              ]).apply(null, eventArgs);
                            }}
                            symbols={
                              <React.Fragment>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__ccyT
                                  )}
                                >
                                  {"1"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__pd3Hf
                                  )}
                                >
                                  {"2"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__pa4Jd
                                  )}
                                >
                                  {"3"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__iCw9S
                                  )}
                                >
                                  {"4"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__ovCqn
                                  )}
                                >
                                  {"5"}
                                </div>
                              </React.Fragment>
                            }
                            value={generateStateValueProp($state, [
                              "rate8",
                              "value"
                            ])}
                          />

                          <textarea
                            data-plasmic-name={"textarea8"}
                            data-plasmic-override={overrides.textarea8}
                            className={classNames(
                              projectcss.all,
                              projectcss.textarea,
                              sty.textarea8
                            )}
                            onChange={async (...eventArgs) => {
                              (e => {
                                generateStateOnChangeProp($state, [
                                  "textarea8",
                                  "value"
                                ])(e.target.value);
                              }).apply(null, eventArgs);
                            }}
                            placeholder={"Add a comment..."}
                            ref={ref => {
                              $refs["textarea8"] = ref;
                            }}
                            value={
                              generateStateValueProp($state, [
                                "textarea8",
                                "value"
                              ]) ?? ""
                            }
                          />
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__vyZuO)}
                          displayHeight={"auto"}
                          displayMaxHeight={"400px"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"539px"}
                          loading={"lazy"}
                          src={{
                            src: zqLeeVbDjv88IbcUnsplashJpgXtkCnxecXa1Y,
                            fullWidth: 3200,
                            fullHeight: 2133,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          data-plasmic-name={"userSide8"}
                          data-plasmic-override={overrides.userSide8}
                          className={classNames(projectcss.all, sty.userSide8)}
                        >
                          <div
                            data-plasmic-name={"userAction8"}
                            data-plasmic-override={overrides.userAction8}
                            className={classNames(
                              projectcss.all,
                              sty.userAction8
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__xq9Yu)}
                              displayHeight={"40px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"40px"}
                              loading={"lazy"}
                            />

                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__uYQ9
                              )}
                              platform={"react"}
                            >
                              {"User new"}
                            </PlasmicLink__>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__yVy2D
                              )}
                            >
                              {"Commented about"}
                            </div>
                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link___0NKiO
                              )}
                              platform={"react"}
                            >
                              {"Community user"}
                            </PlasmicLink__>
                            <ReportSvgrepoComSvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__xsatg
                              )}
                              role={"img"}
                            />

                            <DialogClose
                              className={classNames(
                                "__wab_instance",
                                sty.dialogClose__faOEb
                              )}
                            />
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___7CBwa
                            )}
                          >
                            {
                              "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                            }
                          </div>
                        </div>
                      </Stack__>
                    </DialogContent>
                  </Dialog2>
                </div>
              </SliderWrapper>
            );
          })()}
        </div>
        <div
          data-plasmic-name={"countainer5"}
          data-plasmic-override={overrides.countainer5}
          className={classNames(projectcss.all, sty.countainer5)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___5Oel
            )}
          >
            {"About"}
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__k4VY)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___9OjtU)}
              displayHeight={"200px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"170px"}
              loading={"lazy"}
            />

            <div className={classNames(projectcss.all, sty.freeBox__wnQGz)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vad6C
                )}
              >
                {"Problem"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xTn4J
                )}
              >
                {"Enter some text"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tSmN2
                )}
              >
                {"Solution"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___9MWoT
                )}
              >
                {"Enter some text"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xEcM
                )}
              >
                {"Competitive advantage"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__iRqMn
                )}
              >
                {
                  "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                }
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"countainer6"}
          data-plasmic-override={overrides.countainer6}
          className={classNames(projectcss.all, sty.countainer6)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__myEE
            )}
          >
            {"Main competitive"}
          </div>
          {(() => {
            const child$Props = {
              arrows: false,
              autoplay: true,
              autoplaySpeed: 0,
              beforeChange: async (...eventArgs) => {
                generateStateOnChangePropForCodeComponents(
                  $state,
                  "currentSlide",
                  ["sliderCarousel4", "currentSlide"],
                  SliderWrapper_Helpers
                ).apply(null, eventArgs);
              },
              centerMode: false,
              className: classNames("__wab_instance", sty.sliderCarousel4),
              cssEase: "linear",
              dots: false,
              initialSlide: generateStateValueProp($state, [
                "sliderCarousel4",
                "currentSlide"
              ]),
              ref: ref => {
                $refs["sliderCarousel4"] = ref;
              },
              sliderScopeClassName: sty["sliderCarousel4__slider"],
              slidesPerRow: 4,
              speed: 12000
            };
            initializeCodeComponentStates(
              $state,
              [
                {
                  name: "currentSlide",
                  plasmicStateName: "sliderCarousel4.currentSlide"
                }
              ],

              [],
              SliderWrapper_Helpers ?? {},
              child$Props
            );
            return (
              <SliderWrapper
                data-plasmic-name={"sliderCarousel4"}
                data-plasmic-override={overrides.sliderCarousel4}
                {...child$Props}
              >
                <div className={classNames(projectcss.all, sty.freeBox__tiljt)}>
                  <AntdTooltip
                    className={classNames("__wab_instance", sty.tooltip__swLmF)}
                    overlayClassName={classNames({
                      [sty["pcls_WXeXRHHBdcHw"]]: true
                    })}
                    placement={"top"}
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___1TZt
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__sRidL
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__v1C0I
                            )}
                          >
                            {"Time:"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__aN5XV
                            )}
                          >
                            {"20"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__aYgxl
                            )}
                          >
                            {"years"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__sR7Ss
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vhUsb
                            )}
                          >
                            {"Strengs:"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___4DcuL
                            )}
                          >
                            {"Lorem ipsum is simly dummy text of the rinting"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___2EELv
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__z5PwE
                            )}
                          >
                            {"Weakness:"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lp7VZ
                            )}
                          >
                            {"Lorem ipsum is simly dummy text of the rinting"}
                          </div>
                        </div>
                      </div>
                    }
                    titleText={"Tooltip contents"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__jEp3E)}
                      displayHeight={"25px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"25px"}
                      loading={"lazy"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__apGAi
                      )}
                    >
                      {"Competitive"}
                    </div>
                  </AntdTooltip>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__tiRG)}>
                  <AntdTooltip
                    className={classNames("__wab_instance", sty.tooltip__mMlq3)}
                    overlayClassName={classNames({
                      [sty["pcls_qFBRPbvVFYby"]]: true
                    })}
                    placement={"top"}
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__mDoqW
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__uf2Y
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__f0Dz3
                            )}
                          >
                            {"Time:"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ey6Ua
                            )}
                          >
                            {"20"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__rw8ER
                            )}
                          >
                            {"years"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__oS7H7
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vw9Re
                            )}
                          >
                            {"Strengs:"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__cxRev
                            )}
                          >
                            {"Lorem ipsum is simly dummy text of the rinting"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vc9LN
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__h4Ff0
                            )}
                          >
                            {"Weakness:"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__x8EAk
                            )}
                          >
                            {"Lorem ipsum is simly dummy text of the rinting"}
                          </div>
                        </div>
                      </div>
                    }
                    titleText={"Tooltip contents"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___8PqlI)}
                      displayHeight={"25px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"25px"}
                      loading={"lazy"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4KeUt
                      )}
                    >
                      {"Competitive"}
                    </div>
                  </AntdTooltip>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__s2XB)}>
                  <AntdTooltip
                    className={classNames("__wab_instance", sty.tooltip__bqo6G)}
                    overlayClassName={classNames({
                      [sty["pcls_ZvbIFqW2b0mB"]]: true
                    })}
                    placement={"top"}
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__cwsRb
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__wq1QP
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xb8Hs
                            )}
                          >
                            {"Time:"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jk7K1
                            )}
                          >
                            {"20"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__awZkw
                            )}
                          >
                            {"years"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mg54I
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ha7Sl
                            )}
                          >
                            {"Strengs:"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__y0R22
                            )}
                          >
                            {"Lorem ipsum is simly dummy text of the rinting"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___9Xe3N
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__djQkh
                            )}
                          >
                            {"Weakness:"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jrmd7
                            )}
                          >
                            {"Lorem ipsum is simly dummy text of the rinting"}
                          </div>
                        </div>
                      </div>
                    }
                    titleText={"Tooltip contents"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__o4Bp)}
                      displayHeight={"25px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"25px"}
                      loading={"lazy"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qPc6J
                      )}
                    >
                      {"Competitive"}
                    </div>
                  </AntdTooltip>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__qLZqX)}>
                  <AntdTooltip
                    className={classNames("__wab_instance", sty.tooltip__zeYxj)}
                    overlayClassName={classNames({
                      [sty["pcls_1JVzt-ym_nH6"]]: true
                    })}
                    placement={"top"}
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__poyLg
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__hbRfn
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___7UVnf
                            )}
                          >
                            {"Time:"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vWkhA
                            )}
                          >
                            {"20"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xfuiD
                            )}
                          >
                            {"years"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__zDl2J
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__gPxjF
                            )}
                          >
                            {"Strengs:"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dJulx
                            )}
                          >
                            {"Lorem ipsum is simly dummy text of the rinting"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cihrL
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bJoqa
                            )}
                          >
                            {"Weakness:"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vpFst
                            )}
                          >
                            {"Lorem ipsum is simly dummy text of the rinting"}
                          </div>
                        </div>
                      </div>
                    }
                    titleText={"Tooltip contents"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__vF9L8)}
                      displayHeight={"25px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"25px"}
                      loading={"lazy"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gl7Ay
                      )}
                    >
                      {"Competitive"}
                    </div>
                  </AntdTooltip>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__n3Coh)}>
                  <AntdTooltip
                    className={classNames("__wab_instance", sty.tooltip__aDWoM)}
                    overlayClassName={classNames({
                      [sty["pcls__uX8fCWyXv33"]]: true
                    })}
                    placement={"top"}
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hekr1
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___8L9KK
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pNdel
                            )}
                          >
                            {"Time:"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___9NZ
                            )}
                          >
                            {"20"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___0YXb4
                            )}
                          >
                            {"years"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__r2CvL
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oAatS
                            )}
                          >
                            {"Strengs:"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__sB31
                            )}
                          >
                            {"Lorem ipsum is simly dummy text of the rinting"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__v89U2
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__olLQz
                            )}
                          >
                            {"Weakness:"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__avdPo
                            )}
                          >
                            {"Lorem ipsum is simly dummy text of the rinting"}
                          </div>
                        </div>
                      </div>
                    }
                    titleText={"Tooltip contents"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___5SPhs)}
                      displayHeight={"25px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"25px"}
                      loading={"lazy"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bxwMq
                      )}
                    >
                      {"Competitive"}
                    </div>
                  </AntdTooltip>
                </div>
              </SliderWrapper>
            );
          })()}
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "topBar",
    "navigationBar",
    "account",
    "button",
    "countainer1",
    "dialog7",
    "loginButton",
    "communities25",
    "rate25",
    "communities26",
    "rate26",
    "communities27",
    "rate27",
    "communities28",
    "rate28",
    "pagination7",
    "rate29",
    "countainer2",
    "sliderCarousel",
    "countainer3",
    "sliderCarousel2",
    "dialogGrid",
    "rate9",
    "containerPost",
    "commentsSide",
    "comments",
    "commentContainer",
    "userAndComment",
    "rate11",
    "rate",
    "textarea",
    "userSide",
    "userAction",
    "dialogGrid2",
    "rate10",
    "containerPost2",
    "commentsSide2",
    "comments2",
    "commentContainer2",
    "userAndComment2",
    "rate12",
    "rate2",
    "textarea2",
    "userSide2",
    "userAction2",
    "dialogGrid3",
    "rate13",
    "containerPost3",
    "commentsSide3",
    "comments3",
    "commentContainer3",
    "userAndComment3",
    "rate14",
    "rate3",
    "textarea3",
    "userSide3",
    "userAction3",
    "dialogGrid4",
    "rate15",
    "containerPost4",
    "commentsSide4",
    "comments4",
    "commentContainer4",
    "userAndComment4",
    "rate16",
    "rate4",
    "textarea4",
    "userSide4",
    "userAction4",
    "countainer4",
    "sliderCarousel3",
    "dialogGrid5",
    "rate17",
    "containerPost5",
    "commentsSide5",
    "comments5",
    "commentContainer5",
    "userAndComment5",
    "rate18",
    "rate5",
    "textarea5",
    "userSide5",
    "userAction5",
    "dialogGrid6",
    "rate19",
    "containerPost6",
    "commentsSide6",
    "comments6",
    "commentContainer6",
    "userAndComment6",
    "rate20",
    "rate6",
    "textarea6",
    "userSide6",
    "userAction6",
    "dialogGrid7",
    "rate21",
    "containerPost7",
    "commentsSide7",
    "comments7",
    "commentContainer7",
    "userAndComment7",
    "rate22",
    "rate7",
    "textarea7",
    "userSide7",
    "userAction7",
    "dialogGrid8",
    "rate23",
    "containerPost8",
    "commentsSide8",
    "comments8",
    "commentContainer8",
    "userAndComment8",
    "rate24",
    "rate8",
    "textarea8",
    "userSide8",
    "userAction8",
    "countainer5",
    "countainer6",
    "sliderCarousel4"
  ],

  topBar: ["topBar", "navigationBar", "account", "button"],
  navigationBar: ["navigationBar"],
  account: ["account", "button"],
  button: ["button"],
  countainer1: [
    "countainer1",
    "dialog7",
    "loginButton",
    "communities25",
    "rate25",
    "communities26",
    "rate26",
    "communities27",
    "rate27",
    "communities28",
    "rate28",
    "pagination7",
    "rate29"
  ],

  dialog7: [
    "dialog7",
    "loginButton",
    "communities25",
    "rate25",
    "communities26",
    "rate26",
    "communities27",
    "rate27",
    "communities28",
    "rate28",
    "pagination7"
  ],

  loginButton: ["loginButton"],
  communities25: ["communities25", "rate25"],
  rate25: ["rate25"],
  communities26: ["communities26", "rate26"],
  rate26: ["rate26"],
  communities27: ["communities27", "rate27"],
  rate27: ["rate27"],
  communities28: ["communities28", "rate28"],
  rate28: ["rate28"],
  pagination7: ["pagination7"],
  rate29: ["rate29"],
  countainer2: ["countainer2", "sliderCarousel"],
  sliderCarousel: ["sliderCarousel"],
  countainer3: [
    "countainer3",
    "sliderCarousel2",
    "dialogGrid",
    "rate9",
    "containerPost",
    "commentsSide",
    "comments",
    "commentContainer",
    "userAndComment",
    "rate11",
    "rate",
    "textarea",
    "userSide",
    "userAction",
    "dialogGrid2",
    "rate10",
    "containerPost2",
    "commentsSide2",
    "comments2",
    "commentContainer2",
    "userAndComment2",
    "rate12",
    "rate2",
    "textarea2",
    "userSide2",
    "userAction2",
    "dialogGrid3",
    "rate13",
    "containerPost3",
    "commentsSide3",
    "comments3",
    "commentContainer3",
    "userAndComment3",
    "rate14",
    "rate3",
    "textarea3",
    "userSide3",
    "userAction3",
    "dialogGrid4",
    "rate15",
    "containerPost4",
    "commentsSide4",
    "comments4",
    "commentContainer4",
    "userAndComment4",
    "rate16",
    "rate4",
    "textarea4",
    "userSide4",
    "userAction4"
  ],

  sliderCarousel2: [
    "sliderCarousel2",
    "dialogGrid",
    "rate9",
    "containerPost",
    "commentsSide",
    "comments",
    "commentContainer",
    "userAndComment",
    "rate11",
    "rate",
    "textarea",
    "userSide",
    "userAction",
    "dialogGrid2",
    "rate10",
    "containerPost2",
    "commentsSide2",
    "comments2",
    "commentContainer2",
    "userAndComment2",
    "rate12",
    "rate2",
    "textarea2",
    "userSide2",
    "userAction2",
    "dialogGrid3",
    "rate13",
    "containerPost3",
    "commentsSide3",
    "comments3",
    "commentContainer3",
    "userAndComment3",
    "rate14",
    "rate3",
    "textarea3",
    "userSide3",
    "userAction3",
    "dialogGrid4",
    "rate15",
    "containerPost4",
    "commentsSide4",
    "comments4",
    "commentContainer4",
    "userAndComment4",
    "rate16",
    "rate4",
    "textarea4",
    "userSide4",
    "userAction4"
  ],

  dialogGrid: [
    "dialogGrid",
    "rate9",
    "containerPost",
    "commentsSide",
    "comments",
    "commentContainer",
    "userAndComment",
    "rate11",
    "rate",
    "textarea",
    "userSide",
    "userAction"
  ],

  rate9: ["rate9"],
  containerPost: [
    "containerPost",
    "commentsSide",
    "comments",
    "commentContainer",
    "userAndComment",
    "rate11",
    "rate",
    "textarea",
    "userSide",
    "userAction"
  ],

  commentsSide: [
    "commentsSide",
    "comments",
    "commentContainer",
    "userAndComment",
    "rate11",
    "rate",
    "textarea"
  ],

  comments: ["comments", "commentContainer", "userAndComment", "rate11"],
  commentContainer: ["commentContainer", "userAndComment", "rate11"],
  userAndComment: ["userAndComment", "rate11"],
  rate11: ["rate11"],
  rate: ["rate"],
  textarea: ["textarea"],
  userSide: ["userSide", "userAction"],
  userAction: ["userAction"],
  dialogGrid2: [
    "dialogGrid2",
    "rate10",
    "containerPost2",
    "commentsSide2",
    "comments2",
    "commentContainer2",
    "userAndComment2",
    "rate12",
    "rate2",
    "textarea2",
    "userSide2",
    "userAction2"
  ],

  rate10: ["rate10"],
  containerPost2: [
    "containerPost2",
    "commentsSide2",
    "comments2",
    "commentContainer2",
    "userAndComment2",
    "rate12",
    "rate2",
    "textarea2",
    "userSide2",
    "userAction2"
  ],

  commentsSide2: [
    "commentsSide2",
    "comments2",
    "commentContainer2",
    "userAndComment2",
    "rate12",
    "rate2",
    "textarea2"
  ],

  comments2: ["comments2", "commentContainer2", "userAndComment2", "rate12"],
  commentContainer2: ["commentContainer2", "userAndComment2", "rate12"],
  userAndComment2: ["userAndComment2", "rate12"],
  rate12: ["rate12"],
  rate2: ["rate2"],
  textarea2: ["textarea2"],
  userSide2: ["userSide2", "userAction2"],
  userAction2: ["userAction2"],
  dialogGrid3: [
    "dialogGrid3",
    "rate13",
    "containerPost3",
    "commentsSide3",
    "comments3",
    "commentContainer3",
    "userAndComment3",
    "rate14",
    "rate3",
    "textarea3",
    "userSide3",
    "userAction3"
  ],

  rate13: ["rate13"],
  containerPost3: [
    "containerPost3",
    "commentsSide3",
    "comments3",
    "commentContainer3",
    "userAndComment3",
    "rate14",
    "rate3",
    "textarea3",
    "userSide3",
    "userAction3"
  ],

  commentsSide3: [
    "commentsSide3",
    "comments3",
    "commentContainer3",
    "userAndComment3",
    "rate14",
    "rate3",
    "textarea3"
  ],

  comments3: ["comments3", "commentContainer3", "userAndComment3", "rate14"],
  commentContainer3: ["commentContainer3", "userAndComment3", "rate14"],
  userAndComment3: ["userAndComment3", "rate14"],
  rate14: ["rate14"],
  rate3: ["rate3"],
  textarea3: ["textarea3"],
  userSide3: ["userSide3", "userAction3"],
  userAction3: ["userAction3"],
  dialogGrid4: [
    "dialogGrid4",
    "rate15",
    "containerPost4",
    "commentsSide4",
    "comments4",
    "commentContainer4",
    "userAndComment4",
    "rate16",
    "rate4",
    "textarea4",
    "userSide4",
    "userAction4"
  ],

  rate15: ["rate15"],
  containerPost4: [
    "containerPost4",
    "commentsSide4",
    "comments4",
    "commentContainer4",
    "userAndComment4",
    "rate16",
    "rate4",
    "textarea4",
    "userSide4",
    "userAction4"
  ],

  commentsSide4: [
    "commentsSide4",
    "comments4",
    "commentContainer4",
    "userAndComment4",
    "rate16",
    "rate4",
    "textarea4"
  ],

  comments4: ["comments4", "commentContainer4", "userAndComment4", "rate16"],
  commentContainer4: ["commentContainer4", "userAndComment4", "rate16"],
  userAndComment4: ["userAndComment4", "rate16"],
  rate16: ["rate16"],
  rate4: ["rate4"],
  textarea4: ["textarea4"],
  userSide4: ["userSide4", "userAction4"],
  userAction4: ["userAction4"],
  countainer4: [
    "countainer4",
    "sliderCarousel3",
    "dialogGrid5",
    "rate17",
    "containerPost5",
    "commentsSide5",
    "comments5",
    "commentContainer5",
    "userAndComment5",
    "rate18",
    "rate5",
    "textarea5",
    "userSide5",
    "userAction5",
    "dialogGrid6",
    "rate19",
    "containerPost6",
    "commentsSide6",
    "comments6",
    "commentContainer6",
    "userAndComment6",
    "rate20",
    "rate6",
    "textarea6",
    "userSide6",
    "userAction6",
    "dialogGrid7",
    "rate21",
    "containerPost7",
    "commentsSide7",
    "comments7",
    "commentContainer7",
    "userAndComment7",
    "rate22",
    "rate7",
    "textarea7",
    "userSide7",
    "userAction7",
    "dialogGrid8",
    "rate23",
    "containerPost8",
    "commentsSide8",
    "comments8",
    "commentContainer8",
    "userAndComment8",
    "rate24",
    "rate8",
    "textarea8",
    "userSide8",
    "userAction8"
  ],

  sliderCarousel3: [
    "sliderCarousel3",
    "dialogGrid5",
    "rate17",
    "containerPost5",
    "commentsSide5",
    "comments5",
    "commentContainer5",
    "userAndComment5",
    "rate18",
    "rate5",
    "textarea5",
    "userSide5",
    "userAction5",
    "dialogGrid6",
    "rate19",
    "containerPost6",
    "commentsSide6",
    "comments6",
    "commentContainer6",
    "userAndComment6",
    "rate20",
    "rate6",
    "textarea6",
    "userSide6",
    "userAction6",
    "dialogGrid7",
    "rate21",
    "containerPost7",
    "commentsSide7",
    "comments7",
    "commentContainer7",
    "userAndComment7",
    "rate22",
    "rate7",
    "textarea7",
    "userSide7",
    "userAction7",
    "dialogGrid8",
    "rate23",
    "containerPost8",
    "commentsSide8",
    "comments8",
    "commentContainer8",
    "userAndComment8",
    "rate24",
    "rate8",
    "textarea8",
    "userSide8",
    "userAction8"
  ],

  dialogGrid5: [
    "dialogGrid5",
    "rate17",
    "containerPost5",
    "commentsSide5",
    "comments5",
    "commentContainer5",
    "userAndComment5",
    "rate18",
    "rate5",
    "textarea5",
    "userSide5",
    "userAction5"
  ],

  rate17: ["rate17"],
  containerPost5: [
    "containerPost5",
    "commentsSide5",
    "comments5",
    "commentContainer5",
    "userAndComment5",
    "rate18",
    "rate5",
    "textarea5",
    "userSide5",
    "userAction5"
  ],

  commentsSide5: [
    "commentsSide5",
    "comments5",
    "commentContainer5",
    "userAndComment5",
    "rate18",
    "rate5",
    "textarea5"
  ],

  comments5: ["comments5", "commentContainer5", "userAndComment5", "rate18"],
  commentContainer5: ["commentContainer5", "userAndComment5", "rate18"],
  userAndComment5: ["userAndComment5", "rate18"],
  rate18: ["rate18"],
  rate5: ["rate5"],
  textarea5: ["textarea5"],
  userSide5: ["userSide5", "userAction5"],
  userAction5: ["userAction5"],
  dialogGrid6: [
    "dialogGrid6",
    "rate19",
    "containerPost6",
    "commentsSide6",
    "comments6",
    "commentContainer6",
    "userAndComment6",
    "rate20",
    "rate6",
    "textarea6",
    "userSide6",
    "userAction6"
  ],

  rate19: ["rate19"],
  containerPost6: [
    "containerPost6",
    "commentsSide6",
    "comments6",
    "commentContainer6",
    "userAndComment6",
    "rate20",
    "rate6",
    "textarea6",
    "userSide6",
    "userAction6"
  ],

  commentsSide6: [
    "commentsSide6",
    "comments6",
    "commentContainer6",
    "userAndComment6",
    "rate20",
    "rate6",
    "textarea6"
  ],

  comments6: ["comments6", "commentContainer6", "userAndComment6", "rate20"],
  commentContainer6: ["commentContainer6", "userAndComment6", "rate20"],
  userAndComment6: ["userAndComment6", "rate20"],
  rate20: ["rate20"],
  rate6: ["rate6"],
  textarea6: ["textarea6"],
  userSide6: ["userSide6", "userAction6"],
  userAction6: ["userAction6"],
  dialogGrid7: [
    "dialogGrid7",
    "rate21",
    "containerPost7",
    "commentsSide7",
    "comments7",
    "commentContainer7",
    "userAndComment7",
    "rate22",
    "rate7",
    "textarea7",
    "userSide7",
    "userAction7"
  ],

  rate21: ["rate21"],
  containerPost7: [
    "containerPost7",
    "commentsSide7",
    "comments7",
    "commentContainer7",
    "userAndComment7",
    "rate22",
    "rate7",
    "textarea7",
    "userSide7",
    "userAction7"
  ],

  commentsSide7: [
    "commentsSide7",
    "comments7",
    "commentContainer7",
    "userAndComment7",
    "rate22",
    "rate7",
    "textarea7"
  ],

  comments7: ["comments7", "commentContainer7", "userAndComment7", "rate22"],
  commentContainer7: ["commentContainer7", "userAndComment7", "rate22"],
  userAndComment7: ["userAndComment7", "rate22"],
  rate22: ["rate22"],
  rate7: ["rate7"],
  textarea7: ["textarea7"],
  userSide7: ["userSide7", "userAction7"],
  userAction7: ["userAction7"],
  dialogGrid8: [
    "dialogGrid8",
    "rate23",
    "containerPost8",
    "commentsSide8",
    "comments8",
    "commentContainer8",
    "userAndComment8",
    "rate24",
    "rate8",
    "textarea8",
    "userSide8",
    "userAction8"
  ],

  rate23: ["rate23"],
  containerPost8: [
    "containerPost8",
    "commentsSide8",
    "comments8",
    "commentContainer8",
    "userAndComment8",
    "rate24",
    "rate8",
    "textarea8",
    "userSide8",
    "userAction8"
  ],

  commentsSide8: [
    "commentsSide8",
    "comments8",
    "commentContainer8",
    "userAndComment8",
    "rate24",
    "rate8",
    "textarea8"
  ],

  comments8: ["comments8", "commentContainer8", "userAndComment8", "rate24"],
  commentContainer8: ["commentContainer8", "userAndComment8", "rate24"],
  userAndComment8: ["userAndComment8", "rate24"],
  rate24: ["rate24"],
  rate8: ["rate8"],
  textarea8: ["textarea8"],
  userSide8: ["userSide8", "userAction8"],
  userAction8: ["userAction8"],
  countainer5: ["countainer5"],
  countainer6: ["countainer6", "sliderCarousel4"],
  sliderCarousel4: ["sliderCarousel4"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicCCompanyProfile__ArgProps,
          internalVariantPropNames: PlasmicCCompanyProfile__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicCCompanyProfile__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicCCompanyProfile";
  } else {
    func.displayName = `PlasmicCCompanyProfile.${nodeName}`;
  }
  return func;
}

export const PlasmicCCompanyProfile = Object.assign(
  // Top-level PlasmicCCompanyProfile renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    topBar: makeNodeComponent("topBar"),
    navigationBar: makeNodeComponent("navigationBar"),
    account: makeNodeComponent("account"),
    button: makeNodeComponent("button"),
    countainer1: makeNodeComponent("countainer1"),
    dialog7: makeNodeComponent("dialog7"),
    loginButton: makeNodeComponent("loginButton"),
    communities25: makeNodeComponent("communities25"),
    rate25: makeNodeComponent("rate25"),
    communities26: makeNodeComponent("communities26"),
    rate26: makeNodeComponent("rate26"),
    communities27: makeNodeComponent("communities27"),
    rate27: makeNodeComponent("rate27"),
    communities28: makeNodeComponent("communities28"),
    rate28: makeNodeComponent("rate28"),
    pagination7: makeNodeComponent("pagination7"),
    rate29: makeNodeComponent("rate29"),
    countainer2: makeNodeComponent("countainer2"),
    sliderCarousel: makeNodeComponent("sliderCarousel"),
    countainer3: makeNodeComponent("countainer3"),
    sliderCarousel2: makeNodeComponent("sliderCarousel2"),
    dialogGrid: makeNodeComponent("dialogGrid"),
    rate9: makeNodeComponent("rate9"),
    containerPost: makeNodeComponent("containerPost"),
    commentsSide: makeNodeComponent("commentsSide"),
    comments: makeNodeComponent("comments"),
    commentContainer: makeNodeComponent("commentContainer"),
    userAndComment: makeNodeComponent("userAndComment"),
    rate11: makeNodeComponent("rate11"),
    rate: makeNodeComponent("rate"),
    textarea: makeNodeComponent("textarea"),
    userSide: makeNodeComponent("userSide"),
    userAction: makeNodeComponent("userAction"),
    dialogGrid2: makeNodeComponent("dialogGrid2"),
    rate10: makeNodeComponent("rate10"),
    containerPost2: makeNodeComponent("containerPost2"),
    commentsSide2: makeNodeComponent("commentsSide2"),
    comments2: makeNodeComponent("comments2"),
    commentContainer2: makeNodeComponent("commentContainer2"),
    userAndComment2: makeNodeComponent("userAndComment2"),
    rate12: makeNodeComponent("rate12"),
    rate2: makeNodeComponent("rate2"),
    textarea2: makeNodeComponent("textarea2"),
    userSide2: makeNodeComponent("userSide2"),
    userAction2: makeNodeComponent("userAction2"),
    dialogGrid3: makeNodeComponent("dialogGrid3"),
    rate13: makeNodeComponent("rate13"),
    containerPost3: makeNodeComponent("containerPost3"),
    commentsSide3: makeNodeComponent("commentsSide3"),
    comments3: makeNodeComponent("comments3"),
    commentContainer3: makeNodeComponent("commentContainer3"),
    userAndComment3: makeNodeComponent("userAndComment3"),
    rate14: makeNodeComponent("rate14"),
    rate3: makeNodeComponent("rate3"),
    textarea3: makeNodeComponent("textarea3"),
    userSide3: makeNodeComponent("userSide3"),
    userAction3: makeNodeComponent("userAction3"),
    dialogGrid4: makeNodeComponent("dialogGrid4"),
    rate15: makeNodeComponent("rate15"),
    containerPost4: makeNodeComponent("containerPost4"),
    commentsSide4: makeNodeComponent("commentsSide4"),
    comments4: makeNodeComponent("comments4"),
    commentContainer4: makeNodeComponent("commentContainer4"),
    userAndComment4: makeNodeComponent("userAndComment4"),
    rate16: makeNodeComponent("rate16"),
    rate4: makeNodeComponent("rate4"),
    textarea4: makeNodeComponent("textarea4"),
    userSide4: makeNodeComponent("userSide4"),
    userAction4: makeNodeComponent("userAction4"),
    countainer4: makeNodeComponent("countainer4"),
    sliderCarousel3: makeNodeComponent("sliderCarousel3"),
    dialogGrid5: makeNodeComponent("dialogGrid5"),
    rate17: makeNodeComponent("rate17"),
    containerPost5: makeNodeComponent("containerPost5"),
    commentsSide5: makeNodeComponent("commentsSide5"),
    comments5: makeNodeComponent("comments5"),
    commentContainer5: makeNodeComponent("commentContainer5"),
    userAndComment5: makeNodeComponent("userAndComment5"),
    rate18: makeNodeComponent("rate18"),
    rate5: makeNodeComponent("rate5"),
    textarea5: makeNodeComponent("textarea5"),
    userSide5: makeNodeComponent("userSide5"),
    userAction5: makeNodeComponent("userAction5"),
    dialogGrid6: makeNodeComponent("dialogGrid6"),
    rate19: makeNodeComponent("rate19"),
    containerPost6: makeNodeComponent("containerPost6"),
    commentsSide6: makeNodeComponent("commentsSide6"),
    comments6: makeNodeComponent("comments6"),
    commentContainer6: makeNodeComponent("commentContainer6"),
    userAndComment6: makeNodeComponent("userAndComment6"),
    rate20: makeNodeComponent("rate20"),
    rate6: makeNodeComponent("rate6"),
    textarea6: makeNodeComponent("textarea6"),
    userSide6: makeNodeComponent("userSide6"),
    userAction6: makeNodeComponent("userAction6"),
    dialogGrid7: makeNodeComponent("dialogGrid7"),
    rate21: makeNodeComponent("rate21"),
    containerPost7: makeNodeComponent("containerPost7"),
    commentsSide7: makeNodeComponent("commentsSide7"),
    comments7: makeNodeComponent("comments7"),
    commentContainer7: makeNodeComponent("commentContainer7"),
    userAndComment7: makeNodeComponent("userAndComment7"),
    rate22: makeNodeComponent("rate22"),
    rate7: makeNodeComponent("rate7"),
    textarea7: makeNodeComponent("textarea7"),
    userSide7: makeNodeComponent("userSide7"),
    userAction7: makeNodeComponent("userAction7"),
    dialogGrid8: makeNodeComponent("dialogGrid8"),
    rate23: makeNodeComponent("rate23"),
    containerPost8: makeNodeComponent("containerPost8"),
    commentsSide8: makeNodeComponent("commentsSide8"),
    comments8: makeNodeComponent("comments8"),
    commentContainer8: makeNodeComponent("commentContainer8"),
    userAndComment8: makeNodeComponent("userAndComment8"),
    rate24: makeNodeComponent("rate24"),
    rate8: makeNodeComponent("rate8"),
    textarea8: makeNodeComponent("textarea8"),
    userSide8: makeNodeComponent("userSide8"),
    userAction8: makeNodeComponent("userAction8"),
    countainer5: makeNodeComponent("countainer5"),
    countainer6: makeNodeComponent("countainer6"),
    sliderCarousel4: makeNodeComponent("sliderCarousel4"),
    // Metadata about props expected for PlasmicCCompanyProfile
    internalVariantProps: PlasmicCCompanyProfile__VariantProps,
    internalArgProps: PlasmicCCompanyProfile__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Company Profile",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicCCompanyProfile;
/* prettier-ignore-end */
