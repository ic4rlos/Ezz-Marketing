/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6Q26EfqfPNQuydumhAEs1S
// Component: y8RS-4ZQwDQO
import * as React from "react";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  hasVariant,
  initializeCodeComponentStates,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";
import {
  executePlasmicDataOp,
  usePlasmicDataOp,
  usePlasmicInvalidate
} from "@plasmicapp/react-web/lib/data-sources";
import Navbar from "../../Navbar"; // plasmic-import: F8Hx3agbJ6RR/component
import LoginButton from "../../LoginButton"; // plasmic-import: sda60oPQ2thQ/component
import Section from "../../Section"; // plasmic-import: Ihhe5kgEE8NU/component
import { FormWrapper } from "@plasmicpkgs/antd5/skinny/Form";
import { formHelpers as FormWrapper_Helpers } from "@plasmicpkgs/antd5/skinny/Form";
import { FormItemWrapper } from "@plasmicpkgs/antd5/skinny/FormItem";
import EmailInput from "../../EmailInput"; // plasmic-import: N6jiyqjMi6tf/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import FooterSection from "../../FooterSection"; // plasmic-import: V9WWasIOlC1n/component
import { useScreenVariants as useScreenVariantsnnPusS1DHa } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: nnPus_s1dHa_/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 6Q26EfqfPNQuydumhAEs1S/projectcss
import sty from "./PlasmicALandingPage.module.css"; // plasmic-import: y8RS-4ZQwDQO/css
import ChevronRightIcon from "./icons/PlasmicIcon__ChevronRight"; // plasmic-import: ryCzpQv_eaMV/icon
import _4654364831553230929SvgIcon from "./icons/PlasmicIcon___4654364831553230929Svg"; // plasmic-import: yJGoN8YKg8Eb/icon
import LinkedinSvgIcon from "./icons/PlasmicIcon__LinkedinSvg"; // plasmic-import: 3lgoJP7URTzd/icon
import logo2SvgVCBiJbBayQXz from "./images/logo2Svg.svg"; // plasmic-import: vCBiJbBayQXz/picture
import asPngC09ZOpjpcUvx from "./images/asPng.png"; // plasmic-import: C09zOpjpcUvx/picture
import companies1PngQIPsVzcdYve from "./images/companies1Png.png"; // plasmic-import: q_iPSVzcdYve/picture
import companies2PngLfLt9U1AenDb from "./images/companies2Png.png"; // plasmic-import: LfLt9u1aenDB/picture
import companies3Png142OBoV8Ju6 from "./images/companies3Png.png"; // plasmic-import: 142oBoV8ju6-/picture
import companies4PngIiuxq17S4VwE from "./images/companies4Png.png"; // plasmic-import: Iiuxq17S4VwE/picture
import tickCircleSvgYCzvUenmsqZf from "./images/tickCircleSvg.svg"; // plasmic-import: yCZVUenmsqZf/picture
import gggPng6FemiXdVg8R5 from "./images/gggPng.png"; // plasmic-import: 6femiXdVG8R5/picture
import newslettersSvgS9RrePcTwPgw from "./images/newslettersSvg.svg"; // plasmic-import: s9RREPcTwPgw/picture
import icons8EmojiDeNotaDeDolar48PngCHo38HCozWWq from "./images/icons8EmojiDeNotaDeDolar48Png.png"; // plasmic-import: CHo38hCozWWq/picture
import dashboardSvgVfkdzVvVlm7 from "./images/dashboardSvg.svg"; // plasmic-import: _VFKDZVvVlm7/picture
import icons8GraduationCap48PngIt0C8EN7ToSx from "./images/icons8GraduationCap48Png.png"; // plasmic-import: It0c8eN7toSX/picture
import icons8EmojiDeAlfineteRedondo48Png2AjOuzpKtrg from "./images/icons8EmojiDeAlfineteRedondo48Png.png"; // plasmic-import: _2AjOUZPKtrg/picture
import userflowSvgLkv1JX2YgDxW from "./images/userflowSvg.svg"; // plasmic-import: LKV1jX2YGDxW/picture
import securitySvgB41Vdaj06Oa from "./images/securitySvg.svg"; // plasmic-import: B41Vdaj06OA_/picture
import icons8AntenaDeSatelite48PngDqZ4Hom3CP2 from "./images/icons8AntenaDeSatelite48Png.png"; // plasmic-import: Dq-Z4Hom3cP2/picture
import analyticsSvgXI1JY0MmLpXg from "./images/analyticsSvg.svg"; // plasmic-import: xI1jY0MmLPXg/picture
import searchSvg26Pf8ZmjP5HkS from "./images/searchSvg2.svg"; // plasmic-import: 6Pf8zmjP5hkS/picture
import protectionSvg2L6TLq83JrNu from "./images/protectionSvg.svg"; // plasmic-import: 2L6tLQ83JrNu/picture
import image2PngCkN42US8FcZf from "./images/image2Png.png"; // plasmic-import: ckN42uS8fcZf/picture
import happyManSvgrepoComSvgIhPdq5Dd3DUv from "./images/happyManSvgrepoComSvg.svg"; // plasmic-import: IHPdq5DD3DUv/picture
import lineBlueSvgQq2IoZ1Se0XL from "./images/lineBlueSvg.svg"; // plasmic-import: Qq2ioZ1SE0xL/picture
import image3PngAOrfhZgDAh7M from "./images/image3Png.png"; // plasmic-import: aOrfhZgDAh7m/picture
import noSvgrepoComSvgHMkFRqFDbAvC from "./images/noSvgrepoComSvg.svg"; // plasmic-import: hMkFRqFDbAvC/picture
import image4PngALSh3S1SO4L from "./images/image4Png.png"; // plasmic-import: a-lSh3s1sO4L/picture
import businessPersonMaleWithACaneSvgrepoComSvgUhOusNTzdWdV from "./images/businessPersonMaleWithACaneSvgrepoComSvg.svg"; // plasmic-import: UhOusNTzdWdV/picture
import asasPng5P7O9FXqAkU from "./images/asasPng.png"; // plasmic-import: 5p7o9F_xqAkU/picture

createPlasmicElementProxy;

export const PlasmicALandingPage__VariantProps = new Array();

export const PlasmicALandingPage__ArgProps = new Array();

const $$ = {};

function PlasmicALandingPage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  let [$queries, setDollarQueries] = React.useState({});
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "form2.value",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,
        refName: "form2",
        onMutate: generateOnMutateForSpec("value", FormWrapper_Helpers)
      },
      {
        path: "form2.isSubmitting",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false,
        refName: "form2",
        onMutate: generateOnMutateForSpec("isSubmitting", FormWrapper_Helpers)
      },
      {
        path: "textInput5.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "textInput6.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: $queries,
    $refs
  });
  const dataSourcesCtx = usePlasmicDataSourceContext();
  const plasmicInvalidate = usePlasmicInvalidate();
  const new$Queries = {
    query: usePlasmicDataOp(() => {
      return {
        sourceId: "tSBhJfs4LDomzTKjiMETbM",
        opId: "ef274ced-89d9-437a-9e1c-2ac6fc176cc5",
        userArgs: {},
        cacheKey: `plasmic.$.ef274ced-89d9-437a-9e1c-2ac6fc176cc5.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    })
  };
  if (Object.keys(new$Queries).some(k => new$Queries[k] !== $queries[k])) {
    setDollarQueries(new$Queries);
    $queries = new$Queries;
  }
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsnnPusS1DHa()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            <Navbar
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames("__wab_instance", sty.navbar)}
            />

            <div className={classNames(projectcss.all, sty.freeBox__vzRp)}>
              <div className={classNames(projectcss.all, sty.freeBox__lovR)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___8Mn3D)}
                  displayHeight={"100px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "348px"
                      : "500px"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"900px"}
                  loading={"lazy"}
                  src={{
                    src: logo2SvgVCBiJbBayQXz,
                    fullWidth: 297,
                    fullHeight: 210,
                    aspectRatio: undefined
                  }}
                />

                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__yBon
                  )}
                >
                  {"Invest in companies and make high profits"}
                </h1>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ebd8L
                  )}
                >
                  {
                    "Turn the game around with Ez marketing space, now your agency calls the shots and you will have freedom"
                  }
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__znvKm)}
                >
                  <LoginButton
                    className={classNames(
                      "__wab_instance",
                      sty.loginButton___1Mps
                    )}
                    endIcon={
                      <ChevronRightIcon
                        className={classNames(projectcss.all, sty.svg__xl8RK)}
                        role={"img"}
                      />
                    }
                    shape={"rounded"}
                    showEndIcon={true}
                    submitsForm={false}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kjZug
                      )}
                    >
                      {"Get in wait list"}
                    </div>
                  </LoginButton>
                  <LoginButton
                    className={classNames(
                      "__wab_instance",
                      sty.loginButton__bchN
                    )}
                    color={"clear"}
                    endIcon={
                      <ChevronRightIcon
                        className={classNames(projectcss.all, sty.svg___06V6T)}
                        role={"img"}
                      />
                    }
                    shape={"rounded"}
                    showEndIcon={true}
                    submitsForm={false}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gsRyq
                      )}
                    >
                      {"Learn More"}
                    </div>
                  </LoginButton>
                </Stack__>
              </div>
            </div>
          </Stack__>
          <Section
            data-plasmic-name={"empresasENumeros"}
            data-plasmic-override={overrides.empresasENumeros}
            className={classNames("__wab_instance", sty.empresasENumeros)}
            size={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "fullContentWidth"
                : "fullContentWidth"
            }
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___1Nvjp)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"1140px"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: asPngC09ZOpjpcUvx,
                fullWidth: 1913,
                fullHeight: 980,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.freeBox__gouJu)}>
              <div className={classNames(projectcss.all, sty.freeBox__i3ThH)}>
                <div className={classNames(projectcss.all, sty.columns__sbZxh)}>
                  <div
                    className={classNames(projectcss.all, sty.column__hrMhG)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__fuOkd
                      )}
                    >
                      {"99%"}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kFGtr
                      )}
                    >
                      {"Open Rates"}
                    </div>
                  </div>
                  <div className={classNames(projectcss.all, sty.column__cpsF)}>
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__vVccf
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "5,2X"
                        : "5,2X"}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hBvA0
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Average traffic increase"
                        : "Average TRAFFIC INCREASE"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__utq6G)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__bXMc
                      )}
                    >
                      {"6000+"}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vHsYc
                      )}
                    >
                      {"Trusted Client "}
                    </div>
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox___7VlY)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gq8S
                  )}
                >
                  {"Companies that have shown interest"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___4Na9K)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__wd2Ny)}
                    displayHeight={"50px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"233px"}
                    loading={"lazy"}
                    src={{
                      src: companies1PngQIPsVzcdYve,
                      fullWidth: 466,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />

                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__jnuxL)}
                    displayHeight={"50px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"189px"}
                    loading={"lazy"}
                    src={{
                      src: companies2PngLfLt9U1AenDb,
                      fullWidth: 378,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />

                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__to6S)}
                    displayHeight={"50px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"194px"}
                    loading={"lazy"}
                    src={{
                      src: companies3Png142OBoV8Ju6,
                      fullWidth: 388,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />

                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__sQnyp)}
                    displayHeight={"50px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"189px"}
                    loading={"lazy"}
                    src={{
                      src: companies4PngIiuxq17S4VwE,
                      fullWidth: 378,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />
                </Stack__>
              </div>
            </div>
          </Section>
          <Section
            data-plasmic-name={"solucao"}
            data-plasmic-override={overrides.solucao}
            className={classNames("__wab_instance", sty.solucao)}
            size={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "fullContentWidth"
                : "fullContentWidth"
            }
          >
            <div className={classNames(projectcss.all, sty.freeBox__qf0Ux)}>
              <div className={classNames(projectcss.all, sty.freeBox__dQuIo)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__w147O
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Lorem Ipsum"
                    : "Turn Your Knowledge into Scalable Revenue"}
                </h2>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sGuQd
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                    "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex."
                  ) : (
                    <React.Fragment>
                      <React.Fragment>
                        {"EZ Marketing allows agencies to "}
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {
                          "invest in campaigns for companies and get paid for performance."
                        }
                      </span>
                      <React.Fragment>
                        {
                          " You decide where to apply your resources and track each result."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  )}
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__ncwAn)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__yHbiD)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__sMk4)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "24px"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: tickCircleSvgYCzvUenmsqZf,
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__l66Vm)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__g2D9Y
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"Choose where to invest \u2013"}
                        </span>
                        <React.Fragment> </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 400 }}
                        >
                          {
                            "Select promising companies and invest in campaigns."
                          }
                        </span>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__yfBxv)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__qVXjp)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__xPkih)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "24px"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: tickCircleSvgYCzvUenmsqZf,
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___0G8Wn)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kfRIm
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"Monitor everything \u2013"}
                        </span>
                        <React.Fragment> </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 400 }}
                        >
                          {
                            "From the click to the final conversion, with total transparency."
                          }
                        </span>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___3FyjP)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ooTu8)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__yl5MK)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "24px"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: tickCircleSvgYCzvUenmsqZf,
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__l9K8H)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uRrdd
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"Scalable earnings \u2013"}
                        </span>
                        <React.Fragment> </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 400 }}
                        >
                          {"Earn continuous profits for confirmed services."}
                        </span>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__uqQxf)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___8JgYx)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__hc8WK)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "24px"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: tickCircleSvgYCzvUenmsqZf,
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__md0Ki)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pBhS
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"Hub for marketing professionals \u2013"}
                        </span>
                        <React.Fragment> </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 400 }}
                        >
                          {
                            "Showcase your talents in a space exclusively for professionals."
                          }
                        </span>
                        <React.Fragment>{"\r"}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__j1Yy)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__e4W30)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__l5C3U)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "24px"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: tickCircleSvgYCzvUenmsqZf,
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tz5Se)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gDz0L
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"Gain recognition with high elo \u2013"}
                        </span>
                        <React.Fragment> </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 400 }}
                        >
                          {
                            "By proving yourself to be an excellent marketing professional, you can offer consultancy services to low elo agencies."
                          }
                        </span>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___6PlDt)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gQyu)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__c5Sfq)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "24px"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: tickCircleSvgYCzvUenmsqZf,
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mgb7U)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mPror
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"Simplified contracts \u2013"}
                        </span>
                        <React.Fragment> </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 400 }}
                        >
                          {
                            "Choose between being a venture or traditional agency."
                          }
                        </span>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__aNfXy)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__nv2HA)}
                  displayHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "100%"
                      : "700px"
                  }
                  displayMaxHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "174px"
                      : "none"
                  }
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "284px"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "100%"
                      : "1440px"
                  }
                  loading={"lazy"}
                  src={{
                    src: gggPng6FemiXdVg8R5,
                    fullWidth: 930,
                    fullHeight: 980,
                    aspectRatio: undefined
                  }}
                />

                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__eyNfv)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: asPngC09ZOpjpcUvx,
                    fullWidth: 1913,
                    fullHeight: 980,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
          </Section>
          <Section
            data-plasmic-name={"beneficiosEFuncionalidades"}
            data-plasmic-override={overrides.beneficiosEFuncionalidades}
            className={classNames(
              "__wab_instance",
              sty.beneficiosEFuncionalidades
            )}
            size={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "fullContentWidth"
                : undefined
            }
          >
            <div className={classNames(projectcss.all, sty.freeBox__aceeo)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__g7DrC
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Lorem Ipsum"
                  : "Our features"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__k3Fm
                )}
              >
                {
                  "With our features, you can achieve true freedom for personal and financial growth."
                }
              </div>
              <div className={classNames(projectcss.all, sty.freeBox___5JMbs)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__byEr0)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__xoSlg)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___7OJzp)}
                      displayHeight={"24px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"24px"}
                      loading={"lazy"}
                      src={{
                        src: newslettersSvgS9RrePcTwPgw,
                        fullWidth: 144,
                        fullHeight: 150,
                        aspectRatio: 0.96
                      }}
                    />

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__wytYr
                      )}
                    >
                      {"Newsletters"}
                    </h5>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sK8Q)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__hq7Eu)}
                      displayHeight={"24px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"24px"}
                      loading={"lazy"}
                      src={{
                        src: icons8EmojiDeNotaDeDolar48PngCHo38HCozWWq,
                        fullWidth: 48,
                        fullHeight: 48,
                        aspectRatio: undefined
                      }}
                    />

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__q2Sf1
                      )}
                    >
                      {"Price dynimcs"}
                    </h5>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__iZezM)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__qKx8)}
                      displayHeight={"24px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"24px"}
                      loading={"lazy"}
                      src={{
                        src: dashboardSvgVfkdzVvVlm7,
                        fullWidth: 144,
                        fullHeight: 150,
                        aspectRatio: 0.96
                      }}
                    />

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__tnd2A
                      )}
                    >
                      {"Dashboard"}
                    </h5>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bJaW)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___8Jh5)}
                      displayHeight={"24px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"24px"}
                      loading={"lazy"}
                      src={{
                        src: icons8GraduationCap48PngIt0C8EN7ToSx,
                        fullWidth: 48,
                        fullHeight: 48,
                        aspectRatio: undefined
                      }}
                    />

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__bvheX
                      )}
                    >
                      {"Manage especialities"}
                    </h5>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ty0W)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__cMYj3)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__f48TC)}
                      displayHeight={"24px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"24px"}
                      loading={"lazy"}
                      src={{
                        src: icons8EmojiDeAlfineteRedondo48Png2AjOuzpKtrg,
                        fullWidth: 48,
                        fullHeight: 48,
                        aspectRatio: undefined
                      }}
                    />

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__t5Ato
                      )}
                    >
                      {"Local control"}
                    </h5>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mhvnd)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__goGo)}
                      displayHeight={"24px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"24px"}
                      loading={"lazy"}
                      src={{
                        src: userflowSvgLkv1JX2YgDxW,
                        fullWidth: 144,
                        fullHeight: 150,
                        aspectRatio: 0.96
                      }}
                    />

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__wE36B
                      )}
                    >
                      {"User Flow"}
                    </h5>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___6HwAy)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___7M2Sj)}
                      displayHeight={"24px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"24px"}
                      loading={"lazy"}
                      src={{
                        src: securitySvgB41Vdaj06Oa,
                        fullWidth: 144,
                        fullHeight: 150,
                        aspectRatio: 0.96
                      }}
                    />

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__d5Zjz
                      )}
                    >
                      {"Security"}
                    </h5>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__bLx9)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gJucj)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__swpoz)}
                      displayHeight={"24px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"24px"}
                      loading={"lazy"}
                      src={{
                        src: icons8AntenaDeSatelite48PngDqZ4Hom3CP2,
                        fullWidth: 48,
                        fullHeight: 48,
                        aspectRatio: undefined
                      }}
                    />

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__pgT2F
                      )}
                    >
                      {"Track services"}
                    </h5>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__yZByz)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__qVt0T)}
                      displayHeight={"24px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"24px"}
                      loading={"lazy"}
                      src={{
                        src: analyticsSvgXI1JY0MmLpXg,
                        fullWidth: 144,
                        fullHeight: 150,
                        aspectRatio: 0.96
                      }}
                    />

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__gaAmJ
                      )}
                    >
                      {"Analytics"}
                    </h5>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__cc5Pe)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__lwkwY)}
                      displayHeight={"24px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"24px"}
                      loading={"lazy"}
                      src={{
                        src: searchSvg26Pf8ZmjP5HkS,
                        fullWidth: 144,
                        fullHeight: 150,
                        aspectRatio: 0.96
                      }}
                    />

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__jUxCd
                      )}
                    >
                      {"Search"}
                    </h5>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__w3D5Y)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___1OvBo)}
                      displayHeight={"24px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"24px"}
                      loading={"lazy"}
                      src={{
                        src: protectionSvg2L6TLq83JrNu,
                        fullWidth: 144,
                        fullHeight: 150,
                        aspectRatio: 0.96
                      }}
                    />

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__wNgej
                      )}
                    >
                      {"Protection"}
                    </h5>
                  </div>
                </Stack__>
              </div>
            </div>
          </Section>
          <Section
            data-plasmic-name={"talvezSejaUtil"}
            data-plasmic-override={overrides.talvezSejaUtil}
            className={classNames("__wab_instance", sty.talvezSejaUtil)}
            size={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "fullContentWidth"
                : "fullContentWidth"
            }
          >
            <div className={classNames(projectcss.all, sty.freeBox__uZoge)}>
              <div className={classNames(projectcss.all, sty.columns__pTFca)}>
                <div className={classNames(projectcss.all, sty.column__qRhfz)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__y5U19)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"500px"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "284px"
                        : "auto"
                    }
                    loading={"lazy"}
                    src={{
                      src: image2PngCkN42US8FcZf,
                      fullWidth: 1040,
                      fullHeight: 1040,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__awvIg)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___48NvC
                      )}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__stGMv)}
                        displayHeight={"30px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"30px"}
                        loading={"lazy"}
                        src={{
                          src: happyManSvgrepoComSvgIhPdq5Dd3DUv,
                          fullWidth: 800,
                          fullHeight: 800,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__id2Zv
                        )}
                      >
                        {"The platform proposes freedom for marketing"}
                      </div>
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__nCn0W)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__eejdi)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__oWei5)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__hJh47)}
                        displayHeight={"2px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"26px"}
                        loading={"lazy"}
                        src={{
                          src: lineBlueSvgQq2IoZ1Se0XL,
                          fullWidth: 300,
                          fullHeight: 23,
                          aspectRatio: 13
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__x6Sjb
                        )}
                      >
                        {"Storytelling"}
                      </div>
                    </div>
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__zllHw
                      )}
                    >
                      {"Why Ez marketing?"}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6VbZk
                      )}
                    >
                      {
                        "EZ Marketing was born out of a pain that, if you have or have had a real agency, you know well.\r\nIt's not just about expensive traffic or clients who charge too much \u2014 it's about investing hours creating funnels, ads, campaigns, reports... and in the end discovering that the client didn't respond to the leads. And of course, the blame falls on marketing.\r\n\r\nWe've been through this. At our agency, we got tired of seeing hot leads die in the inbox, while on the other side the company complained about \u201clow performance\u201d. When we did a conversion test, it was clear: the funnel worked, the problem was in the follow-up.\r\n\r\nBut the pain didn't stop there. In addition to dealing with this wear and tear, there's the pressure: \u201cwhere are the results?\u201d\r\nAnd the other side of the coin \u2014 the constant, tiring and expensive effort of seeking new contracts.\r\nNo agency can handle living off of endless prospecting. Meetings, proposals, negotiations... all to, sometimes, get a small contract, with tight margins and high charges."
                      }
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__pxY9F)}>
              <div className={classNames(projectcss.all, sty.columns__csut4)}>
                <div className={classNames(projectcss.all, sty.column__pnb18)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bgTuw)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__z21C)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__rxW4T)}
                        displayHeight={"2px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"26px"}
                        loading={"lazy"}
                        src={{
                          src: lineBlueSvgQq2IoZ1Se0XL,
                          fullWidth: 300,
                          fullHeight: 23,
                          aspectRatio: 13
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__l0Xtf
                        )}
                      >
                        {"Options"}
                      </div>
                    </div>
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3___12HMc
                      )}
                    >
                      {"Being an affiliate? No way."}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pHwHx
                      )}
                    >
                      {
                        "Most of these platforms limit your performance, deliver ready-made material and kill your agency's strategy. You lose the autonomy to create, position and optimize the message that your client needs."
                      }
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__ccI7H)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__r8WmN)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "284px"
                        : "500px"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "284px"
                        : "auto"
                    }
                    loading={"lazy"}
                    src={{
                      src: image3PngAOrfhZgDAh7M,
                      fullWidth: 1040,
                      fullHeight: 1040,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__jnbTw)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__cZmr)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__qFczn)}
                        displayHeight={"24px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"24px"}
                        loading={"lazy"}
                        src={{
                          src: noSvgrepoComSvgHMkFRqFDbAvC,
                          fullWidth: 800,
                          fullHeight: 800,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___62Bbd
                        )}
                      >
                        {"It is not an affiliate platform"}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__r276W)}>
              <div className={classNames(projectcss.all, sty.columns__wFvSg)}>
                <div className={classNames(projectcss.all, sty.column__a92E8)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__qvR)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "284px"
                        : "500px"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: image4PngALSh3S1SO4L,
                      fullWidth: 1040,
                      fullHeight: 1040,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__lsTTq)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___8ZrY1
                      )}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__ijfP)}
                        displayHeight={"30px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"30px"}
                        loading={"lazy"}
                        src={{
                          src: businessPersonMaleWithACaneSvgrepoComSvgUhOusNTzdWdV,
                          fullWidth: 800,
                          fullHeight: 800,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mXfn
                        )}
                      >
                        {"An exclusive space for marketing professionals"}
                      </div>
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column___8Mf21)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__yv3NN)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__cYdHn)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__g1HGh)}
                        displayHeight={"2px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"26px"}
                        loading={"lazy"}
                        src={{
                          src: lineBlueSvgQq2IoZ1Se0XL,
                          fullWidth: 300,
                          fullHeight: 23,
                          aspectRatio: 13
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dsW4H
                        )}
                      >
                        {"Solution"}
                      </div>
                    </div>
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__kClKx
                      )}
                    >
                      {"That's when we decided to do something different."}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__l2Hub
                      )}
                    >
                      {
                        "To create a platform where agencies invest directly in campaigns, control the lead's journey to conversion and build a reputation based on measurable results \u2014 not on promises or likes.\r\n\r\nNo ready-made content, no pasteurized script, no room for \u201conline course gurus\u201d.\r\n\r\nEZ Marketing is that space.\r\n\r\nA global hub where companies and agencies meet, where those who deliver results move up and those who don't move down.\r\n\r\nWhere merit comes from real conversion and reputation is public, fair and transparent.\r\n\r\nIf you're tired of hearing \u201cwhere are the results?\u201d, of exhausting contracts and ready-made materials that hamper your strategy, EZ Marketing was made for you."
                      }
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </Section>
          <Section
            data-plasmic-name={"callToAction"}
            data-plasmic-override={overrides.callToAction}
            background={"gray"}
            className={classNames("__wab_instance", sty.callToAction)}
            size={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "fullContentWidth"
                : "fullContentWidth"
            }
          >
            <div className={classNames(projectcss.all, sty.freeBox__m9Lbi)}>
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__hDsY5
                )}
              >
                {"Sign up for the waiting list now!"}
              </h1>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__lnX4
                )}
              >
                {
                  "No sales fees for 2 years for the first 70 users, leave your best email and your LinkedIn profile link for review. Terms and conditions apply"
                }
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___7JlH0)}
              >
                {(() => {
                  const child$Props = {
                    className: classNames("__wab_instance", sty.form2),
                    extendedOnValuesChange: async (...eventArgs) => {
                      generateStateOnChangePropForCodeComponents(
                        $state,
                        "value",
                        ["form2", "value"],
                        FormWrapper_Helpers
                      ).apply(null, eventArgs);
                    },
                    formItems: [
                      { label: "Name", name: "name", inputType: "Text" },
                      {
                        label: "Message",
                        name: "message",
                        inputType: "Text Area"
                      }
                    ],

                    labelCol: (() => {
                      const __composite = { span: null, horizontalOnly: true };
                      __composite["span"] = 0;
                      return __composite;
                    })(),
                    layout: "horizontal",
                    mode: "advanced",
                    onFinish: async values => {
                      const $steps = {};
                      $steps["defaultSubmit"] = true
                        ? (() => {
                            const actionArgs = {
                              dataOp: {
                                sourceId: "tSBhJfs4LDomzTKjiMETbM",
                                opId: "72f7ce11-95db-4da9-b914-de5a61eb67b5",
                                userArgs: {
                                  variables: [$state.form2.value]
                                },
                                cacheKey: null,
                                invalidatedKeys: ["plasmic_refresh_all"],
                                roleId: null
                              }
                            };
                            return (async ({ dataOp, continueOnError }) => {
                              try {
                                const response = await executePlasmicDataOp(
                                  dataOp,
                                  {
                                    userAuthToken:
                                      dataSourcesCtx?.userAuthToken,
                                    user: dataSourcesCtx?.user
                                  }
                                );
                                await plasmicInvalidate(dataOp.invalidatedKeys);
                                return response;
                              } catch (e) {
                                if (!continueOnError) {
                                  throw e;
                                }
                                return e;
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["defaultSubmit"] != null &&
                        typeof $steps["defaultSubmit"] === "object" &&
                        typeof $steps["defaultSubmit"].then === "function"
                      ) {
                        $steps["defaultSubmit"] = await $steps["defaultSubmit"];
                      }
                    },
                    onIsSubmittingChange: async (...eventArgs) => {
                      generateStateOnChangePropForCodeComponents(
                        $state,
                        "isSubmitting",
                        ["form2", "isSubmitting"],
                        FormWrapper_Helpers
                      ).apply(null, eventArgs);
                    },
                    ref: ref => {
                      $refs["form2"] = ref;
                    },
                    submitSlot: null,
                    wrapperCol: (() => {
                      const __composite = { span: null, horizontalOnly: true };
                      __composite["span"] = 24;
                      return __composite;
                    })()
                  };
                  initializeCodeComponentStates(
                    $state,
                    [
                      {
                        name: "value",
                        plasmicStateName: "form2.value"
                      },
                      {
                        name: "isSubmitting",
                        plasmicStateName: "form2.isSubmitting"
                      }
                    ],

                    [],
                    FormWrapper_Helpers ?? {},
                    child$Props
                  );
                  return (
                    <FormWrapper
                      data-plasmic-name={"form2"}
                      data-plasmic-override={overrides.form2}
                      {...child$Props}
                    >
                      <FormItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.formField__wWuaa
                        )}
                        initialValue={undefined}
                        label={
                          <_4654364831553230929SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__gkbDv
                            )}
                            role={"img"}
                          />
                        }
                        name={"email"}
                      >
                        <EmailInput
                          data-plasmic-name={"textInput5"}
                          data-plasmic-override={overrides.textInput5}
                          className={classNames(
                            "__wab_instance",
                            sty.textInput5
                          )}
                          onChange={async (...eventArgs) => {
                            ((...eventArgs) => {
                              generateStateOnChangeProp($state, [
                                "textInput5",
                                "value"
                              ])((e => e.target?.value).apply(null, eventArgs));
                            }).apply(null, eventArgs);
                            if (
                              eventArgs.length > 1 &&
                              eventArgs[1] &&
                              eventArgs[1]._plasmic_state_init_
                            ) {
                              return;
                            }
                          }}
                          string={"Fill your email address"}
                          value={
                            generateStateValueProp($state, [
                              "textInput5",
                              "value"
                            ]) ?? ""
                          }
                        />
                      </FormItemWrapper>
                      <FormItemWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.formField___7PsFc
                        )}
                        initialValue={undefined}
                        label={
                          <LinkedinSvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__vXvg6
                            )}
                            role={"img"}
                          />
                        }
                        name={"LinkedIn"}
                      >
                        <EmailInput
                          data-plasmic-name={"textInput6"}
                          data-plasmic-override={overrides.textInput6}
                          className={classNames(
                            "__wab_instance",
                            sty.textInput6
                          )}
                          onChange={async (...eventArgs) => {
                            ((...eventArgs) => {
                              generateStateOnChangeProp($state, [
                                "textInput6",
                                "value"
                              ])((e => e.target?.value).apply(null, eventArgs));
                            }).apply(null, eventArgs);
                            if (
                              eventArgs.length > 1 &&
                              eventArgs[1] &&
                              eventArgs[1]._plasmic_state_init_
                            ) {
                              return;
                            }
                          }}
                          string={"Fill your LinkedIn profile"}
                          value={
                            generateStateValueProp($state, [
                              "textInput6",
                              "value"
                            ]) ?? ""
                          }
                        />
                      </FormItemWrapper>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__yQhzL
                        )}
                      >
                        <LoginButton
                          className={classNames(
                            "__wab_instance",
                            sty.loginButton__tmHlF
                          )}
                          endIcon={
                            <ChevronRightIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__jvb0D
                              )}
                              role={"img"}
                            />
                          }
                          shape={"rounded"}
                          submitsForm={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ylqI
                            )}
                          >
                            {"Get in wait list"}
                          </div>
                        </LoginButton>
                        <Embed
                          data-plasmic-name={"embedHtml"}
                          data-plasmic-override={overrides.embedHtml}
                          className={classNames(
                            "__wab_instance",
                            sty.embedHtml
                          )}
                          code={
                            '<div class="g-recaptcha" data-sitekey="6Le92EErAAAAAEdf26p5vxbul9TZ_xocV5iGsvVR"></div>\r\n<script src="https://www.google.com/recaptcha/api.js" async defer></script>\r\n'
                          }
                        />
                      </div>
                    </FormWrapper>
                  );
                })()}
              </Stack__>
            </div>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__tb2Zk)}
              displayHeight={"auto"}
              displayMaxHeight={"700px"}
              displayMaxWidth={"1140px"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: asasPng5P7O9FXqAkU,
                fullWidth: 1913,
                fullHeight: 707,
                aspectRatio: undefined
              }}
            />
          </Section>
          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerHeroSection",
    "navbar",
    "empresasENumeros",
    "solucao",
    "beneficiosEFuncionalidades",
    "talvezSejaUtil",
    "callToAction",
    "form2",
    "textInput5",
    "textInput6",
    "embedHtml",
    "footerSection"
  ],

  headerHeroSection: ["headerHeroSection", "navbar"],
  navbar: ["navbar"],
  empresasENumeros: ["empresasENumeros"],
  solucao: ["solucao"],
  beneficiosEFuncionalidades: ["beneficiosEFuncionalidades"],
  talvezSejaUtil: ["talvezSejaUtil"],
  callToAction: [
    "callToAction",
    "form2",
    "textInput5",
    "textInput6",
    "embedHtml"
  ],

  form2: ["form2", "textInput5", "textInput6", "embedHtml"],
  textInput5: ["textInput5"],
  textInput6: ["textInput6"],
  embedHtml: ["embedHtml"],
  footerSection: ["footerSection"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicALandingPage__ArgProps,
          internalVariantPropNames: PlasmicALandingPage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicALandingPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicALandingPage";
  } else {
    func.displayName = `PlasmicALandingPage.${nodeName}`;
  }
  return func;
}

export const PlasmicALandingPage = Object.assign(
  // Top-level PlasmicALandingPage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    navbar: makeNodeComponent("navbar"),
    empresasENumeros: makeNodeComponent("empresasENumeros"),
    solucao: makeNodeComponent("solucao"),
    beneficiosEFuncionalidades: makeNodeComponent("beneficiosEFuncionalidades"),
    talvezSejaUtil: makeNodeComponent("talvezSejaUtil"),
    callToAction: makeNodeComponent("callToAction"),
    form2: makeNodeComponent("form2"),
    textInput5: makeNodeComponent("textInput5"),
    textInput6: makeNodeComponent("textInput6"),
    embedHtml: makeNodeComponent("embedHtml"),
    footerSection: makeNodeComponent("footerSection"),
    // Metadata about props expected for PlasmicALandingPage
    internalVariantProps: PlasmicALandingPage__VariantProps,
    internalArgProps: PlasmicALandingPage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Agency landingpage",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicALandingPage;
/* prettier-ignore-end */
