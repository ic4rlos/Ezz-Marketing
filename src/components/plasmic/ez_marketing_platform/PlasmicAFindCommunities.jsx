/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6Q26EfqfPNQuydumhAEs1S
// Component: CO8H-fhH75nS
import * as React from "react";
import {
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  initializeCodeComponentStates,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";
import { usePlasmicInvalidate } from "@plasmicapp/react-web/lib/data-sources";
import { NavigationBar } from "@plasmicpkgs/plasmic-nav";
import { AntdDropdown } from "@plasmicpkgs/antd5/skinny/registerDropdown";
import { AntdMenuItem } from "@plasmicpkgs/antd5/skinny/registerMenu";
import { AntdButton } from "@plasmicpkgs/antd5/skinny/registerButton";
import { SliderWrapper } from "@plasmicpkgs/react-slick";
import { sliderHelpers as SliderWrapper_Helpers } from "@plasmicpkgs/react-slick";
import LoginButton from "../../LoginButton"; // plasmic-import: sda60oPQ2thQ/component
import { AntdPopover } from "@plasmicpkgs/antd5/skinny/registerPopover";
import YouTube from "@plasmicpkgs/react-youtube";
import { AntdRate } from "@plasmicpkgs/antd5/skinny/registerRate";
import { useScreenVariants as useScreenVariantsnnPusS1DHa } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: nnPus_s1dHa_/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 6Q26EfqfPNQuydumhAEs1S/projectcss
import sty from "./PlasmicAFindCommunities.module.css"; // plasmic-import: CO8H-fhH75nS/css
import SemTitulo1SvgIcon from "./icons/PlasmicIcon__SemTitulo1Svg"; // plasmic-import: r8NAz6flIS-M/icon
import logoPng2S9Gcm9LGTbT6 from "./images/logoPng2.png"; // plasmic-import: s9GCM9lGTbT6/picture
import semTitulo2Jpg31LNEr9NkcLru from "./images/semTitulo2Jpg3.jpg"; // plasmic-import: 1lNEr9NkcLRU/picture
import vecteezyUserAccountIconForYourDesignOnly21079672PngBO6VkmKkINB from "./images/vecteezyUserAccountIconForYourDesignOnly21079672Png.png"; // plasmic-import: bO6vkmKkI-nB/picture

createPlasmicElementProxy;

export const PlasmicAFindCommunities__VariantProps = new Array();

export const PlasmicAFindCommunities__ArgProps = new Array();

const $$ = {};

function PlasmicAFindCommunities__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "sliderCarousel.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,
        refName: "sliderCarousel",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      },
      {
        path: "sliderCarousel2.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,
        refName: "sliderCarousel2",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      },
      {
        path: "popover.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "popover2.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "popover3.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "popover4.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "popover5.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "popover6.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "textarea.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "rate.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 5
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const dataSourcesCtx = usePlasmicDataSourceContext();
  const plasmicInvalidate = usePlasmicInvalidate();
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsnnPusS1DHa()
  });
  return (
    <React.Fragment>
      <div
        data-plasmic-name={"root"}
        data-plasmic-override={overrides.root}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          projectcss.plasmic_tokens,
          plasmic_antd_5_hostless_css.plasmic_tokens,
          plasmic_plasmic_rich_components_css.plasmic_tokens,
          sty.root
        )}
      >
        <Stack__
          as={"div"}
          data-plasmic-name={"topBar"}
          data-plasmic-override={overrides.topBar}
          hasGap={true}
          className={classNames(projectcss.all, sty.topBar)}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__jE0H0)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__biOn1)}
            >
              <NavigationBar
                data-plasmic-name={"navigationBar"}
                data-plasmic-override={overrides.navigationBar}
                brand={
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___2E2Z
                    )}
                    href={`/affiliate-homepage`}
                    onClick={async event => {
                      const $steps = {};
                      $steps["refreshData"] = true
                        ? (() => {
                            const actionArgs = {
                              queryInvalidation: ["plasmic_refresh_all"]
                            };
                            return (async ({ queryInvalidation }) => {
                              if (!queryInvalidation) {
                                return;
                              }
                              await plasmicInvalidate(queryInvalidation);
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["refreshData"] != null &&
                        typeof $steps["refreshData"] === "object" &&
                        typeof $steps["refreshData"].then === "function"
                      ) {
                        $steps["refreshData"] = await $steps["refreshData"];
                      }
                    }}
                    platform={"react"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__sc2Dm)}
                      displayHeight={"30px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      src={{
                        src: logoPng2S9Gcm9LGTbT6,
                        fullWidth: 190,
                        fullHeight: 100,
                        aspectRatio: undefined
                      }}
                    />
                  </PlasmicLink__>
                }
                className={classNames("__wab_instance", sty.navigationBar)}
                closeButton={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__sTkt)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={"https://static1.plasmic.app/close.svg"}
                  />
                }
                itemsGap={8}
                menuItems={
                  <React.Fragment>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__gjLsV
                      )}
                      href={`/community-dashboard`}
                      platform={"react"}
                    >
                      {"Community Dashboard"}
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__iQcCi
                      )}
                      href={`/service-dashboard`}
                      platform={"react"}
                    >
                      {"Service\nDashboard"}
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__zY8Ds
                      )}
                      platform={"react"}
                    >
                      {"Market\nTrends"}
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__yCo4I
                      )}
                      href={`/find-a-business`}
                      platform={"react"}
                    >
                      {"Find a \nbusiness"}
                    </PlasmicLink__>
                  </React.Fragment>
                }
                openButton={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__lYaCi)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    height={``}
                    src={"https://static1.plasmic.app/menu.svg"}
                    width={``}
                  />
                }
                responsiveBreakpoint={768}
              />

              <AntdDropdown
                data-plasmic-name={"account"}
                data-plasmic-override={overrides.account}
                className={classNames("__wab_instance", sty.account)}
                dropdownMenuScopeClassName={sty["account__dropdownMenu"]}
                menuClassName={classNames({ [sty["pcls_K0f-uyy7zY2j"]]: true })}
                menuItemClassName={classNames({
                  [sty["pcls_-3lNd4xkkIzK"]]: true
                })}
                menuItems={() => (
                  <React.Fragment>
                    <AntdMenuItem
                      className={classNames(
                        "__wab_instance",
                        sty.menuItem__maGhr
                      )}
                      key={"menu-item-1"}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__idPCc
                        )}
                      >
                        {"Menu item"}
                      </div>
                    </AntdMenuItem>
                    <AntdMenuItem
                      className={classNames(
                        "__wab_instance",
                        sty.menuItem___5FlW
                      )}
                      key={"menu-item-2"}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mwa3S
                        )}
                      >
                        {"Menu item"}
                      </div>
                    </AntdMenuItem>
                  </React.Fragment>
                )}
                menuItemsJson={(() => {
                  const __composite = [
                    { type: null, label: null, children: null },
                    {
                      type: null,
                      value: "action1",
                      label: null,
                      children: null
                    },
                    {
                      type: null,
                      value: "action2",
                      label: null,
                      onClick: null
                    }
                  ];

                  __composite["0"]["type"] = "group";
                  __composite["0"]["label"] = "User";
                  __composite["0"]["children"] = (() => {
                    const __composite = [
                      { type: "item", label: null, onClick: null },
                      { type: "item", label: null, onClick: null },
                      { type: null }
                    ];

                    __composite["0"]["label"] = "Profile";
                    __composite["0"]["onClick"] = async info => {
                      const $steps = {};
                      $steps["goToAProfile"] = true
                        ? (() => {
                            const actionArgs = { destination: `/profile` };
                            return (({ destination }) => {
                              if (
                                typeof destination === "string" &&
                                destination.startsWith("#")
                              ) {
                                document
                                  .getElementById(destination.substr(1))
                                  .scrollIntoView({ behavior: "smooth" });
                              } else {
                                location.assign(destination);
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["goToAProfile"] != null &&
                        typeof $steps["goToAProfile"] === "object" &&
                        typeof $steps["goToAProfile"].then === "function"
                      ) {
                        $steps["goToAProfile"] = await $steps["goToAProfile"];
                      }
                    };
                    __composite["1"]["label"] = "Edit profile";
                    __composite["1"]["onClick"] = async info => {
                      const $steps = {};
                      $steps["goToACreateAccount"] = true
                        ? (() => {
                            const actionArgs = {
                              destination: `/a-create account`
                            };
                            return (({ destination }) => {
                              if (
                                typeof destination === "string" &&
                                destination.startsWith("#")
                              ) {
                                document
                                  .getElementById(destination.substr(1))
                                  .scrollIntoView({ behavior: "smooth" });
                              } else {
                                location.assign(destination);
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["goToACreateAccount"] != null &&
                        typeof $steps["goToACreateAccount"] === "object" &&
                        typeof $steps["goToACreateAccount"].then === "function"
                      ) {
                        $steps["goToACreateAccount"] = await $steps[
                          "goToACreateAccount"
                        ];
                      }
                    };
                    __composite["2"]["type"] = "divider";
                    return __composite;
                  })();
                  __composite["1"]["type"] = "group";
                  __composite["1"]["label"] = "Account";
                  __composite["1"]["children"] = (() => {
                    const __composite = [
                      { type: "item", label: null, onClick: null },
                      { type: "item", label: null, onClick: null },
                      { type: null }
                    ];

                    __composite["0"]["label"] = "Settings & Privacy";
                    __composite["0"]["onClick"] = async info => {
                      const $steps = {};
                      $steps["goToALogin"] = true
                        ? (() => {
                            const actionArgs = { destination: `/a-login` };
                            return (({ destination }) => {
                              if (
                                typeof destination === "string" &&
                                destination.startsWith("#")
                              ) {
                                document
                                  .getElementById(destination.substr(1))
                                  .scrollIntoView({ behavior: "smooth" });
                              } else {
                                location.assign(destination);
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["goToALogin"] != null &&
                        typeof $steps["goToALogin"] === "object" &&
                        typeof $steps["goToALogin"].then === "function"
                      ) {
                        $steps["goToALogin"] = await $steps["goToALogin"];
                      }
                    };
                    __composite["1"]["label"] = "Help";
                    __composite["1"]["onClick"] = async info => {
                      const $steps = {};
                      $steps["goToALogin"] = true
                        ? (() => {
                            const actionArgs = { destination: `/a-login` };
                            return (({ destination }) => {
                              if (
                                typeof destination === "string" &&
                                destination.startsWith("#")
                              ) {
                                document
                                  .getElementById(destination.substr(1))
                                  .scrollIntoView({ behavior: "smooth" });
                              } else {
                                location.assign(destination);
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["goToALogin"] != null &&
                        typeof $steps["goToALogin"] === "object" &&
                        typeof $steps["goToALogin"].then === "function"
                      ) {
                        $steps["goToALogin"] = await $steps["goToALogin"];
                      }
                    };
                    __composite["2"]["type"] = "divider";
                    return __composite;
                  })();
                  __composite["2"]["type"] = "item";
                  __composite["2"]["label"] = "Sign out";
                  __composite["2"]["onClick"] = async info => {
                    const $steps = {};
                    $steps["goToALogin"] = true
                      ? (() => {
                          const actionArgs = { destination: `/a-login` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              location.assign(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToALogin"] != null &&
                      typeof $steps["goToALogin"] === "object" &&
                      typeof $steps["goToALogin"].then === "function"
                    ) {
                      $steps["goToALogin"] = await $steps["goToALogin"];
                    }
                  };
                  return __composite;
                })()}
                trigger={"hover"}
                useMenuItemsSlot={false}
              >
                <AntdButton
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  className={classNames("__wab_instance", sty.button)}
                  href={`/a-login`}
                  target={true}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__uHuh)}
                    displayHeight={"30px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"30px"}
                    loading={"lazy"}
                  />
                </AntdButton>
              </AntdDropdown>
            </Stack__>
          </Stack__>
        </Stack__>
        <div
          data-plasmic-name={"container3"}
          data-plasmic-override={overrides.container3}
          className={classNames(projectcss.all, sty.container3)}
        >
          <div className={classNames(projectcss.all, sty.freeBox___9HcEq)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__unQQh)}
              displayHeight={"100px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100px"}
              loading={"lazy"}
              src={{
                src: semTitulo2Jpg31LNEr9NkcLru,
                fullWidth: 1014,
                fullHeight: 1014,
                aspectRatio: undefined
              }}
            />

            <SemTitulo1SvgIcon
              data-plasmic-name={"svg"}
              data-plasmic-override={overrides.svg}
              className={classNames(projectcss.all, sty.svg)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__v0FhW
              )}
            >
              {"Community"}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__xogle)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__saYqe
              )}
            >
              {"Gold"}
            </div>
            {(() => {
              const child$Props = {
                adaptiveHeight: false,
                arrows: false,
                beforeChange: async (...eventArgs) => {
                  generateStateOnChangePropForCodeComponents(
                    $state,
                    "currentSlide",
                    ["sliderCarousel", "currentSlide"],
                    SliderWrapper_Helpers
                  ).apply(null, eventArgs);
                },
                centerMode: false,
                className: classNames("__wab_instance", sty.sliderCarousel),
                dots: true,
                fade: true,
                focusOnSelect: true,
                initialSlide: generateStateValueProp($state, [
                  "sliderCarousel",
                  "currentSlide"
                ]),
                ref: ref => {
                  $refs["sliderCarousel"] = ref;
                },
                sliderScopeClassName: sty["sliderCarousel__slider"],
                slidesPerRow: 4
              };
              initializeCodeComponentStates(
                $state,
                [
                  {
                    name: "currentSlide",
                    plasmicStateName: "sliderCarousel.currentSlide"
                  }
                ],

                [],
                SliderWrapper_Helpers ?? {},
                child$Props
              );
              return (
                <SliderWrapper
                  data-plasmic-name={"sliderCarousel"}
                  data-plasmic-override={overrides.sliderCarousel}
                  {...child$Props}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__aVtf3)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__uuRnb)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8Gogu
                        )}
                      >
                        {"Market Mananger"}
                      </div>
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__xsAmq)}
                        displayHeight={"150px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"120px"}
                        src={{
                          src: vecteezyUserAccountIconForYourDesignOnly21079672PngBO6VkmKkINB,
                          fullWidth: 2551,
                          fullHeight: 2551,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__aefrv
                        )}
                      >
                        {"Gold"}
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__giKi)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___0HRkK
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lYbCz
                        )}
                      >
                        {"Market Mananger"}
                      </div>
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__kvYp3)}
                        displayHeight={"150px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"120px"}
                        src={{
                          src: vecteezyUserAccountIconForYourDesignOnly21079672PngBO6VkmKkINB,
                          fullWidth: 2551,
                          fullHeight: 2551,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jpQR
                        )}
                      >
                        {"Gold"}
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__jkhZw)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___7MgnG
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wEwsl
                        )}
                      >
                        {"Market Mananger"}
                      </div>
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___65VJs)}
                        displayHeight={"150px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"120px"}
                        src={{
                          src: vecteezyUserAccountIconForYourDesignOnly21079672PngBO6VkmKkINB,
                          fullWidth: 2551,
                          fullHeight: 2551,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pvmvn
                        )}
                      >
                        {"Gold"}
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__fp2S5)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ynbUj)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__piVp7
                        )}
                      >
                        {"Market Mananger"}
                      </div>
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__eGa7F)}
                        displayHeight={"150px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"120px"}
                        src={{
                          src: vecteezyUserAccountIconForYourDesignOnly21079672PngBO6VkmKkINB,
                          fullWidth: 2551,
                          fullHeight: 2551,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cnAqd
                        )}
                      >
                        {"Gold"}
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___93LDe)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__aGAtJ)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__f4L2E
                        )}
                      >
                        {"Market Mananger"}
                      </div>
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__fhBdb)}
                        displayHeight={"150px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"120px"}
                        src={{
                          src: vecteezyUserAccountIconForYourDesignOnly21079672PngBO6VkmKkINB,
                          fullWidth: 2551,
                          fullHeight: 2551,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nzPoV
                        )}
                      >
                        {"Gold"}
                      </div>
                    </div>
                  </div>
                </SliderWrapper>
              );
            })()}
          </div>
        </div>
        <div
          data-plasmic-name={"container2"}
          data-plasmic-override={overrides.container2}
          className={classNames(projectcss.all, sty.container2)}
        >
          <textarea
            data-plasmic-name={"textarea"}
            data-plasmic-override={overrides.textarea}
            className={classNames(
              projectcss.all,
              projectcss.textarea,
              sty.textarea
            )}
            onChange={async (...eventArgs) => {
              (e => {
                generateStateOnChangeProp($state, ["textarea", "value"])(
                  e.target.value
                );
              }).apply(null, eventArgs);
            }}
            placeholder={
              'If you are excited about working with this community, please enter a short message here and click "Invite"'
            }
            ref={ref => {
              $refs["textarea"] = ref;
            }}
            value={generateStateValueProp($state, ["textarea", "value"]) ?? ""}
          />

          <LoginButton
            data-plasmic-name={"inviteButon"}
            data-plasmic-override={overrides.inviteButon}
            className={classNames("__wab_instance", sty.inviteButon)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fu7T
              )}
            >
              {"Invite"}
            </div>
          </LoginButton>
          <PlasmicLink__
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__cd687
            )}
            href={`/create-community`}
            platform={"react"}
          >
            {"Create a Community"}
          </PlasmicLink__>
        </div>
        <div
          data-plasmic-name={"container10"}
          data-plasmic-override={overrides.container10}
          className={classNames(projectcss.all, sty.container10)}
        >
          {(() => {
            const child$Props = {
              arrows: false,
              autoplay: true,
              autoplaySpeed: 0,
              beforeChange: async (...eventArgs) => {
                generateStateOnChangePropForCodeComponents(
                  $state,
                  "currentSlide",
                  ["sliderCarousel2", "currentSlide"],
                  SliderWrapper_Helpers
                ).apply(null, eventArgs);
              },
              centerMode: true,
              className: classNames("__wab_instance", sty.sliderCarousel2),
              cssEase: "linear",
              initialSlide: generateStateValueProp($state, [
                "sliderCarousel2",
                "currentSlide"
              ]),
              ref: ref => {
                $refs["sliderCarousel2"] = ref;
              },
              sliderScopeClassName: sty["sliderCarousel2__slider"],
              slidesPerRow: 5,
              speed: 12000
            };
            initializeCodeComponentStates(
              $state,
              [
                {
                  name: "currentSlide",
                  plasmicStateName: "sliderCarousel2.currentSlide"
                }
              ],

              [],
              SliderWrapper_Helpers ?? {},
              child$Props
            );
            return (
              <SliderWrapper
                data-plasmic-name={"sliderCarousel2"}
                data-plasmic-override={overrides.sliderCarousel2}
                {...child$Props}
              >
                <div className={classNames(projectcss.all, sty.freeBox__sy5Bo)}>
                  <LoginButton
                    className={classNames(
                      "__wab_instance",
                      sty.loginButton__n1GYu
                    )}
                    color={"softSand"}
                    shape={"sharp"}
                    showStartIcon={true}
                    startIcon={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___9BshW)}
                        displayHeight={"30px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"30px"}
                        loading={"lazy"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cTcs0
                      )}
                    >
                      {"Company"}
                    </div>
                  </LoginButton>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__jmrqj)}>
                  <LoginButton
                    className={classNames(
                      "__wab_instance",
                      sty.loginButton__vNXq8
                    )}
                    color={"softSand"}
                    shape={"sharp"}
                    showStartIcon={true}
                    startIcon={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__vskQc)}
                        displayHeight={"30px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"30px"}
                        loading={"lazy"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qxN7M
                      )}
                    >
                      {"Company"}
                    </div>
                  </LoginButton>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___5Hqb8)}
                >
                  <LoginButton
                    className={classNames(
                      "__wab_instance",
                      sty.loginButton__hypt9
                    )}
                    color={"softSand"}
                    shape={"sharp"}
                    showStartIcon={true}
                    startIcon={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__nmi8I)}
                        displayHeight={"30px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"30px"}
                        loading={"lazy"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3Nwgb
                      )}
                    >
                      {"Company"}
                    </div>
                  </LoginButton>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__pKrwo)}>
                  <LoginButton
                    className={classNames(
                      "__wab_instance",
                      sty.loginButton__yJJkc
                    )}
                    color={"softSand"}
                    shape={"sharp"}
                    showStartIcon={true}
                    startIcon={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__vmnJ6)}
                        displayHeight={"30px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"30px"}
                        loading={"lazy"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3Fog
                      )}
                    >
                      {"Company"}
                    </div>
                  </LoginButton>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___40P5B)}
                >
                  <LoginButton
                    className={classNames(
                      "__wab_instance",
                      sty.loginButton__zfIhK
                    )}
                    color={"softSand"}
                    shape={"sharp"}
                    showStartIcon={true}
                    startIcon={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__xzi2X)}
                        displayHeight={"30px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"30px"}
                        loading={"lazy"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zZqz
                      )}
                    >
                      {"Company"}
                    </div>
                  </LoginButton>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__pgnEh)}>
                  <LoginButton
                    className={classNames(
                      "__wab_instance",
                      sty.loginButton__nvrV3
                    )}
                    color={"softSand"}
                    shape={"sharp"}
                    showStartIcon={true}
                    startIcon={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__ujU9G)}
                        displayHeight={"30px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"30px"}
                        loading={"lazy"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__t1ROr
                      )}
                    >
                      {"Company"}
                    </div>
                  </LoginButton>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__kduJn)}>
                  <LoginButton
                    className={classNames(
                      "__wab_instance",
                      sty.loginButton__s8Zih
                    )}
                    color={"softSand"}
                    shape={"sharp"}
                    showStartIcon={true}
                    startIcon={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__jybl)}
                        displayHeight={"30px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"30px"}
                        loading={"lazy"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__emFeX
                      )}
                    >
                      {"Company"}
                    </div>
                  </LoginButton>
                </div>
              </SliderWrapper>
            );
          })()}
        </div>
        <div
          data-plasmic-name={"container7"}
          data-plasmic-override={overrides.container7}
          className={classNames(projectcss.all, sty.container7)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__oNegP
            )}
          >
            {"Expert"}
          </div>
          <div className={classNames(projectcss.all, sty.freeBox___8PTlx)}>
            <div className={classNames(projectcss.all, sty.freeBox__rwSeo)}>
              <AntdPopover
                data-plasmic-name={"popover"}
                data-plasmic-override={overrides.popover}
                arrow={true}
                className={classNames("__wab_instance", sty.popover)}
                content={
                  <React.Fragment>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__g0IPu)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__o4SA
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___3V0KK
                        )}
                      >
                        {"Brand Strategist"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__yuVG)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__l225Y
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gc8Su
                        )}
                      >
                        {"Creative Director"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__h1BvD)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xZt3Z
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hi2SC
                        )}
                      >
                        {"Art Director"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__qIc1)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zspp9
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___22Nud
                        )}
                      >
                        {"Graphic Designer"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ldjfz)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9ZWIe
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iNTwS
                        )}
                      >
                        {"UX/UI Director"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__iwkae)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0Gwi2
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___3K5Jh
                        )}
                      >
                        {"Copywriter"}
                      </div>
                    </div>
                  </React.Fragment>
                }
                contentText={"Popover contents"}
                defaultOpen={false}
                defaultStylesClassName={classNames(
                  projectcss.root_reset,
                  projectcss.plasmic_default_styles,
                  projectcss.plasmic_mixins,
                  projectcss.plasmic_tokens,
                  plasmic_antd_5_hostless_css.plasmic_tokens,
                  plasmic_plasmic_rich_components_css.plasmic_tokens
                )}
                mouseEnterDelay={0}
                mouseLeaveDelay={0}
                onOpenChange={async (...eventArgs) => {
                  generateStateOnChangeProp($state, ["popover", "open"]).apply(
                    null,
                    eventArgs
                  );
                }}
                open={generateStateValueProp($state, ["popover", "open"])}
                overlayClassName={classNames({
                  [sty["pcls_EeTvH4XhO3Gv"]]: true
                })}
                popoverScopeClassName={sty["popover__popover"]}
                title={"Professionals:"}
              >
                <LoginButton
                  className={classNames(
                    "__wab_instance",
                    sty.loginButton___6Gpgg
                  )}
                  color={"sand"}
                  link={`/affiliate-homepage`}
                  shape={"rounded"}
                  size={"compact"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__f9JQr
                    )}
                  >
                    {"Brand and Visual Identity Development"}
                  </div>
                </LoginButton>
              </AntdPopover>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__sDjcl)}>
              <AntdPopover
                data-plasmic-name={"popover3"}
                data-plasmic-override={overrides.popover3}
                arrow={true}
                className={classNames("__wab_instance", sty.popover3)}
                content={
                  <React.Fragment>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__r6Axz)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uvj61
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__oeKxw
                        )}
                      >
                        {"Brand Strategist"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vmyuq)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dLt1G
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__oySsh
                        )}
                      >
                        {"Creative Director"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__rlNyu)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rSp3X
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bpAgN
                        )}
                      >
                        {"Art Director"}
                      </div>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___7LuVc
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__z2Mjf
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__b0GyR
                        )}
                      >
                        {"Graphic Designer"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__d9Yva)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9A0Ym
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jdCzf
                        )}
                      >
                        {"UX/UI Director"}
                      </div>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___12FCr
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gzQiu
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__t1Ul6
                        )}
                      >
                        {"Copywriter"}
                      </div>
                    </div>
                  </React.Fragment>
                }
                contentText={"Popover contents"}
                defaultOpen={false}
                defaultStylesClassName={classNames(
                  projectcss.root_reset,
                  projectcss.plasmic_default_styles,
                  projectcss.plasmic_mixins,
                  projectcss.plasmic_tokens,
                  plasmic_antd_5_hostless_css.plasmic_tokens,
                  plasmic_plasmic_rich_components_css.plasmic_tokens
                )}
                mouseEnterDelay={0}
                mouseLeaveDelay={0}
                onOpenChange={async (...eventArgs) => {
                  generateStateOnChangeProp($state, ["popover3", "open"]).apply(
                    null,
                    eventArgs
                  );
                }}
                open={generateStateValueProp($state, ["popover3", "open"])}
                overlayClassName={classNames({
                  [sty["pcls_sDZsolYgEz9A"]]: true
                })}
                popoverScopeClassName={sty["popover3__popover"]}
                title={"Professionals:"}
              >
                <LoginButton
                  className={classNames(
                    "__wab_instance",
                    sty.loginButton__m7LRp
                  )}
                  color={"sand"}
                  link={`/affiliate-homepage`}
                  shape={"rounded"}
                  size={"compact"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rLiIg
                    )}
                  >
                    {"Brand and Visual Identity Development"}
                  </div>
                </LoginButton>
              </AntdPopover>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__dTlog)}>
              <AntdPopover
                data-plasmic-name={"popover4"}
                data-plasmic-override={overrides.popover4}
                arrow={true}
                className={classNames("__wab_instance", sty.popover4)}
                content={
                  <React.Fragment>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__hjj9O)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dd9Ny
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dwzhd
                        )}
                      >
                        {"Brand Strategist"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__gyAqY)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nSzYf
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__eDzp
                        )}
                      >
                        {"Creative Director"}
                      </div>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___1M9Sh
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mE9OW
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bEpIo
                        )}
                      >
                        {"Art Director"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__yusx)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lkjuS
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gLcol
                        )}
                      >
                        {"Graphic Designer"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vBbOd)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ejKw
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__thU4N
                        )}
                      >
                        {"UX/UI Director"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__hxO7H)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__g5YTn
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vVCz
                        )}
                      >
                        {"Copywriter"}
                      </div>
                    </div>
                  </React.Fragment>
                }
                contentText={"Popover contents"}
                defaultOpen={false}
                defaultStylesClassName={classNames(
                  projectcss.root_reset,
                  projectcss.plasmic_default_styles,
                  projectcss.plasmic_mixins,
                  projectcss.plasmic_tokens,
                  plasmic_antd_5_hostless_css.plasmic_tokens,
                  plasmic_plasmic_rich_components_css.plasmic_tokens
                )}
                mouseEnterDelay={0}
                mouseLeaveDelay={0}
                onOpenChange={async (...eventArgs) => {
                  generateStateOnChangeProp($state, ["popover4", "open"]).apply(
                    null,
                    eventArgs
                  );
                }}
                open={generateStateValueProp($state, ["popover4", "open"])}
                overlayClassName={classNames({
                  [sty["pcls_qv-7leyuFGr3"]]: true
                })}
                popoverScopeClassName={sty["popover4__popover"]}
                title={"Professionals:"}
              >
                <LoginButton
                  className={classNames(
                    "__wab_instance",
                    sty.loginButton__ubLEn
                  )}
                  color={"sand"}
                  link={`/affiliate-homepage`}
                  shape={"rounded"}
                  size={"compact"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eckuJ
                    )}
                  >
                    {"Brand and Visual Identity Development"}
                  </div>
                </LoginButton>
              </AntdPopover>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__pp1Eg)}>
              <AntdPopover
                data-plasmic-name={"popover2"}
                data-plasmic-override={overrides.popover2}
                arrow={true}
                className={classNames("__wab_instance", sty.popover2)}
                content={
                  <React.Fragment>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__gkrC3)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rcGkD
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___1Aa1L
                        )}
                      >
                        {"PPC Specialist"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__en09E)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__okFyU
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__i3Fy
                        )}
                      >
                        {"Digital Marketing Manager"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__nql2G)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qN7Xp
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__akOT
                        )}
                      >
                        {"SEO Specialist"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__rtDxo)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hcWPm
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gNnBm
                        )}
                      >
                        {"Marketing Analyst"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__twVyL)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bsFGq
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pCtQu
                        )}
                      >
                        {"Data Analyst"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__fPfn)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rvGr2
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kKvy8
                        )}
                      >
                        {"Marketing Automation Specialist"}
                      </div>
                    </div>
                  </React.Fragment>
                }
                contentText={"Popover contents"}
                defaultOpen={false}
                defaultStylesClassName={classNames(
                  projectcss.root_reset,
                  projectcss.plasmic_default_styles,
                  projectcss.plasmic_mixins,
                  projectcss.plasmic_tokens,
                  plasmic_antd_5_hostless_css.plasmic_tokens,
                  plasmic_plasmic_rich_components_css.plasmic_tokens
                )}
                mouseEnterDelay={0}
                mouseLeaveDelay={0}
                onOpenChange={async (...eventArgs) => {
                  generateStateOnChangeProp($state, ["popover2", "open"]).apply(
                    null,
                    eventArgs
                  );
                }}
                open={generateStateValueProp($state, ["popover2", "open"])}
                overlayClassName={classNames({
                  [sty["pcls_zJud4P2pxesw"]]: true
                })}
                popoverScopeClassName={sty["popover2__popover"]}
                title={"Professionals:"}
              >
                <LoginButton
                  className={classNames(
                    "__wab_instance",
                    sty.loginButton__zfSk3
                  )}
                  color={"sand"}
                  link={`/affiliate-homepage`}
                  shape={"rounded"}
                  size={"compact"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__j9FS
                    )}
                  >
                    {"Performance Campaign Management Capability"}
                  </div>
                </LoginButton>
              </AntdPopover>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__qoFxD)}>
              <AntdPopover
                data-plasmic-name={"popover5"}
                data-plasmic-override={overrides.popover5}
                arrow={true}
                className={classNames("__wab_instance", sty.popover5)}
                content={
                  <React.Fragment>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bzZb1)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ebbD6
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wAj1E
                        )}
                      >
                        {"PPC Specialist"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__qHvx1)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sWlv3
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rst7X
                        )}
                      >
                        {"Digital Marketing Manager"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bc9B)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dOrLv
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wx1Yd
                        )}
                      >
                        {"SEO Specialist"}
                      </div>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___0Gw6K
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__i12Cl
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__f6VJm
                        )}
                      >
                        {"Marketing Analyst"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vz7Zw)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xp3M9
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__woDch
                        )}
                      >
                        {"Data Analyst"}
                      </div>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___5BMEq
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__j38W
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yDQvC
                        )}
                      >
                        {"Marketing Automation Specialist"}
                      </div>
                    </div>
                  </React.Fragment>
                }
                contentText={"Popover contents"}
                defaultOpen={false}
                defaultStylesClassName={classNames(
                  projectcss.root_reset,
                  projectcss.plasmic_default_styles,
                  projectcss.plasmic_mixins,
                  projectcss.plasmic_tokens,
                  plasmic_antd_5_hostless_css.plasmic_tokens,
                  plasmic_plasmic_rich_components_css.plasmic_tokens
                )}
                mouseEnterDelay={0}
                mouseLeaveDelay={0}
                onOpenChange={async (...eventArgs) => {
                  generateStateOnChangeProp($state, ["popover5", "open"]).apply(
                    null,
                    eventArgs
                  );
                }}
                open={generateStateValueProp($state, ["popover5", "open"])}
                overlayClassName={classNames({
                  [sty["pcls_YvL3HimkByD6"]]: true
                })}
                popoverScopeClassName={sty["popover5__popover"]}
                title={"Professionals:"}
              >
                <LoginButton
                  className={classNames(
                    "__wab_instance",
                    sty.loginButton__ilsz
                  )}
                  color={"sand"}
                  link={`/affiliate-homepage`}
                  shape={"rounded"}
                  size={"compact"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5D19U
                    )}
                  >
                    {"Performance Campaign Management Capability"}
                  </div>
                </LoginButton>
              </AntdPopover>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__aohyh)}>
              <AntdPopover
                data-plasmic-name={"popover6"}
                data-plasmic-override={overrides.popover6}
                arrow={true}
                className={classNames("__wab_instance", sty.popover6)}
                content={
                  <React.Fragment>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__gxazk)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tieaQ
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__i0HNz
                        )}
                      >
                        {"PPC Specialist"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__cFx2C)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___58Ohy
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gftkz
                        )}
                      >
                        {"Digital Marketing Manager"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__mlePv)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___44Q9I
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iqaUq
                        )}
                      >
                        {"SEO Specialist"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__mWvi9)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__v130F
                        )}
                      >
                        {"\u2611"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gYayh
                        )}
                      >
                        {"Marketing Analyst"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__wq43M)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kZvnd
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9JSLj
                        )}
                      >
                        {"Data Analyst"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__iNrXq)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__l1AQw
                        )}
                      >
                        {"\u2610"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8D2Sr
                        )}
                      >
                        {"Marketing Automation Specialist"}
                      </div>
                    </div>
                  </React.Fragment>
                }
                contentText={"Popover contents"}
                defaultOpen={false}
                defaultStylesClassName={classNames(
                  projectcss.root_reset,
                  projectcss.plasmic_default_styles,
                  projectcss.plasmic_mixins,
                  projectcss.plasmic_tokens,
                  plasmic_antd_5_hostless_css.plasmic_tokens,
                  plasmic_plasmic_rich_components_css.plasmic_tokens
                )}
                mouseEnterDelay={0}
                mouseLeaveDelay={0}
                onOpenChange={async (...eventArgs) => {
                  generateStateOnChangeProp($state, ["popover6", "open"]).apply(
                    null,
                    eventArgs
                  );
                }}
                open={generateStateValueProp($state, ["popover6", "open"])}
                overlayClassName={classNames({
                  [sty["pcls_qw9cdJM22JpK"]]: true
                })}
                popoverScopeClassName={sty["popover6__popover"]}
                title={"Professionals:"}
              >
                <LoginButton
                  className={classNames(
                    "__wab_instance",
                    sty.loginButton__q1AmF
                  )}
                  color={"sand"}
                  link={`/affiliate-homepage`}
                  shape={"rounded"}
                  size={"compact"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nfWbr
                    )}
                  >
                    {"Performance Campaign Management Capability"}
                  </div>
                </LoginButton>
              </AntdPopover>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"container8"}
          data-plasmic-override={overrides.container8}
          className={classNames(projectcss.all, sty.container8)}
        >
          <YouTube
            data-plasmic-name={"youTube"}
            data-plasmic-override={overrides.youTube}
            className={classNames("__wab_instance", sty.youTube)}
            videoId={"R6MeLqRQzYw"}
          />

          <div className={classNames(projectcss.all, sty.freeBox__pNb3M)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___0R1Tb
              )}
            >
              {"How we work"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fik7W
              )}
            >
              {
                "Our differential: Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
              }
            </div>
            <PlasmicLink__
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__yGvt
              )}
              href={"https://www.plasmic.app/"}
              platform={"react"}
            >
              {"Some link text"}
            </PlasmicLink__>
          </div>
        </div>
        <div
          data-plasmic-name={"container9"}
          data-plasmic-override={overrides.container9}
          className={classNames(projectcss.all, sty.container9)}
        >
          <div className={classNames(projectcss.all, sty.freeBox__jpZpr)}>
            <AntdRate
              data-plasmic-name={"rate"}
              data-plasmic-override={overrides.rate}
              allowHalf={true}
              className={classNames("__wab_instance", sty.rate)}
              defaultValue={5}
              disabled={true}
              multiCharacter={false}
              onChange={async (...eventArgs) => {
                generateStateOnChangeProp($state, ["rate", "value"]).apply(
                  null,
                  eventArgs
                );
              }}
              symbols={
                <React.Fragment>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___9KNj6
                    )}
                  >
                    {"1"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sm80
                    )}
                  >
                    {"2"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__r6Cy
                    )}
                  >
                    {"3"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4HXh0
                    )}
                  >
                    {"4"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3XxAy
                    )}
                  >
                    {"5"}
                  </div>
                </React.Fragment>
              }
              value={generateStateValueProp($state, ["rate", "value"])}
            />

            <div className={classNames(projectcss.all, sty.freeBox__lssZ4)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vuI31
                )}
              >
                {"50"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kStba
                )}
              >
                {" reviews"}
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__rhIwD)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__eu1X9
              )}
            >
              {"80"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__l8SSu
              )}
            >
              {"goals achieved"}
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "topBar",
    "navigationBar",
    "account",
    "button",
    "container3",
    "svg",
    "sliderCarousel",
    "container2",
    "textarea",
    "inviteButon",
    "container10",
    "sliderCarousel2",
    "container7",
    "popover",
    "popover3",
    "popover4",
    "popover2",
    "popover5",
    "popover6",
    "container8",
    "youTube",
    "container9",
    "rate"
  ],

  topBar: ["topBar", "navigationBar", "account", "button"],
  navigationBar: ["navigationBar"],
  account: ["account", "button"],
  button: ["button"],
  container3: ["container3", "svg", "sliderCarousel"],
  svg: ["svg"],
  sliderCarousel: ["sliderCarousel"],
  container2: ["container2", "textarea", "inviteButon"],
  textarea: ["textarea"],
  inviteButon: ["inviteButon"],
  container10: ["container10", "sliderCarousel2"],
  sliderCarousel2: ["sliderCarousel2"],
  container7: [
    "container7",
    "popover",
    "popover3",
    "popover4",
    "popover2",
    "popover5",
    "popover6"
  ],

  popover: ["popover"],
  popover3: ["popover3"],
  popover4: ["popover4"],
  popover2: ["popover2"],
  popover5: ["popover5"],
  popover6: ["popover6"],
  container8: ["container8", "youTube"],
  youTube: ["youTube"],
  container9: ["container9", "rate"],
  rate: ["rate"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicAFindCommunities__ArgProps,
          internalVariantPropNames: PlasmicAFindCommunities__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicAFindCommunities__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAFindCommunities";
  } else {
    func.displayName = `PlasmicAFindCommunities.${nodeName}`;
  }
  return func;
}

export const PlasmicAFindCommunities = Object.assign(
  // Top-level PlasmicAFindCommunities renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    topBar: makeNodeComponent("topBar"),
    navigationBar: makeNodeComponent("navigationBar"),
    account: makeNodeComponent("account"),
    button: makeNodeComponent("button"),
    container3: makeNodeComponent("container3"),
    svg: makeNodeComponent("svg"),
    sliderCarousel: makeNodeComponent("sliderCarousel"),
    container2: makeNodeComponent("container2"),
    textarea: makeNodeComponent("textarea"),
    inviteButon: makeNodeComponent("inviteButon"),
    container10: makeNodeComponent("container10"),
    sliderCarousel2: makeNodeComponent("sliderCarousel2"),
    container7: makeNodeComponent("container7"),
    popover: makeNodeComponent("popover"),
    popover3: makeNodeComponent("popover3"),
    popover4: makeNodeComponent("popover4"),
    popover2: makeNodeComponent("popover2"),
    popover5: makeNodeComponent("popover5"),
    popover6: makeNodeComponent("popover6"),
    container8: makeNodeComponent("container8"),
    youTube: makeNodeComponent("youTube"),
    container9: makeNodeComponent("container9"),
    rate: makeNodeComponent("rate"),
    // Metadata about props expected for PlasmicAFindCommunities
    internalVariantProps: PlasmicAFindCommunities__VariantProps,
    internalArgProps: PlasmicAFindCommunities__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Community Dashboard",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicAFindCommunities;
/* prettier-ignore-end */
